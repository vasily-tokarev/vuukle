{"version":3,"sources":["webpack:///./tools/inferno-compat.tsx","webpack:///./app/services/urlSearchParams.ts","webpack:///./app/modules/Auth/stores/index.ts","webpack:///./app/modules/Auth/stores/authStore.ts","webpack:///./app/services/apis/PerspectiveAPI.ts","webpack:///./app/modules/GifPicker/utils.ts","webpack:///./app/utils/req.ts","webpack:///./app/services/apis/index.ts","webpack:///./app/services/communication/windowProxy.ts","webpack:///./app/services/communication/initListener.ts","webpack:///./app/services/communication/sendEvents.ts","webpack:///./app/services/communication/index.ts","webpack:///./app/modules/CommentList/store/CommentItem.ts","webpack:///./app/modules/CommentList/store/index.tsx","webpack:///./app/modules/Auth/stores/userStore.ts","webpack:///./app/stores/translationStore.ts","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/RecommendButton.tsx","webpack:///./app/containers/Header.tsx","webpack:///./app/components/SortingRow.tsx","webpack:///./app/modules/Auth/components/EmailInput.tsx","webpack:///./app/modules/Auth/components/PasswordInput.tsx","webpack:///./app/modules/Auth/components/StyledForm.tsx","webpack:///./app/modules/Auth/ProtectedAuth.tsx","webpack:///./app/modules/EditCommentBox/components/EditFormWrapper.tsx","webpack:///./app/components/TextareaFooter.tsx","webpack:///./app/modules/RichEditor/components/EditorBox.tsx","webpack:///./app/modules/GifPicker/GifItem.tsx","webpack:///./app/modules/GifPicker/GifPicker.tsx","webpack:///./app/modules/RichEditor/components/Options.tsx","webpack:///./app/modules/RichEditor/components/GIFDropdown/Icon.tsx","webpack:///./app/modules/RichEditor/components/GIFDropdown/GIFDropdown.tsx","webpack:///./app/modules/RichEditor/components/ImagePreview.tsx","webpack:///./app/modules/RichEditor/components/ImagesPreview.tsx","webpack:///./app/modules/RichEditor/components/UploadImageButton/CameraIcon.tsx","webpack:///./app/modules/RichEditor/components/UploadImageButton/index.tsx","webpack:///./app/modules/RichEditor/utils.ts","webpack:///./app/modules/RichEditor/stores/Formatting.ts","webpack:///./app/modules/RichEditor/components/Icons.tsx","webpack:///./app/modules/RichEditor/RichEditor.tsx","webpack:///./app/modules/WriteComment/components/ToxicityMeter.tsx","webpack:///./app/modules/WriteComment/components/EnglishBox.tsx","webpack:///./app/modules/WriteComment/components/Textarea.tsx","webpack:///./app/modules/WriteComment/stores/models/Transliteration.ts","webpack:///./app/modules/WriteComment/stores/models/ImageUpload.ts","webpack:///./app/modules/WriteComment/components/ForeignBox.tsx","webpack:///./app/modules/WriteComment/stores/models/CommentBox.ts","webpack:///./app/modules/WriteComment/stores/models/SpamValidationModel.ts","webpack:///./app/modules/WriteComment/stores/models/ToxicityValidationModel.ts","webpack:///./app/modules/EditCommentBox/stores/EnglishEditBox.ts","webpack:///./app/modules/EditCommentBox/stores/ForeignEditBox.ts","webpack:///./app/modules/EditCommentBox/EditCommentBox.tsx","webpack:///./app/modules/WriteComment/stores/EnglishBox.ts","webpack:///./app/modules/WriteComment/stores/ForeignBox.ts","webpack:///./app/components/ProfileRow.tsx","webpack:///./app/modules/Auth/components/SocialAuth.tsx","webpack:///./app/modules/Auth/components/PrivacyCheckbox.tsx","webpack:///./app/modules/Auth/PasswordAuth.tsx","webpack:///./app/modules/Auth/components/NameInput.tsx","webpack:///./app/modules/Auth/PasswordlessAuth.tsx","webpack:///./app/modules/Auth/SignUp.tsx","webpack:///./app/modules/Auth/SSO.tsx","webpack:///./app/modules/Auth/index.tsx","webpack:///./app/modules/WriteComment/components/FormWrapper.tsx","webpack:///./app/modules/WriteComment/WriteComment.tsx","webpack:///./app/modules/CommentList/components/CommentItem.tsx","webpack:///./app/modules/CommentList/CommentList.tsx","webpack:///./app/modules/RecommendedArticles/components/ArticlesWrapper.tsx","webpack:///./app/modules/RecommendedArticles/RecommendedArticles.tsx","webpack:///./app/containers/App.tsx","webpack:///./app/index.tsx","webpack:///./app/utils/index.ts","webpack:///./app/stores/widgetStore.ts","webpack:///./app/modules/RecommendedArticles/store.ts","webpack:///./app/services/auth.ts","webpack:///./app/stores/models/Alert.ts"],"names":["__webpack_require__","d","__webpack_exports__","unstable_batchedUpdates","inferno_compat__WEBPACK_IMPORTED_MODULE_0__","create_inferno_context__WEBPACK_IMPORTED_MODULE_1__","create_inferno_context__WEBPACK_IMPORTED_MODULE_1___default","n","a","Children","Component","EMPTY_OBJ","Fragment","PropTypes","PureComponent","_CI","_HI","_M","_MCCC","_ME","_MFCC","_MP","_MR","_MT","__render","cloneElement","cloneVNode","createClass","createComponentVNode","createElement","createFactory","createFragment","createPortal","createRef","createRenderer","createTextVNode","createVNode","directClone","findDOMNode","findDOMfromVNode","forwardRef","getFlagsForElementVnode","hydrate","isValidElement","linkEvent","normalizeProps","options","render","rerender","unmountComponentAtNode","unstable_renderSubtreeIntoContainer","version","createContext","urlSearchParams","URLSearchParams","window","location","search","_authStore__WEBPACK_IMPORTED_MODULE_0__","_userStore__WEBPACK_IMPORTED_MODULE_1__","AuthStore","_this","this","_classCallCheck","inProgress","error","facebookEnabled","get","googleEnabled","twitterEnabled","disqusEnabled","withVuukle","withPassword","signOut","userStore","forgetUser","signIn","_ref","_asyncToGenerator","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","email","password","response","wrap","_context","prev","next","isCookiesAllowed","openCORSModal","authAPIs","sent","isPasswordEntered","Array","isArray","errors","Error","translation","messages","incorrectDetails","token","authorizeWithToken","abrupt","t0","message","finish","stop","_x","_x2","apply","arguments","signInWithoutPassword","_ref2","_callee2","name","avatar","_args2","_context2","length","undefined","trim","validateFields","withoutPassword","data","authTicket","_x3","_x4","signUp","_ref3","_callee3","_context3","register","success","_x5","_x6","_x7","_callee4","authModal","_context4","open","concat","origin","process","Promise","resolve","reject","oauthInterval","setInterval","closed","clearInterval","signInWithSocial","network","reportEvent","callback","path","env","GOOGLE_LOGIN_LINK","TWITTER_LOGIN_LINK","DISQUS_LOGIN_LINK","FACEBOOK_LOGIN_LINK","oauthWindow","openSSO","callSSOMethod","closeAlert","isValidName","isOffensive","common","invalidName","isValidEmail","invalidEmail","signInUser","isAuthorized","_createClass","key","document","cookie","cookiesAllowed","indexOf","decorate","observable","withSSO","computed","action","PerspectiveAPI","model","xhr","XMLHttpRequest","send","comment","cancel","req","reqParams","text","languages","requestedAttributes","_defineProperty","PERSEPECTIVE_API_KEY","setRequestHeader","onload","JSON","parse","value","Math","round","attributeScores","summaryScore","err","onerror","statusText","onabort","stringify","abort","getTrendingGIFs","getSearchGIFs","GIPHY_TOKEN","status","searchQuery","Request","method","url","requireAuth","contentType","baseParams","params","mergedParams","_objectSpread","obj","Object","keys","filter","map","join","serialize","commentsApis","perspectiveAPIs","commentLikesAPIs","commentFlagAPIs","recommendAPIs","apiKey","widgetStore","articleId","article","id","host","pageSize","sortBy","start","getByID","commentId","makeRequest","initialLoading","globalRecommendation","articlesStore","global","commentsStore","toLoad","uri","post","commentText","toxicity","spam","parentId","parentTimestamp","lang","spamValue","articleAvatar","img","tag","tags","title","r","hashCode","s","then","edit","changeStatus","commentIDs","state","me","ageRange","pictureUrl","spamModel","toxicModel","delete","windowProxy","Porthole","WindowProxy","href","initializeListener","addEventListener","event","makeDevLog","authenticationObject","authStore","authenticateUser","authorizeSilently","recommendCount","syncWidget","votes","isRecommended","voted","CommentsStore","getCommentDetailsByID","loadComment","syncInitialLoadPorthole","shares","articleData","commentCount","recommendations","openModalWidgetAuth","additionalParams","modalData","hideModal","type","openModalWidgetProfile","profile","openLinkInModal","link","logCommentToPublisher","commentAdded","vuukle_event","details","eventType","logCommentToWordPress","dateAdded","Date","toISOString","comment_ID","comment_agent","comment_approved","comment_author","comment_author_IP","comment_author_url","slugify","userId","comment_content","comment_date","comment_date_gmt","comment_karma","comment_parent","comment_post_ID","comment_type","user_id","label","callSSO","syncRecommendations","sendEvents_syncInitialLoadPorthole","sendEvents_openModalWidgetAuth","sendEvents_openModalWidgetProfile","sendEvents_openLinkInModal","sendEvents_reportEvent","sendEvents_callSSOMethod","sendEvents_syncRecommendations","Comment","_descriptor","_applyDecoratedDescriptor","_class","selfRemove","loading","bottomAlert","Alert","topAlert","replies","showReplyBox","collapsed","currentSessionLiked","hidden","_initializerDefineProperty","_descriptor2","openAuth","getCommentTextForRender","makeSafeHTML","getCommentTextOnly","removeHTMLTags","toggleLike","ownCommentVote","timeout","dislike","like","share","social","openWindow","shareLink","encodeURIComponent","replace","substring","toLocaleLowerCase","urlInstance","URL","hash","report","regenerator_default","reportResponse","confirm","flagQuestion","flaggedMessage","result","alreadyReported","pathOr","setTimeout","editComment","moderationMessage","when","editMode","addReply","unshift","remove","toggleReplyBox","collapse","showCommenterProfile","points","userPoints","reply","replyItem","_descriptor3","_descriptor4","authorType","createdTimestamp","likeCount","decodeString","timeago","timeAgo","topComment","kFormatter","decodeURIComponent","e","reaction","authorized","_editMode","set","enable","editingWithReplies","prototype","configurable","enumerable","writable","initializer","_this2","_this3","likeResponse","alreadyVoted","_this4","isOwner","SortingType","store_descriptor","store_applyDecoratedDescriptor","store_class","store_classCallCheck","totalComments","comments","selectedComment","moreAvailable","sorting","Latest","syncWithWP","removeComment","commentInstance","changeSorting","store_asyncToGenerator","loadComments","loadMoreComments","addComment","initialLoadSuccess","createCommentsWithRecursion","store_initializerDefineProperty","parseInt","store_createClass","_getCommentDetailsByID","ID","createCommentWithReplies","removeFn","_CommentItem$replies","CommentItem","push","_toConsumableArray","_CommentItem$replies2","_this3$comments","_args4","items","UserStore","authResponse","isModerator","siteList","includes","setUserApiKey","invalidLogin","removeUserApiKey","cookieToken","getToken","_token","saveToken","removeToken","ramda_src_mergeDeepRight__WEBPACK_IMPORTED_MODULE_0__","ramda_src_mergeDeepRight__WEBPACK_IMPORTED_MODULE_0___default","services_urlSearchParams__WEBPACK_IMPORTED_MODULE_1__","initialCustomText","writeComment","blankName","blankEmail","blankPassword","blankComment","or","to","recommend","recommended","readMore","showLess","point","moderator","signInWith","signInWithVuukle","signUpWithVuukle","expand","myProfile","myComments","long","messageTooLong","charlimits","commentsClosed","alreadySubmitted","almostSame","errorSubmitting","spammerComment","spamComment","errorContactVuukle","noComments","noCommentsInSorting","toxicityLimit","emailExists","signInQuestion","signUpQuestion","missingPassword","passwordReset","blockedIp","blockedEmail","protectedAction","seconds","minutes","hours","days","months","years","locale","shareIcons","facebook","linkedin","twitter","login","google","disqus","when1","whenX","editorsPick","latest","more","mostLiked","mostReplied","oldest","buttons","liked","loadMore","showMoreArticles","footer","addVuukle","privacy","recommendedStories","customTextFromUrl","mergeDeepRight","console","warn","StyledFooter","styled","className","inferno_compat","target","rel","viewBox","xmlns","withConfig","displayName","componentId","props","theme","mutedColor","primaryColor","StyledRecommendButton","recommends","_ref$inProgress","onClick","Button","sm","active","role","aria-label","Tag","Wrapper","header","Header","inject","observer","React","injected","components_RecommendButton","recommendInProgress","StyledSortingRow","onSelect","tabs_src","Dropdown","align","menu","src","Item","Icon","EmailInput","onChange","_ref$disabled","disabled","Input","placeholder","dir","required","PasswordInput","_ref$minLength","minLength","maxLength","form","ProtectedAuth","uniqueId","onSubmit","preventDefault","setState","handleInputChange","currentTarget","_this$injected$authSt","StyledForm","components_EmailInput","components_PasswordInput","onClose","style","textAlign","margin","htmlType","div","EditFormWrapper","renderAlert","alert","renderAuthenticatedActions","closeEditor","EditFormWrapper_Wrapper","Avatar","children","marginTop","authenticatedWithPassword","Auth_ProtectedAuth","TextareaFooterWrapper","darken","input","background","focused","border","StyledEditor","rows","Editor","onPaste","clipboardData","getData","execCommand","onKeyDown","callUpperHandler","keyCode","onInput","innerHTML","contentEditable","ref","onFocus","onBlur","dangerouslySetInnerHTML","__html","defaultProps","EditorBox_Editor","_extends","Image","GifWrapper","GifItem","image","SearchResult","GifPicker","GifPicker_classCallCheck","GifPicker_possibleConstructorReturn","GifPicker_getPrototypeOf","call","onSearchInputChange","searchValue","searchGIFs","getTrending","trendingResponse","GIFs","debounce","searchResponse","renderGifItems","gif","GifPicker_GifItem","images","fixed_height_small","downsized_medium","button","textColor","Options","Options_Wrapper","option","Options_Button","icon","GIFIcon","x","y","GIFDropdown","wrapperRef","displayMenu","showMenu","hideMenu","current","querySelector","contains","removeEventListener","renderMenu","modules_GifPicker_GifPicker","GIFLink","GIFDropdown_Wrapper","GIFDropdown_Icon","EntityItem","ImageEntity","onRemove","width","height","alt","Link","light","ImagePreview","CameraIcon","StyledUploadButton","onFileInputChange","as","for","UploadImageButton_CameraIcon","accept","whichTag","tagName","sel","getSelection","containerNode","tagFound","toUpperCase","rangeCount","getRangeAt","commonAncestorContainer","nodeType","parentNode","Formatting","Formatting_classCallCheck","formattingState","isEdgeBrowser","documentMode","test","navigator","userAgent","updateFormattingState","getFormattingState","formatBlock","command","focus","queryCommandState","queryCommandValue","removeAttributes","querySelectorAll","forEach","item","HTMLElement","removeAttribute","insertList","_this$formattingState","italic","bold","underline","blockquote","pre","ul","formatText","commandId","RichEditor_classCallCheck","RichEditor_possibleConstructorReturn","RichEditor_getPrototypeOf","formattingStore","FormattingStore","onEditorClick","onEditorFocus","isFocused","onEditorBlur","onEditorKeyDown","onEditorChange","html","innerText","onUploadChange","files","from","File","addImage","RichEditor_Wrapper","EditorBox","components_ImagesPreview","removeImage","showFormattingRow","components_Options","imagesDisabled","hideUploadImage","UploadImageButton","components_GIFDropdown_GIFDropdown","ballScale","keyframes","toxicAnimation","mediumAnimation","lowAnimation","fadeIn","Progress","css","Span","ToxicityMeter","_ref$visibilityLimit","visibilityLimit","_ref$toxicityText","toxicityText","_objectWithoutProperties","ToxicityMeter_extends","marginRight","WriteCommentBox","EnglishBox_classCallCheck","EnglishBox_possibleConstructorReturn","EnglishBox_getPrototypeOf","boxStore","uploadImage","add","RichEditor","uploadLimitExceeded","minimized","TextareaFooter","toxicityModel","limit","components_ToxicityMeter","allowedCharactersCount","renderContent","StyledTextArea","Textarea","color","TextareaWrapper","Textarea_extends","Transliteration","Transliteration_classCallCheck","enabled","languageCode","currentLanguage","enabledByDefault","transliterationControl","loaded","am","ar","bn","el","en","fa","gu","hi","kn","ml","mr","ne","pa","ru","sa","si","sr","ta","te","ti","ur","zn","transliterationBoxes","toggleBox","has","makeTransliteratable","disableTransliteration","enableTransliteration","toggleLanguage","loadTransliteration","loadJS","fileRef","setAttribute","getElementsByTagName","appendChild","elements","transliteration","TransliterationControl","destinationLanguage","sourceLanguage","transliterationEnabled","catch","Set","Transliteration_createClass","language","models_Transliteration","Errors","ForeignBox","ForeignBox_classCallCheck","ForeignBox_possibleConstructorReturn","ForeignBox_getPrototypeOf","transliterationStore","TransliterationStore","handleTextAreaChange","foreignStore","textarea","HTMLTextAreaElement","minRows","maxRows","padding","lineHeight","textTransform","alerts","ImageUpload_defineProperty","_alerts","error_saving_image","limit_exceeded","unknown","wrong_format","ImageUpload","setAlert","ImageUpload_classCallCheck","allowedFormats","uploadAPI","imageUrl","ImageUpload_asyncToGenerator","imageFile","fileExtension","uploadResponse","split","pop","size","FormData","append","imgLink","CommentErrors","alertMessages","CommentBox_defineProperty","_alertMessages","blank_comment","similar_comment","long_comment","repeat_comment","spammer","moderation","ip_blocked","email_blocked","CommentBox","CommentBox_classCallCheck","CommentBox_initializerDefineProperty","CommentBox_descriptor","CommentBox_descriptor2","CommentBox_descriptor3","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","getTextFromHTML","_value","commentHTML","lengthLimit","min","_this5","computedHTML","match","SpamValidation","SpamValidationModel_classCallCheck","confirmed","getValue","SpamValidationModel_asyncToGenerator","limitFromUrl","searchParams","SpamValidationModel_createClass","ToxicityValidation","ToxicityValidationModel_descriptor","ToxicityValidationModel_applyDecoratedDescriptor","ToxicityValidationModel_class","ToxicityValidationModel_classCallCheck","checkingTimout","ToxicityValidationModel_asyncToGenerator","clearTimeout","getToxicity","ToxicityValidationModel_initializerDefineProperty","ToxicityValidationModel_createClass","EnglishEditBox","commentID","initialText","successCallback","EnglishEditBox_classCallCheck","EnglishEditBox_possibleConstructorReturn","EnglishEditBox_getPrototypeOf","ToxicityValidationModel","SpamValidationModel","EnglishEditBox_asyncToGenerator","Event","preSubmit","toString","t1","wrapper","getAttribute","p","ForeignEditBox","ForeignEditBox_classCallCheck","ForeignEditBox_possibleConstructorReturn","ForeignEditBox_getPrototypeOf","ForeignEditBox_asyncToGenerator","EditCommentBox","EditCommentBox_classCallCheck","EditCommentBox_possibleConstructorReturn","EditCommentBox_getPrototypeOf","store","EnglishBoxStore","ForeignBoxStore","EnglishBox","components_ForeignBox","components_EditFormWrapper","close","renderEditor","WriteBox","parentID","stores_EnglishBox_classCallCheck","stores_EnglishBox_possibleConstructorReturn","stores_EnglishBox_getPrototypeOf","EnglishBox_initializerDefineProperty","EnglishBox_descriptor","stores_EnglishBox_assertThisInitialized","SpamValidationStore","EnglishBox_descriptor2","commentingDisabled","ToxicityValidationStore","stores_ForeignBox_classCallCheck","stores_ForeignBox_possibleConstructorReturn","stores_ForeignBox_getPrototypeOf","ForeignBox_asyncToGenerator","documentElement","updateTextareaValue","StyledDropDown","isArabic","ProfileRow","showComments","marginBottom","outline","boxShadow","SocialAuthWrapper","SocialAuth","SocialButton","PrivacyCheckbox","htmlFor","PasswordAuth","PasswordAuth_defineProperty","components_PrivacyCheckbox","toggleView","NameInput","pattern","PasswordLessAuth","components_NameInput","SignUp","SignUp_defineProperty","SSOButton","Auth","Auth_classCallCheck","Auth_possibleConstructorReturn","Auth_getPrototypeOf","showSignUp","renderVuukleAuth","Auth_SignUp","Auth_PasswordAuth","PasswordlessAuth","withSocial","components_SocialAuth","SSO","AuthStyled","FormWrapper","openProfileModal","isDisabled","isCollapsed","isReply","handleSubmit","components_ProfileRow","isClicked","modules_Auth","HOCDecision","WriteComment_classCallCheck","WriteComment_possibleConstructorReturn","WriteComment_getPrototypeOf","components_FormWrapper","renderCommentBox","isDark","RepliesWrapper","getDropdownOptions","renderCommentHeader","verticalAlign","_this$props","CommentItem_Wrapper","modules_EditCommentBox_EditCommentBox","onUserClick","TruncateText","seeMore","likes","dislikes","date","minimize","actions","Action","Share","highlighted","WriteComment","commentItem","Comments","_this$injected$commen","Loader","components_SortingRow","components_CommentItem","display","StyledArticlesWrapper","articles","_ref$showMoreButton","showMoreButton","onMoreButtonClick","_ref$isVerticalCards","isVerticalCards","_ref$className","Card","heading","excerpt","linkRel","mode","Articles","RecommendedArticles_Wrapper","components_ArticlesWrapper","moreArticlesAvailable","stores","sortedBy","setArticlesFromServer","defaultTotCount","App","index_module","containers_Header","CommentList_Comments","RecommendedArticles","components_Footer","HTML_NODE","BODY_NODE","MOUNT_NODE","getElementById","generateTheme","GlobalStyles","generateGlobalStyles","ReactDOM","styled_components_browser_esm","App_App","operamini","element","backgroundColor","insertBefore","firstChild","oldHeight","offsetHeight","newHeight","parent","postMessage","sourceOrigin","sourceWindowName","widget","log","createTitleExcerpt","_vuukle_utils__WEBPACK_IMPORTED_MODULE_0__","stores_translationStore__WEBPACK_IMPORTED_MODULE_1__","str","i","charCodeAt","monthsOptions","month","day","roundTime","val","String","abs","time","getTime","toLocaleDateString","timeAgoBuilder","truncateString","WidgetStore","Cookies","expires","author","refHost","darkMode","font","ArticlesStore","articlesToShow","articlesToShowBeforeExpand","slice","getOwnPropertyDescriptor","SESSION_COOKIE_NAME","domain","alertTimeout","alertValue","alertObj"],"mappings":"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","file":"main.e12c8679.js","sourcesContent":["// tslint:disable\nimport {\n  Children,\n  Component,\n  EMPTY_OBJ,\n  Fragment,\n  PropTypes,\n  PureComponent,\n  // Internal methods\n  _CI,\n  _HI,\n  _M,\n  _MCCC,\n  _ME,\n  _MFCC,\n  _MP,\n  _MR,\n  _MT,\n  __render,\n  // Public methods\n  cloneElement,\n  cloneVNode,\n  createClass,\n  createComponentVNode,\n  createElement,\n  createFactory,\n  createFragment,\n  createPortal,\n  createRef,\n  createRenderer,\n  createTextVNode,\n  createVNode,\n  directClone,\n  findDOMNode,\n  findDOMfromVNode,\n  forwardRef,\n  getFlagsForElementVnode,\n  hydrate,\n  isValidElement,\n  linkEvent,\n  normalizeProps,\n  options,\n  render,\n  rerender,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  version,\n} from 'inferno-compat';\nimport createContext from 'create-inferno-context';\n\nconst unstable_batchedUpdates = null;\n\nexport {\n  Children,\n  Component,\n  EMPTY_OBJ,\n  Fragment,\n  PropTypes,\n  PureComponent,\n  // Internal methods\n  _CI,\n  _HI,\n  _M,\n  _MCCC,\n  _ME,\n  _MFCC,\n  _MP,\n  _MR,\n  _MT,\n  __render,\n  // Public methods\n  cloneElement,\n  cloneVNode,\n  createClass,\n  createComponentVNode,\n  createElement,\n  createFactory,\n  createFragment,\n  createPortal,\n  createRef,\n  createRenderer,\n  createTextVNode,\n  createVNode,\n  directClone,\n  findDOMNode,\n  findDOMfromVNode,\n  forwardRef,\n  getFlagsForElementVnode,\n  hydrate,\n  isValidElement,\n  linkEvent,\n  normalizeProps,\n  options,\n  render,\n  rerender,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  version,\n  createContext, // <-- Add it here\n  unstable_batchedUpdates,\n};\nexport default {\n  Children,\n  Component,\n  EMPTY_OBJ,\n  Fragment,\n  PropTypes,\n  PureComponent,\n  // Internal methods\n  _CI,\n  _HI,\n  _M,\n  _MCCC,\n  _ME,\n  _MFCC,\n  _MP,\n  _MR,\n  _MT,\n  __render,\n  // Public methods\n  cloneElement,\n  cloneVNode,\n  createClass,\n  createComponentVNode,\n  createElement,\n  createFactory,\n  createFragment,\n  createPortal,\n  createRef,\n  createRenderer,\n  createTextVNode,\n  createVNode,\n  directClone,\n  findDOMNode,\n  findDOMfromVNode,\n  forwardRef,\n  getFlagsForElementVnode,\n  hydrate,\n  isValidElement,\n  linkEvent,\n  normalizeProps,\n  options,\n  render,\n  rerender,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  version,\n  createContext, // <-- And here\n  unstable_batchedUpdates,\n};\n","/**\n * @file urlSearchParams.ts\n * @description this is helper service to import URLSearchParams instead of creating it in every place\n * we need it\n */\nconst urlSearchParams: URLSearchParams = new URLSearchParams(window.location.search);\nexport default urlSearchParams;\n","export { default as authStore, AuthStore } from './authStore';\nexport { default as userStore, UserStore } from './userStore';\n","import { isOffensive, isValidEmail, isValidName } from '@vuukle/utils';\nimport { action, computed, decorate, observable } from 'mobx';\nimport { authAPIs } from 'services/apis';\nimport { callSSOMethod, reportEvent } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\nimport translation from 'stores/translationStore';\nimport userStore from './userStore';\n\nexport class AuthStore {\n  /** Determines if API is in progress and we are waiting for data */\n  public inProgress: boolean = false;\n  /** Error happened */\n  public error: string | null = null;\n  /** Configurable values */\n  public readonly facebookEnabled: boolean = urlSearchParams.get('fAuth') !== 'false'; // show social auth\n  public readonly googleEnabled: boolean = urlSearchParams.get('gAuth') !== 'false';\n  public readonly twitterEnabled: boolean = urlSearchParams.get('tAuth') !== 'false';\n  public readonly disqusEnabled: boolean = urlSearchParams.get('dAuth') !== 'false';\n  public readonly withVuukle: boolean = urlSearchParams.get('vuukleAuth') !== 'false'; // show Vuukle auth\n  public readonly withPassword: boolean = urlSearchParams.get('passwordAuth') === 'true'; // Password Auth + Available form to sign up\n  /** Publisher SSO(auth method) is enabled only if everything is turned off */\n  public get withSSO() {\n    return (\n      !this.facebookEnabled && !this.googleEnabled && !this.twitterEnabled && !this.disqusEnabled && !this.withVuukle\n    );\n  }\n\n  constructor() {\n    /** Handler for publishers using widget inside webView to authorize users */\n    (window as any).signInUser = (name: any, email: any, avatar: any = '') => {\n      if (\n        typeof name === 'string' &&\n        typeof email === 'string' &&\n        name.length > 2 &&\n        email.length > 3 &&\n        !userStore.isAuthorized\n      ) {\n        this.signInWithoutPassword(name, email, avatar);\n      }\n    };\n  }\n\n  /**\n   * @name signOut\n   * @description remove user session and token\n   * @see {@link userStore#forgetUser}\n   * @return {void}\n   */\n  public signOut = userStore.forgetUser;\n\n  /** Detect if cookies allowed */\n  get isCookiesAllowed() {\n    document.cookie = 'vuukle_cookie_test=true';\n    const cookiesAllowed = document.cookie.indexOf('vuukle_cookie_test') !== -1;\n    document.cookie = 'vuukle_cookie_test=true; expires=Thu, 01-Jan-1970 00:00:01 GMT';\n    return cookiesAllowed;\n  }\n\n  /**\n   * @public\n   * @name signIn\n   * @description Login user using API\n   * @param {string} email\n   * @param {string} password\n   * @return {Promise<boolean>} - true or false based if process is successful or not\n   */\n  public signIn = async (email: string, password: string): Promise<boolean> => {\n    this.inProgress = true;\n    this.error = null;\n    try {\n      /** Check CORS limits */\n      if (!this.isCookiesAllowed) {\n        await this.openCORSModal();\n      }\n\n      const response = await authAPIs.withPassword(email, password);\n      if (!response.isPasswordEntered || Array.isArray(response.errors)) {\n        throw new Error(translation.messages.incorrectDetails);\n      }\n\n      userStore.token = response.token;\n      await userStore.authorizeWithToken();\n      return true;\n    } catch (error) {\n      this.error = error.message;\n      return false;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /**\n   * @public\n   * @name signInWithoutPassword\n   * @description User login method without password\n   * @param {string} name\n   * @param {string} email\n   * @param {string} avatar\n   * @return {Promise<boolean>} - `true` is everything is successful and `false` if something failed\n   */\n  public signInWithoutPassword = async (name: string, email: string, avatar: string = ''): Promise<boolean> => {\n    this.inProgress = true;\n    this.error = null;\n\n    name = name.trim();\n    email = email.trim();\n\n    try {\n      /** Check CORS limits */\n      if (!this.isCookiesAllowed) {\n        await this.openCORSModal();\n      }\n\n      await this.validateFields(name, email);\n      const response = await authAPIs.withoutPassword(name, email, avatar);\n\n      userStore.token = response.data.authTicket.token;\n      await userStore.authorizeWithToken();\n      return true;\n    } catch (error) {\n      this.error = error.message;\n      return false;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /**\n   * @public\n   * @name signUp\n   * @description Sign up user by validating and sending data to server\n   * @param {string} name\n   * @param {string} email\n   * @param {string} password\n   */\n  public signUp = async (name: string, email: string, password: string): Promise<boolean> => {\n    this.inProgress = true;\n    this.error = null;\n\n    name = name.trim();\n    email = email.trim();\n\n    try {\n      /** Check CORS limits */\n      if (!this.isCookiesAllowed) {\n        await this.openCORSModal();\n      }\n\n      await this.validateFields(name, email);\n      const response = await authAPIs.register(name, email, password);\n      if (response.success) {\n        userStore.token = response.data.authTicket.token;\n        return userStore.authorizeWithToken();\n      } else {\n        throw new Error(response.errors[0] || 'Please try again later');\n      }\n    } catch (error) {\n      this.error = error.message;\n      return false;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /**\n   * @private\n   * @name openCORSModal\n   * @description This is method is used to try to bypass cors limit in some browsers\n   * for example our iframe can't use cookies while our site wasn't visited, we open modal to force user\n   * to visit site and then we can work with cookies\n   */\n  private openCORSModal = async () => {\n    const authModal = window.open(\n      `${window.location.origin}${process.env.AUTH_CONFIRMATION_HTML}`,\n      'authVerificationModal',\n      'location=0,status=0,width=800,height=400'\n    );\n\n    return new Promise((resolve, reject) => {\n      const oauthInterval = window.setInterval(() => {\n        if (authModal && authModal.closed) {\n          window.clearInterval(oauthInterval);\n          resolve();\n        }\n      }, 1000);\n    });\n  };\n\n  /**\n   * @public\n   * @description Open modal window to authorize user\n   * @param {'facebook' | 'google' | 'twitter'} network - social network to log in with\n   * @return {void}\n   */\n  public signInWithSocial = (network: 'facebook' | 'google' | 'twitter' | 'disqus'): void => {\n    reportEvent(`login_${network}` as 'login_facebook' | 'login_google' | 'login_twitter' | 'login_disqus');\n\n    const options = {\n      callback: () => userStore.authorizeWithToken(),\n      path: '',\n    };\n\n    switch (network) {\n      case 'google':\n        options.path = process.env.GOOGLE_LOGIN_LINK || '';\n        break;\n      case 'twitter':\n        options.path = process.env.TWITTER_LOGIN_LINK || '';\n        break;\n      case 'disqus':\n        options.path = process.env.DISQUS_LOGIN_LINK || '';\n        break;\n      default:\n        options.path = process.env.FACEBOOK_LOGIN_LINK || '';\n        break;\n    }\n\n    const oauthWindow = window.open(options.path, 'socialAuth', 'location=0,status=0,width=800,height=400');\n    const oauthInterval = window.setInterval(() => {\n      if (oauthWindow && oauthWindow.closed) {\n        window.clearInterval(oauthInterval);\n        options.callback();\n      }\n      // tslint:disable-next-line\n    }, 1000);\n  };\n\n  /**\n   * @name callSSO\n   * @description sending message to platform.js with command to open SSO method\n   * @return {void}\n   */\n  public openSSO = (): void => callSSOMethod();\n\n  /**\n   * @name closeAlert\n   * @description Remove alert\n   * @return {void}\n   */\n  public closeAlert = (): void => {\n    this.error = null;\n  };\n\n  /**\n   * @private\n   * @name validateFields\n   * @description validate fields before calling APIs which might create new user\n   * @param {string} name\n   * @param {string} email\n   */\n  private validateFields = (name: string, email: string) =>\n    new Promise((resolve, reject) => {\n      if (!isValidName(name) || isOffensive(name)) {\n        reject(new Error(translation.common.invalidName));\n      }\n      if (!isValidEmail(email)) {\n        reject(new Error(translation.common.invalidEmail));\n      }\n      resolve();\n    });\n}\n\ndecorate(AuthStore, {\n  error: observable,\n  inProgress: observable,\n  withSSO: computed,\n\n  closeAlert: action,\n  signIn: action,\n  signInWithoutPassword: action,\n  signOut: action,\n  signUp: action,\n});\n\nexport default new AuthStore();\n","class PerspectiveAPI {\n  // Flow Types\n  private readonly model: 'TOXICITY' | 'SPAM';\n  private xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  /**\n   * Create PerspectiveAPI item with model\n   * @param  {'TOXICITY' | 'SPAM'} model - PerspectiveAPI model to get scores.\n   * See: https://github.com/conversationai/perspectiveapi/blob/master/api_reference.md\n   */\n  constructor(model: 'TOXICITY' | 'SPAM' = 'TOXICITY') {\n    this.model = model;\n  }\n\n  /**\n   * Send model based request to Perspective to get scores and little format response\n   * @param  {string} comment - Comment text to analyze\n   * @return {Promise}       - returns Promise with formatted response or error text\n   */\n  public send = (comment: string): Promise<object | string> => {\n    this.cancel(); // Cancel pending request and start new one\n\n    const req = this.xhr;\n    const reqParams = {\n      comment: { text: comment },\n      languages: ['en'],\n      requestedAttributes: { [this.model]: {} },\n    };\n\n    return new Promise((resolve, reject) => {\n      if (!comment) {\n        reject('empty comment');\n      }\n\n      req.open(\n        'POST',\n        `https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze?key=${process.env.PERSEPECTIVE_API_KEY}`,\n        true /* async: */\n      );\n      req.setRequestHeader('Content-type', 'application/json');\n\n      req.onload = () => {\n        try {\n          const response = JSON.parse(req.response);\n          if (response.error) {\n            reject(response.error.message);\n          }\n          resolve({ value: Math.round(response.attributeScores[this.model].summaryScore.value * 100) });\n        } catch (err) {\n          reject(err);\n        }\n      };\n      req.onerror = () => reject(req.statusText);\n      req.onabort = () => reject('request cancelled'); // resolve promise on cancel method 👎\n\n      req.send(JSON.stringify(reqParams));\n    });\n  };\n\n  /**\n   * Cancel pending request - we use this because we have realtime 'TOXICITY'\n   * model checking and to don't store previous requests\n   * just cancel it and start new\n   * @return {void}\n   */\n  public cancel = (): void => this.xhr.abort();\n}\n\nexport default PerspectiveAPI;\n","export interface IGIFItem {\n  type: string;\n  id: string;\n  slug: string;\n  url: string;\n  title: string;\n  images: {\n    fixed_height_still: { url: string; width: number; height: number };\n    preview: { url: string; width: number; height: number };\n    fixed_width_small: { url: string; width: number; height: number };\n    fixed_width_still: { url: string; width: number; height: number };\n    original: { url: string; width: number; height: number };\n    fixed_height_small: { url: string; width: number; height: number };\n    downsized_medium: { url: string; width: number; height: number };\n    // Check response if needed to add more\n  };\n}\n\nexport interface IGiphyResponse {\n  data: IGIFItem[];\n  pagination: {\n    total_count: number;\n    count: number;\n    offset: number;\n  };\n  meta: {\n    status: number;\n    msg: string;\n    response_id: string;\n  };\n}\n\n/**\n * Get Trending GIFs\n * @return {Promise<any>}\n */\nexport const getTrendingGIFs = (): Promise<IGiphyResponse> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open('GET', `https://api.giphy.com/v1/gifs/trending?limit=10&rating=g&api_key=${process.env.GIPHY_TOKEN}`);\n    req.send();\n    req.onload = () => {\n      if (req.status >= 200 && req.status < 300) {\n        resolve(JSON.parse(req.response));\n      } else {\n        reject(new Error(req.statusText));\n      }\n    };\n    req.onerror = () => reject(new Error(req.statusText));\n    req.onabort = () => reject(new Error('cancelled'));\n  });\n\n/**\n * Get trending GIFs\n * @param {string} searchQuery\n * @return {Promise<any>}\n */\nexport const getSearchGIFs = (searchQuery: string): Promise<IGiphyResponse> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open(\n      'GET',\n      `https://api.giphy.com/v1/gifs/search?limit=10&rating=g&q=${searchQuery}&api_key=${process.env.GIPHY_TOKEN}`\n    );\n    req.send();\n    req.onload = () => {\n      if (req.status >= 200 && req.status < 300) {\n        resolve(JSON.parse(req.response));\n      } else {\n        reject(new Error(req.statusText));\n      }\n    };\n    req.onerror = () => reject(new Error(req.statusText));\n    req.onabort = () => reject(new Error('cancelled'));\n  });\n","/**\n * Serialize object\n * @param {object} obj - object which needs to be serialized\n * @returns {string} - Example: ross=123&name=ross\n */\nconst serialize = (obj: object): string => {\n  if (!(obj instanceof Object)) {\n    return '';\n  }\n  return Object.keys(obj)\n    .filter((key) => obj[key] !== undefined && obj[key] !== null)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n\nexport class Request {\n  private xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  constructor(\n    public method: 'GET' | 'POST' | 'DELETE',\n    public url: string,\n    public requireAuth: boolean = false,\n    public contentType?: string,\n    public baseParams: object = {}\n  ) {}\n\n  /**\n   * Public send\n   * @param {object} params - additional params we want to add to response\n   * @return {Promise}\n   */\n  public send = (params: {}): Promise<object | Error> => {\n    return new Promise((resolve, reject) => {\n      const mergedParams = { ...this.baseParams, ...params };\n      const url = this.method === 'GET' ? `${this.url}?${serialize(mergedParams)}` : this.url;\n\n      this.xhr.open(this.method, url, true /* Async */);\n\n      if (this.contentType) {\n        this.xhr.setRequestHeader('Content-type', 'application/json');\n      }\n\n      this.xhr.onload = () => resolve(JSON.parse(this.xhr.response));\n\n      this.xhr.onerror = () => reject(new Error(this.xhr.statusText));\n      this.xhr.onabort = () => reject(new Error('cancelled'));\n\n      if (this.method === 'GET') {\n        this.xhr.send();\n      } else {\n        this.xhr.send(JSON.stringify(mergedParams));\n      }\n    });\n  };\n\n  /**\n   * Cancel pending request\n   * @return {void}\n   */\n  public cancel = (): void => this.xhr.abort();\n}\n\nexport default Request;\n","import { makeRequest } from '@vuukle/utils';\nimport { userStore } from 'modules/Auth/stores';\nimport commentsStore from 'modules/CommentList/store';\nimport articlesStore from 'modules/RecommendedArticles/store';\nimport widgetStore from 'stores/widgetStore';\nimport { hashCode } from 'utils';\nimport Request from 'utils/req';\nimport PerspectiveAPI from './PerspectiveAPI';\n\nexport const commentsApis = {\n  /**\n   * Use it for load more or when comments sorting changed\n   * @exports\n   *\n   * @param {string} sortBy - Order in which to load comments\n   * @param {number | undefined} start - from which comment to start loading\n   * Needed to get next page of comments. If falsy then 1st page will be loaded.\n   */\n  get: new Request('GET', `${process.env.API_URL}/api/v1/Comments/getCommentFeedBySort`, false, undefined, {\n    apiKey: widgetStore.apiKey,\n    articleId: widgetStore.article.id,\n    host: widgetStore.article.host,\n    pageSize: 5,\n    sortBy: 'get_latest',\n    start: 0,\n  }),\n  /** Use it to load one comment by ID\n   *\n   * @param commentId - ID of the comment to get details\n   * @return {Promise<any>}\n   */\n  getByID: (commentId: string): Promise<any> =>\n    makeRequest('GET', `${process.env.API_URL}/api/v1/Comments/loadFullComment`, {\n      commentId,\n    }),\n  /**\n   * Initial Load API request. To minimize requests count we will load most info in one request.\n   * This API loads recommendations, comments, recommend button clicks etc, so we get almost everything needed\n   * for initial rendering\n   */\n  initialLoading: () =>\n    makeRequest(\n      'GET',\n      `${process.env.API_URL}/api/v1/Comments/loadVuukle`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleId: widgetStore.article.id,\n        globalRecommendation: articlesStore.global,\n        host: widgetStore.article.host,\n        pageSize: commentsStore.toLoad,\n        start: 0,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token\n    ),\n  post: (\n    commentText: string,\n    toxicity: number,\n    spam: number,\n    parentId: number = 0,\n    parentTimestamp: number = 0,\n    lang: string = 'en'\n  ): Promise<any> =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Comments/post`,\n      {\n        comment: {\n          commentText,\n          parentId,\n          parentTimestamp,\n          spamValue: Math.round(spam),\n          toxicity: Math.round(toxicity),\n\n          apiKey: widgetStore.apiKey,\n          articleAvatar: widgetStore.article.img,\n          articleId: widgetStore.article.id,\n          host: widgetStore.article.host,\n          lang,\n          tag: widgetStore.article.tags,\n          title: widgetStore.article.title,\n          uri: widgetStore.article.url,\n        },\n        r: hashCode(commentText),\n        s: hashCode(commentText + widgetStore.apiKey),\n      },\n      undefined,\n      userStore.token\n    ).then(\n      (response): any => {\n        if (!response.success) {\n          throw new Error(Array.isArray(response.errors) ? response.errors[0] || 'unknown' : 'unknown');\n        }\n        return response;\n      }\n    ),\n\n  edit: (commentId: number, commentText: string): Promise<any> =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Comments/editComment`,\n      {\n        commentId,\n        commentText,\n\n        apiKey: widgetStore.apiKey,\n        host: widgetStore.article.host,\n        r: hashCode(commentText),\n        s: hashCode(commentText + widgetStore.apiKey),\n      },\n      undefined,\n      userStore.token\n    ).then(\n      (response): any => {\n        if (!response.success) {\n          throw new Error(Array.isArray(response.errors) ? response.errors[0] || 'unknown' : 'unknown');\n        }\n        return response;\n      }\n    ),\n\n  changeStatus: (id: number) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Comments/setCommentStatus`,\n      {\n        commentIDs: [id],\n        state: 1,\n      },\n      'application/json',\n      userStore.token\n    ),\n};\n\nexport const authAPIs = {\n  /** Get user details by token */\n  me: () => makeRequest('POST', `${process.env.API_URL}/api/v1/Auth/me`, {}, 'application/json', undefined, true),\n  /** Create new user */\n  register: (name: string, email: string, password: string, ageRange: number = 0) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Auth/signupUser`,\n      {\n        ageRange,\n        email,\n        name,\n        password,\n        pictureUrl: null,\n      },\n      'application/json',\n      undefined,\n      true\n    ),\n  /** Authenticate user using password */\n  withPassword: (email: string, password: string) =>\n    makeRequest('POST', `${process.env.API_URL}/api/v1/Auth`, { email, password }, 'application/json', undefined, true),\n  /** Kind of anonymous authentication */\n  withoutPassword: (name: string, email: string, avatar: string = '') =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Auth/sso`,\n      { email, name, avatar },\n      'application/json',\n      undefined,\n      true\n    ),\n};\n\nexport const perspectiveAPIs = {\n  spamModel: new PerspectiveAPI('SPAM'),\n  toxicModel: new PerspectiveAPI('TOXICITY'),\n};\n\nexport const commentLikesAPIs = {\n  delete: (commentId: number) =>\n    makeRequest(\n      'DELETE',\n      `${process.env.API_URL}/api/v1/comment_likes`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        commentId,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n  post: (commentId: number) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/comment_likes`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        commentId,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n};\n\nexport const commentFlagAPIs = {\n  post: (commentId: number) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/comment_flags/setCommentFlag`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleId: widgetStore.article.id,\n        commentId,\n        host: widgetStore.article.host,\n      },\n      'application/json',\n      userStore.token\n    ),\n};\n\n// TODO: we can optimize it but switching DELETE and POST only\nexport const recommendAPIs = {\n  delete: () =>\n    makeRequest(\n      'DELETE',\n      `${process.env.API_URL}/api/v1/recommend_ratings/ratings`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n  post: () =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/recommend_ratings/ratings`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n};\n\nexport default {\n  commentsApis,\n};\n","/** Porthole Messaging */\ndeclare var Porthole: any;\nexport let windowProxy: any;\n\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production') {\n  windowProxy = new Porthole.WindowProxy(window.location.href);\n} else {\n  // For test environment\n  windowProxy = {\n    addEventListener: (data: any) => undefined,\n    post: (data: Object) => console.log(data), // tslint:disable-line\n  };\n}\n","/**\n * @file Initialize widget communication listener.\n * Many of the messages can change our state, so we import states here and change them as it's easier to setup just\n * one listener and control everything within it\n */\nimport { makeDevLog } from '@vuukle/utils';\nimport path from 'ramda/src/path';\nimport { windowProxy } from 'services/communication';\n\nimport { authStore, userStore } from 'modules/Auth/stores';\nimport CommentsStore from 'modules/CommentList/store';\nimport widgetStore from 'stores/widgetStore';\n\nexport function initializeListener() {\n  windowProxy.addEventListener((event: any) => {\n    if (!(event.data instanceof Object)) {\n      return; // Message is invalid\n    }\n\n    makeDevLog('log', 'comments porthole event received', event);\n\n    if (path(['data', 'authenticateUser'], event) instanceof Object) {\n      /** Authenticate user */\n      authenticateUser(event.data.authenticateUser);\n    } else if (path(['data', 'modalData', 'auth'], event)) {\n      /** Modal Authorization */\n      userStore.authorizeSilently();\n    } else if (path(['data', 'syncWidget', 'votes'], event)) {\n      /** Sync recommendations based on information from other widgets */\n      widgetStore.recommendCount = event.data.syncWidget.votes;\n      widgetStore.isRecommended = event.data.syncWidget.voted;\n    } else if (path(['data', 'loadComment'], event)) {\n      CommentsStore.getCommentDetailsByID(event.data.loadComment);\n    }\n  });\n}\n\n/** Authenticate user based on received message */\nfunction authenticateUser(authenticationObject: any) {\n  const { name, email, avatar, token, signOut } = authenticationObject;\n\n  // Sign out user if called with signOut key\n  if (signOut) {\n    return authStore.signOut();\n  }\n\n  if (\n    typeof name === 'string' &&\n    typeof email === 'string' &&\n    name.length > 2 &&\n    email.length > 3 &&\n    !userStore.isAuthorized\n  ) {\n    // Authenticate user with name and email\n    authStore.signInWithoutPassword(name, email, avatar);\n  } else if (typeof token === 'string') {\n    // Authenticate user with token\n    userStore.token = token;\n    userStore.authorizeWithToken();\n  }\n}\n","import { slugify } from '@vuukle/utils';\nimport { userStore } from 'modules/Auth/stores';\nimport widgetStore from 'stores/widgetStore';\nimport { windowProxy } from './windowProxy';\n\nif (process.env.NODE_ENV === 'development') {\n  (window as any).windowProxy = windowProxy;\n}\n\nexport const syncInitialLoadPorthole = (response: any): void => {\n  if (response instanceof Object) {\n    let shares;\n    try {\n      shares = JSON.parse(response.data.shares);\n    } catch (err) {\n      shares = {};\n    }\n\n    windowProxy.post({\n      articleData: {\n        commentCount: response.data.article.commentCount,\n        recommendations: response.data.recommendCount,\n        shares,\n      },\n    });\n  }\n};\n\n/**\n * Open modal app with render option 'login'\n * @param {Object} additionalParams - this param will be returned after modal app will be closed\n */\nexport const openModalWidgetAuth = (additionalParams: object = {}) =>\n  windowProxy.post({\n    modalData: {\n      hideModal: false,\n      type: 'login',\n      ...additionalParams,\n    },\n  });\n\n/**\n * Open modal app with render option 'profile' (show user activity on current site)\n * @param {Object} profile - it can be of two types user data from comments and from user profile\n */\nexport const openModalWidgetProfile = (profile: {\n  id: string;\n  points: number | string;\n  avatar: string | null;\n  name: string;\n}) =>\n  windowProxy.post({\n    modalData: {\n      hideModal: false,\n      profile,\n      type: 'profile',\n    },\n  });\n\n/**\n * Share message to open modal window with link text so user can copy it\n * @param {string} link - url that user should see to copy\n */\nexport const openLinkInModal = (link: string) =>\n  windowProxy.post({\n    modalData: {\n      hideModal: false,\n      link,\n      type: 'link',\n    },\n  });\n\n/**\n * Once comment added share some data with publisher\n * Message way: comments widget -> platform -> publisher\n * @param comment - comment object from response\n */\nexport function logCommentToPublisher(comment: { commentText: string; name: string }) {\n  windowProxy.post({\n    syncWidget: { commentAdded: true },\n    vuukle_event: {\n      comment: comment.commentText,\n      email: userStore.details && userStore.details.email,\n      eventType: 'comment',\n      name: comment.name,\n    },\n  });\n}\n\n/**\n * Once comment added log action to WordPress so it can create comment in a WP dashboard\n * Message way: comments -> platform -> wordPress\n * @param comment\n */\nexport function logCommentToWordPress(comment: {\n  id: number;\n  name: string;\n  userId: string;\n  commentText: string;\n  parentId: number;\n}) {\n  const dateAdded = new Date().toISOString();\n\n  windowProxy.post({\n    vuukle_event: {\n      comment_ID: comment.id,\n      comment_agent: '',\n      comment_approved: 1,\n      comment_author: comment.name,\n      comment_author_IP: '',\n      comment_author_url: `https://user.vuukle.com/by/${slugify(comment.name)}/${comment.userId}/`,\n      comment_content: comment.commentText,\n      comment_date: dateAdded,\n      comment_date_gmt: dateAdded,\n      comment_karma: '',\n      comment_parent: comment.parentId,\n      comment_post_ID: widgetStore.article.id,\n      comment_type: '',\n      email: userStore.details && userStore.details.email,\n      eventType: 'wpSync',\n      user_id: comment.userId,\n    },\n  });\n}\n\n/**\n * Send event action to platform.js(vuukle-initialization) so it will handle it and send event to server\n * @param  {string} action - action name\n * @return {void}\n */\nexport const reportEvent = (\n  action:\n    | 'share_facebook'\n    | 'share_twitter'\n    | 'share_pinterest'\n    | 'share_linkedin'\n    | 'login_facebook'\n    | 'login_google'\n    | 'login_twitter'\n    | 'login_disqus'\n    | 'view_page'\n    | 'view_comments'\n) => windowProxy.post({ reportEvent: { action, label: 'Comments' } });\n\n/**\n * Call SSO parent window method\n * @return {void}\n */\nexport const callSSOMethod = (): void => windowProxy.post({ callSSO: true });\n\n/** Sync recommendations votes with other widgets */\nexport const syncRecommendations = (voted: boolean, votes: number): void =>\n  windowProxy.post({ syncWidget: { voted, votes } });\n","export * from './windowProxy';\nexport * from './initListener';\nexport * from './sendEvents';\n","import { action, computed, decorate, observable, reaction, when } from 'mobx';\nimport pathOr from 'ramda/src/pathOr';\nimport { commentFlagAPIs, commentLikesAPIs, commentsApis } from 'services/apis';\n\nimport { authStore, userStore } from 'modules/Auth/stores';\nimport Alert from 'stores/models/Alert';\nimport translation from 'stores/translationStore';\nimport widgetStore from 'stores/widgetStore';\n\nimport { decodeString, kFormatter, makeSafeHTML, removeHTMLTags } from '@vuukle/utils';\nimport { callSSOMethod, openLinkInModal, openModalWidgetAuth, openModalWidgetProfile } from 'services/communication';\nimport { timeAgo } from 'utils';\n\nexport class Comment {\n  /** Is comment in progress */\n  public loading: boolean = false;\n  /** Comment alert to notify about actions progress  */\n  public bottomAlert = new Alert();\n  public topAlert = new Alert();\n  /** Replies feed */\n  public replies: Comment[] = [];\n  /** Comment Details */\n  public data: Comments.Comment;\n  /** Show reply textarea */\n  public showReplyBox: boolean = false;\n  /** Comment is minimized */\n  public collapsed: boolean = false;\n  /** Determines if user liked comment */\n  public currentSessionLiked: boolean = false;\n  /** Comment is hidden but alerts are visible */\n  public hidden: boolean = false;\n  /** Determines if comment is in edit mode. Users can edit their comments */\n  @observable\n  private _editMode: boolean = false;\n\n  constructor(comment: Comments.ServerComment, private selfRemove: (item: Comment) => void) {\n    this.data = {\n      authorType: comment.authorType,\n      commentText: comment.commentText,\n      createdTimestamp: comment.createdTimestamp,\n      id: comment.id,\n      likeCount: comment.likeCount,\n      name: decodeString(comment.name),\n      parentId: comment.parentId,\n      pictureUrl: comment.pictureUrl,\n      state: comment.state,\n      timeago: timeAgo(comment.createdTimestamp),\n      topComment: comment.topComment,\n      userId: comment.userId,\n      userPoints: kFormatter(comment.userPoints || 0),\n    };\n\n    try {\n      this.data.name = decodeURIComponent(this.data.name);\n    } catch (e) {} // tslint:disable-line\n\n    /** Exit from edit mode once user sign out */\n    reaction(\n      () => userStore.isAuthorized,\n      (authorized) => {\n        if (!authorized) {\n          this._editMode = false;\n        }\n      }\n    );\n  }\n\n  /**\n   * Determines if currently logged in user is owner of that comment\n   * @return {boolean} true if authenticated user is owner of the comments, otherwise false\n   */\n  get isOwner(): boolean {\n    return this.data.userId === (userStore.details && userStore.details.id);\n  }\n\n  /**\n   * Get edit mode state\n   * @return {boolean} true if toggled and false if not\n   */\n  public get editMode(): boolean {\n    return this._editMode;\n  }\n\n  /** Switch edit mode */\n  public set editMode(enable: boolean) {\n    /** If comment has replies show alert that edit mode is disabled */\n    if (this.replies.length > 0) {\n      this.topAlert.value = { type: 'warning', message: translation.messages.editingWithReplies, timeout: 3000 };\n      return;\n    }\n\n    this._editMode = enable;\n  }\n\n  @action\n  public toggleEditMode = () => {\n    this.editMode = !this.editMode;\n  };\n\n  /**\n   * Open Authentication for user based on configuration\n   * @return {void}\n   */\n  public openAuth = (): void => {\n    if (authStore.withSSO) {\n      return callSSOMethod();\n    }\n\n    // If not SSO then call modal auth\n    return openModalWidgetAuth();\n  };\n\n  /** format comment text for render inside rect */\n  public getCommentTextForRender = () => makeSafeHTML(this.data.commentText);\n  /** format comment text to get only text without any html tags etc. */\n  public getCommentTextOnly = () => removeHTMLTags(this.data.commentText);\n\n  /**\n   * @public\n   * @description like or dislike comment based on current state\n   * @return {void}\n   */\n  // TODO: create decorator for methods with required authorization\n  public toggleLike = (): void => {\n    /** This action requires authentication */\n    if (!userStore.isAuthorized) {\n      return this.openAuth();\n    }\n\n    if (this.data.userId === (userStore.details && userStore.details.id)) {\n      this.bottomAlert.value = { message: translation.messages.ownCommentVote, type: 'error', timeout: 3500 };\n    } else {\n      this.currentSessionLiked ? this.dislike() : this.like();\n    }\n  };\n\n  /**\n   * @public\n   * @description open modal to share comment\n   * @param {'google' | 'twitter' | 'linkedin' | 'facebook'} social - social network to share\n   * @return {void}\n   */\n  public share = (social: 'twitter' | 'linkedin' | 'facebook' | 'link'): void => {\n    const openWindow = (shareLink: string) =>\n      window.open(\n        shareLink,\n        'shareWindow',\n        'status = 1, height = 500, width = 420, resizable = 0, top=200, left=400, screenX=400, screenY=200'\n      );\n\n    const url = encodeURIComponent(widgetStore.article.url);\n    const title = encodeURIComponent(widgetStore.article.title);\n    const commentText = this.data.commentText.replace(/<(?:.|\\n)*?>/gm, '').substring(0, 75);\n\n    switch (social.toLocaleLowerCase()) {\n      case 'twitter':\n        openWindow(`https://twitter.com/share?url=${url}&text=${this.data.name} commented: '${commentText}...'`);\n        return;\n      case 'linkedin':\n        openWindow(`https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${title}&summary=&source=`);\n        return;\n      case 'link':\n        const urlInstance = new URL(widgetStore.article.url);\n        urlInstance.hash = `#commentID-${this.data.id}`;\n        openLinkInModal(urlInstance.href);\n        return;\n      default:\n        openWindow(`https://www.facebook.com/sharer/sharer.php?u=${url}`);\n        return;\n    }\n  };\n\n  /**\n   * @public\n   * @description Report comment\n   * @return {Promise}\n   */\n  public report = async (): Promise<any> => {\n    /** If user is not authenticated first ask to sign in */\n    if (!userStore.isAuthorized) {\n      return this.openAuth();\n    }\n\n    /** Ask to confirm action */\n    const flag = window.confirm(translation.messages.flagQuestion);\n    if (!flag) {\n      return;\n    }\n\n    try {\n      const reportResponse = await commentFlagAPIs.post(this.data.id);\n      if (reportResponse.success) {\n        this.topAlert.value = { message: translation.messages.flaggedMessage, type: 'success', timeout: 3500 };\n      } else if (reportResponse.result === 'Already flagged') {\n        this.topAlert.value = { message: translation.messages.alreadyReported, type: 'warning', timeout: 3500 };\n      }\n    } catch (err) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error('commentFlagAPIs.post error:', err); // tslint:disable-line\n      }\n    }\n  };\n\n  /**\n   * @public\n   * @description Reject comment - available only for moderators action.\n   * On success just remove self.\n   * @return {void}\n   */\n  public reject = async (): Promise<any> => {\n    // Check if user is logged in using password\n    if (!pathOr(false, ['details', 'isPasswordEntered'], userStore)) {\n      this.topAlert.value = {\n        message: `The following alert message is present when user is logged not by password:\n To perform this action authorization requires password.\n Please authenticate into your account using password on\n <a href=\"https://admin.vuukle.com\" target=\"_blank\">admin.vuukle.com</a> and reload this page.`,\n        type: 'warning',\n      };\n    } else {\n      // If user is authenticated with a password then try to reject the comment\n      try {\n        const statusChangeResponse = await commentsApis.changeStatus(this.data.id);\n        if (statusChangeResponse.success) {\n          this.topAlert.value = { message: '[Moderator] Comment has been rejected.', type: 'success', timeout: 2000 };\n          setTimeout(() => this.selfRemove(this), 2000);\n        }\n      } catch (err) {\n        this.topAlert.value = {\n          message: 'Comment has not been rejected. Please try again later or contact with support.',\n          timeout: 4000,\n          type: 'error',\n        };\n      }\n    }\n  };\n\n  /**\n   * On comment edit callback\n   * @param {object} comment - server comment\n   * @return void\n   */\n  public editComment = (comment: Comments.ServerComment): void => {\n    this.data.commentText = comment.commentText;\n\n    if (comment.state === 2) {\n      this.hidden = true;\n      this.topAlert.value = { type: 'warning', message: translation.messages.moderationMessage, timeout: 4000 };\n      // Once this alert closed remove comment itself from the feed since it's on moderation now\n      when(() => !this.topAlert.value, () => this.selfRemove(this));\n    }\n    this.editMode = false;\n  };\n\n  /**\n   * @public\n   * @param {Object} comment - Server response comment to add as reply\n   * @return {void}\n   */\n  public addReply = (comment: Comments.ServerComment): void => {\n    this.replies.unshift(new Comment(comment, this.remove));\n  };\n\n  /**\n   * @public\n   * @description show/hide textarea to reply\n   * @return {void}\n   */\n  public toggleReplyBox = (): void => {\n    this.showReplyBox = !this.showReplyBox;\n  };\n\n  /**\n   * @public\n   * @description Minimize comment UI\n   * @return {void}\n   */\n  public collapse = (): void => {\n    this.collapsed = !this.collapsed;\n  };\n\n  /**\n   * @public\n   * @description Send message to the platform to open commenter profile\n   * @return {void}\n   */\n  public showCommenterProfile = (): void =>\n    openModalWidgetProfile({\n      avatar: this.data.pictureUrl,\n      id: this.data.userId,\n      name: this.data.name,\n      points: this.data.userPoints,\n    });\n\n  /**\n   * @private\n   * @description Remove reply from this comment by instance\n   * @param {Comment} reply - reply instance to find and remove\n   * @return {void}\n   */\n  public remove = (reply: Comment): void => {\n    this.replies = this.replies.filter((replyItem) => replyItem !== reply);\n  };\n\n  /**\n   * @private\n   * @description like comment\n   * @return {Promise<boolean>>}\n   */\n  @action\n  private like = async (): Promise<boolean> => {\n    this.data.likeCount++;\n    this.currentSessionLiked = true;\n\n    try {\n      const likeResponse = await commentLikesAPIs.post(this.data.id);\n      if (likeResponse.success) {\n        return true;\n      }\n      throw new Error(likeResponse.errors[0]);\n    } catch (err) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error('commentLikesAPIs.post error', err); // tslint:disable-line\n      }\n      this.data.likeCount--;\n      this.bottomAlert.value = {\n        message:\n          err.message === 'cant_vote_for_own_comment'\n            ? translation.messages.ownCommentVote\n            : translation.messages.alreadyVoted,\n        type: 'error',\n      };\n      return false;\n    }\n  };\n\n  /**\n   * @private\n   * @description dislike comment\n   * @return {Promise<boolean>>}\n   */\n  @action\n  private dislike = async (): Promise<boolean> => {\n    this.data.likeCount--;\n    this.currentSessionLiked = false;\n\n    try {\n      await commentLikesAPIs.delete(this.data.id);\n      return true;\n    } catch (err) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error('commentLikesAPIs.delete error', err); // tslint:disable-line\n      }\n      return false;\n    }\n  };\n}\n\ndecorate(Comment, {\n  bottomAlert: observable,\n  collapsed: observable,\n  data: observable,\n  loading: observable,\n  replies: observable,\n  showReplyBox: observable,\n  topAlert: observable,\n\n  isOwner: computed,\n\n  addReply: action,\n  collapse: action,\n  editComment: action,\n  reject: action,\n  remove: action,\n  showCommenterProfile: action,\n  toggleReplyBox: action,\n});\n\nexport default Comment;\n","import { makeDevLog } from '@vuukle/utils';\nimport { action, decorate, observable } from 'mobx';\nimport { commentsApis } from 'services/apis';\nimport urlSearchParams from 'services/urlSearchParams';\nimport Comment from './CommentItem';\n\nexport type sortingType = 'Latest' | 'MostUpVotes' | 'ReverseChrono' | 'TopComment' | 'MostReplied';\n\nexport enum SortingType {\n  get_latest = 'get_latest',\n  get_most_up_votes = 'get_most_up_votes',\n  get_reverse_chrono = 'get_reverse_chrono',\n  get_top_comment = 'get_top_comment',\n  get_most_replied = 'get_most_replied',\n  Latest = 'get_latest',\n  MostUpVotes = 'get_most_up_votes',\n  ReverseChrono = 'get_reverse_chrono',\n  TopComment = 'get_top_comment',\n  MostReplied = 'get_most_replied',\n}\n\n/** MobX Comments Store */\nexport class CommentsStore {\n  /** Total Comments for article widget has been loaded */\n  public totalComments: number = 0;\n  /** Main comments array. Replies created inside each comment: Comment[] > Comment[] */\n  public comments: Comment[] = [];\n  public selectedComment: Comment | undefined;\n  /** Comments are in loading state */\n  public loading: boolean = true;\n  /** If more comments available. Used to know if it's needed to show 'Load More' button */\n  public moreAvailable: boolean = true;\n  /**\n   * ===========================================================================================\n   * Configurable from outside\n   * @description these params can be configured by article owner using query string inside url\n   * ===========================================================================================\n   */\n  /** Default sorting to load comments */\n  public sorting: SortingType = SortingType.Latest;\n  /** Comments adding are in sync with WordPress. Used to sync comments with WP dashboard */\n  public syncWithWP: boolean;\n  /** How many comments to load */\n  public toLoad: number;\n\n  constructor() {\n    /** Get configuration from query string */\n    this.syncWithWP = urlSearchParams.get('wpSync') === 'true';\n    this.toLoad = parseInt(urlSearchParams.get('commentsToLoad') || '5', 10);\n  }\n\n  /**\n   * @public\n   * @description Remove comment from this.comments\n   * @param {Comment} commentInstance - Comment class instance to remove from array\n   * @returns {void}\n   */\n  public removeComment = (commentInstance: Comment): void => {\n    this.comments = this.comments.filter((comment) => comment !== commentInstance);\n  };\n\n  /**\n   * @public\n   * @param  {string} ID - comment ID to get details for\n   * @return {Promise<void>}\n   */\n  public async getCommentDetailsByID(ID: string): Promise<void> {\n    if (!ID) {\n      return;\n    }\n    try {\n      const response = await commentsApis.getByID(ID);\n      if (response.success && response.data) {\n        this.selectedComment = CommentsStore.createCommentWithReplies(\n          response.data,\n          () => (this.selectedComment = undefined)\n        );\n      }\n    } catch (err) {\n      makeDevLog('error', 'getCommentDetailsByID err', err);\n    }\n  }\n\n  /**\n   * @name changeSorting\n   * @description On comments sorting change\n   * @public\n   * @param {'get_latest'|'get_top_comment'|'get_most_replied'|'get_most_up_votes'|'get_reverse_chrono'} sortBy -\n   * sorting order\n   * @returns {void}\n   */\n  public changeSorting = async (sortBy: SortingType): Promise<void> => {\n    // Remove selected comment as user not interested anymore\n    if (this.selectedComment instanceof Comment) {\n      this.selectedComment = undefined;\n    }\n    /** Don't do anything if sorting is same */\n    if (sortBy === this.sorting) {\n      return;\n    }\n    return this.loadComments(0, sortBy);\n  };\n\n  /**\n   * @name loadMoreComments\n   * @description Load more comments\n   * @public\n   */\n  public loadMoreComments = async (): Promise<void> => this.loadComments(this.comments.length);\n\n  /**\n   * @name addComment\n   * @description add comment to feed if sorting is latest and if user successfully posted comment\n   * @param {Object} comment - comment from server response to add\n   * @returns {void}\n   */\n  public addComment = (comment: Comments.ServerComment): void => {\n    // We just add main comment to feed in case it's latest sorting\n    if (this.sorting === SortingType.Latest) {\n      this.comments.unshift(new Comment(comment, this.removeComment));\n    }\n  };\n\n  /**\n   * @name initialLoadSuccess\n   * @description First of all we have initial load API request which returns many details.\n   * This method is called once we received response from this initial API call request.\n   * @param {<Object>[]} comments - server comments array with replies inside\n   * @param {number} totalComments - total comments under article from server response\n   * @returns {void}\n   */\n  // TODO: move this to part of `commentsApis.initialLoading().then` and probably make createCommentsWithRecursion static\n  public initialLoadSuccess = (comments: Comments.ServerComment[], totalComments: number): void => {\n    this.comments = CommentsStore.createCommentsWithRecursion(comments, this.removeComment);\n    this.moreAvailable = comments.length >= this.toLoad;\n    this.totalComments = totalComments;\n    this.loading = false;\n  };\n\n  /**\n   * @private\n   * @description Change comments sorting and get sorted comments from the server\n   * @param {number} start - from which comment to load\n   * @param {'get_latest'|'get_top_comment'|'get_most_replied'|'get_most_up_votes'|'get_reverse_chrono'} sortBy -\n   * sorting order\n   * @returns {void}\n   */\n  @action\n  private loadComments = async (start: number = 0, sortBy: SortingType = this.sorting): Promise<void> => {\n    commentsApis.get.cancel();\n    if (this.sorting !== sortBy) {\n      this.comments = [];\n      this.sorting = sortBy;\n      this.moreAvailable = false;\n    }\n\n    this.loading = true;\n\n    try {\n      const response: any = await commentsApis.get.send({ sortBy, start });\n\n      const { comments } = response.data;\n      this.comments.push(\n        ...CommentsStore.createCommentsWithRecursion(comments.items as Comments.ServerComment[], this.removeComment)\n      );\n      this.moreAvailable = comments.items.length >= 5;\n    } catch (error) {\n      if (process.env.NODE_ENV === 'development') {\n        // tslint:disable-next-line\n        console.warn('Comments API sorting error:', error.message);\n      }\n    } finally {\n      this.loading = false;\n    }\n  };\n\n  /**\n   * Utils to create comments items using recursion to process replies too\n   * @param {Array} comments - server comments array\n   * @param {function} removeFn - commend remove function\n   * @return {Object[]} created comments array\n   */\n  private static createCommentsWithRecursion(\n    comments: Comments.ServerComment[],\n    removeFn: (comment: Comment) => void\n  ): Comment[] {\n    if (!Array.isArray(comments) || comments.length <= 0) {\n      return [];\n    }\n\n    return comments.map((comment) => {\n      const CommentItem = new Comment(comment, removeFn);\n      CommentItem.replies.push(...CommentsStore.createCommentsWithRecursion(comment.replies, CommentItem.remove));\n      return CommentItem;\n    });\n  }\n\n  private static createCommentWithReplies(comment: Comments.ServerComment, removeFn: (comment: Comment) => void) {\n    const CommentItem = new Comment(comment, removeFn);\n    CommentItem.replies.push(...CommentsStore.createCommentsWithRecursion(comment.replies, CommentItem.remove));\n    return CommentItem;\n  }\n}\n\ndecorate(CommentsStore, {\n  comments: observable,\n  loading: observable,\n  moreAvailable: observable,\n  selectedComment: observable,\n  sorting: observable,\n  totalComments: observable,\n\n  changeSorting: action,\n  getCommentDetailsByID: action,\n  initialLoadSuccess: action,\n  loadMoreComments: action,\n  removeComment: action,\n});\n\nexport default new CommentsStore();\n","import { action, computed, decorate, observable } from 'mobx';\nimport path from 'ramda/src/path';\n\nimport { makeRequest } from '@vuukle/utils';\nimport { getToken, removeToken, removeUserApiKey, saveToken, setUserApiKey } from 'services/auth';\nimport translation from 'stores/translationStore';\nimport widgetStore from 'stores/widgetStore';\n\nexport class UserStore {\n  /** Determines if user details are loading */\n  public loading: boolean = false;\n  /** User details we receive from server */\n  public details: User | null = null;\n  /**\n   * User session token.\n   * We need to save token not only in the cookies but here too, because some browsers block\n   * 3rd party cookies (from iframe) and we can't be sure that created cookie will be available to use, but\n   * we can't provide session for user with duration for at lest before page reloading\n   * @default null\n   */\n  @observable\n  private _token: string | null = null;\n\n  constructor() {\n    /** Authenticate user automatically is token exists */\n    if (this.token) {\n      this.authorizeSilently();\n    }\n  }\n\n  /** Token getter */\n  public get token(): string | null {\n    const cookieToken = getToken();\n\n    if (typeof cookieToken === 'string') {\n      if (typeof this._token === 'string' && cookieToken !== this._token) {\n        this._token = cookieToken;\n      } else if (!this._token) {\n        this._token = cookieToken;\n      }\n    }\n\n    return this._token;\n  }\n\n  /** Token setter */\n  public set token(token: string | null) {\n    if (!token) {\n      removeToken();\n      this._token = null;\n    } else {\n      saveToken(token);\n      this._token = token;\n    }\n  }\n\n  /**\n   * @description Determines if user is authorized\n   * @return {boolean}\n   */\n  get isAuthorized(): boolean {\n    return !!(this.details && this.details.id && this.details.email);\n  }\n\n  /**\n   * @public\n   * @description Get user details by token\n   * @return {Promise<void>>}\n   */\n  public authorizeWithToken = async (): Promise<boolean> => {\n    this.loading = true;\n\n    try {\n      const authResponse = await makeRequest(\n        'POST',\n        `${process.env.API_URL}/api/v1/Auth/me`,\n        {},\n        'application/json',\n        this.token\n      );\n      if (\n        authResponse.success &&\n        typeof path(['data', 'email'], authResponse) === 'string' &&\n        typeof path(['data', 'name'], authResponse) === 'string'\n      ) {\n        this.details = {\n          avatar: authResponse.data.pictureUrl || null,\n          email: authResponse.data.email,\n          id: authResponse.data.userId,\n          isModerator: authResponse.data.siteList.includes(widgetStore.article.host),\n          isPasswordEntered: authResponse.data.isPasswordEntered,\n          name: authResponse.data.name,\n          points: authResponse.data.points,\n        };\n        setUserApiKey(authResponse.data.userId); // save user API key in cookies for analytics usage\n        return true;\n      }\n\n      throw new Error(`[api/v1/Auth/me]. Response: ${JSON.stringify(authResponse)}. Token: ${this.token}`);\n    } catch (err) {\n      this.forgetUser();\n      throw new Error(translation.messages.invalidLogin);\n    } finally {\n      this.loading = false;\n    }\n  };\n\n  /**\n   * @public\n   * @description clear user session\n   * @return {void}\n   */\n  public forgetUser = (): void => {\n    removeUserApiKey();\n    this.token = null;\n    this.details = null;\n  };\n\n  /**\n   * @public\n   * @name authorizeSilently\n   * @description Silent authorization method to do in background if token exists in cookies.\n   * For example when we detected use token on page load\n   * @return {void}\n   */\n  public authorizeSilently = async (): Promise<boolean> => {\n    try {\n      if (!this.token) {\n        throw new Error('no_token');\n      }\n      await this.authorizeWithToken();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n}\n\ndecorate(UserStore, {\n  authorizeSilently: action,\n  authorizeWithToken: action,\n  details: observable,\n  forgetUser: action,\n  isAuthorized: computed,\n  loading: observable,\n});\n\nexport default new UserStore();\n","/* eslint max-len:0 */\n// Helpers\nimport mergeDeepRight from 'ramda/src/mergeDeepRight';\nimport urlSearchParams from 'services/urlSearchParams';\n// tslint:disable max-line-length object-literal-sort-keys\nconst initialCustomText = {\n  common: {\n    name: 'Name',\n    email: 'Email',\n    password: 'Password',\n    ageRange: 'Select your age range',\n    writeComment: 'Write a comment',\n    blankName: 'Name cannot be blank',\n    blankEmail: 'Email cannot be blank',\n    blankPassword: 'Password cannot be blank',\n    blankComment: 'Comment cannot be blank',\n    invalidEmail: 'Invalid email, please try again.',\n    invalidName: 'The name should not contain numbers, URL, special characters or offensive words',\n    reply: 'Reply', // used for action in comment/reply 'Reply [1]'\n    replies: 'Replies',\n    report: 'Report Comment',\n    or: 'or', // used in sign in [SOCIAL] or [NAME, EMAIL]\n    to: 'to', // not needed // used in reply item - [reply icon] to Ross\n    recommend: 'Recommend', // used for recommend item in header of widget\n    recommended: 'Recommended', // used for recommend item in header of widget - when user recommended article\n    readMore: 'Read more', // comment / reply text truncate to show more\n    showLess: 'show less', // comment / reply text truncate to show less\n    points: 'points',\n    point: 'point', // added\n    // badges\n    moderator: 'Mod',\n    // Buttons\n    signIn: 'Sign in',\n    signUp: 'Sign up',\n    signInWith: 'Sign in with:',\n    signInWithVuukle: 'or sign in using Vuukle:',\n    signUpWithVuukle: 'or sign up with Vuukle:',\n    share: 'Share',\n    collapse: 'Collapse',\n    expand: 'Expand',\n    cancel: 'Cancel',\n  },\n  profile: {\n    myProfile: 'My Profile',\n    myComments: 'My Comments',\n    signOut: 'Sign out',\n    removeComment: 'Remove comment',\n  },\n  toxicity: {\n    long: 'probability perceived as \"toxic\"', // toxicity message for big screens: [percentage] + [long] -> 90% likely to be perceived as \"toxic\"\n    messageTooLong: 'Characters limit exceeded. Please try to make your comment shorter or remove some symbols.', // this might be displayed if user added long text with not common symbols which might be calculated as few symbols in length\n  },\n  messages: {\n    charlimits: 'The moderator has set a character limit up to',\n    alreadyReported: 'You have already reported this comment to the moderator.',\n    commentsClosed: 'Comments are now closed.',\n    alreadySubmitted: 'Your comment has been already submitted for this article.',\n    almostSame: 'Your previous comment was almost the same. Please write something different.', // Previous comment and new one are not passing difference of 25%\n    flaggedMessage: 'Thanks, the moderator will be notified',\n    errorSubmitting: 'There was an error while saving your comment, please refresh the page and try again',\n    invalidLogin: 'Invalid login, please login again',\n    spammerComment: 'Your comment is under moderation',\n    moderationMessage:\n      'Your comment is under moderation and will be approved by the site moderator. Thank you for your patience.',\n    spamComment:\n      'Seems like you are posting a spam comment. If you still want to send it just click on \"POST\" button again.',\n    errorContactVuukle: 'Error! Please try again, if the issue persists, let our team know on support@vuukle.com',\n    // ADDED\n    ownCommentVote: 'You cannot vote your own comment', // When user want to vote on his/her own comment\n    alreadyVoted: 'You have already voted. You can click again to remove your vote.',\n    commentAdded: 'Comment is successfully posted', // Comment has been added successfuly\n    noComments: 'Be the first to comment', // Used to show 'Be the first to comment' instead comments if there is no comments\n    noCommentsInSorting: 'No comments here', // Used in sorting category ( not latest ) to tell user that there is no comments\n    flagQuestion: 'Do you want to report this comment?', // Used in confirm window after click on flag icon\n    toxicityLimit: 'You cannot post comments with toxic probability of more than %d', // %d - is number position. i.e. if limit is 70% message will be: You cannot post comments with toxicity value more than 70%\n    emailExists: 'This email is already in use',\n    signInQuestion: 'Already have an account?',\n    signUpQuestion: `Don't have an account?`,\n    missingPassword: 'Do not have a password?',\n    passwordReset: 'Click here to reset password',\n    incorrectDetails: 'Incorrect email or password.',\n    blockedIp: 'Please contact site owner as they have banned your ip.',\n    blockedEmail: 'Please contact site owner as they have banned your email.',\n    editingWithReplies: 'You cannot edit comments with replies.',\n    protectedAction: 'This action requires password authentication.',\n  },\n  timeAgo: {\n    seconds: 'now',\n    minutes: '%dm',\n    hours: '%dh',\n    days: '%dd',\n    months: '%dmo',\n    years: '%dY',\n    locale: 'en-US',\n  },\n  shareIcons: {\n    facebook: 'Share using Facebook',\n    linkedin: 'Share using Linkedin',\n    twitter: 'Share using Twitter',\n  },\n  login: {\n    facebook: 'Login using Facebook',\n    google: 'Login using Google',\n    twitter: 'Login using Twitter',\n    disqus: 'Login using Disqus',\n  },\n  commentText: {\n    when1: 'Comment',\n    whenX: 'Comments',\n  },\n  sorting: {\n    editorsPick: `Editor's Pick`,\n    latest: 'Latest',\n    more: 'More', // dropdown for filters: mostReplied, mostDisliked, oldest\n    mostLiked: 'Best',\n    mostReplied: 'Most Replied',\n    oldest: 'Oldest',\n    sortBy: 'Sort by:',\n  },\n  buttons: {\n    addComment: 'Add Comment',\n    like: 'Like',\n    liked: 'Liked',\n    loadMore: 'Load more comments',\n    post: 'Post',\n    showMoreArticles: 'Show more articles',\n  },\n  footer: {\n    addVuukle: 'Add Vuukle',\n    privacy: 'Privacy',\n  },\n  recommendedStories: 'Talk of the town',\n};\n\nlet translation = initialCustomText;\n(() => {\n  const customTextFromUrl = urlSearchParams.get('customText');\n  if (!customTextFromUrl) {\n    return;\n  }\n  try {\n    translation = mergeDeepRight(initialCustomText, JSON.parse(customTextFromUrl));\n  } catch (err) {\n    console.warn('localization_text param is not correct JSON string'); // tslint:disable-line\n  }\n})();\n\nexport default translation;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  className?: string;\n}\n\n// tslint:disable max-line-length\nconst Footer: React.FunctionComponent<IProps> = ({ className }) => {\n  return (\n    <footer className={className}>\n      <div>\n        {/* Add Vuukle Link */}\n        <a\n          href=\"https://vuukle.com/comments-widget.html\"\n          target=\"_blank\"\n          rel=\"noopener nofollow\"\n          className=\"add-vuukle-link\"\n        >\n          <svg viewBox=\"0 0 24 24\">\n            <path d=\"M19,11H15V15H13V11H9V9H13V5H15V9H19M20,2H8A2,2 0 0,0 6,4V16A2,2 0 0,0 8,18H20A2,2 0 0,0 22,16V4A2,2 0 0,0 20,2M4,6H2V20A2,2 0 0,0 4,22H18V20H4V6Z\" />\n          </svg>\n          <span>{translation.footer.addVuukle}</span>\n        </a>\n        {/* Privacy Link */}\n        <a href=\"https://vuukle.com/terms.html\" target=\"_blank\" rel=\"noopener nofollow\">\n          <svg viewBox=\"0 0 24 24\">\n            <path d=\"M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z\" />\n          </svg>\n          <span>{translation.footer.privacy}</span>\n        </a>\n      </div>\n      <a href=\"https://vuukle.com\" target=\"_blank\" rel=\"noopener nofollow\" className=\"v-logo\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 686.04 216.06\">\n          <g>\n            <path d=\"M91.87,144.95l3.7-9c7.2-17.73,14.51-35.45,21.71-53.18C124.17,66,131,49.06,137.85,32.26c3.09-7.46,6.07-14.93,9.26-22.39A2.49,2.49,0,0,1,149,8.52c10-.1,20-.1,29.83-.1.21,0,.41.21.82.31a13.2,13.2,0,0,1-.62,1.87c-10.18,24.15-20.47,48.31-30.66,72.46-10.8,25.5-21.5,51-32.3,76.51L92.9,214.3c-.31.73-1,1.14-1.65,1.76-.51-.62-1.34-1.14-1.65-1.76-4.84-10.88-9.57-21.77-14.3-32.55L54.63,134.17Q41.36,103.69,28,73C18.93,52.37,10,31.64.93,10.91.62,10.28.41,9.56,0,8.63a17.38,17.38,0,0,1,2.16-.1c9.77-.1,19.55,0,29.22-.1a3.13,3.13,0,0,1,3.29,2.18c8.33,19.8,16.67,39.7,25,59.5q14.81,35.14,29.53,70.08c.72,1.66,1.34,3.21,2.06,4.87a1.3,1.3,0,0,1,.62-.1Z\" />\n            <path d=\"M512.2,213.26H478.68a3.34,3.34,0,0,1-3.3-1.76c-7.53-11.39-15.06-22.67-22.59-34-.31-.52-.72-1-1.13-1.66-.31.1-.52.1-.62.21C447.42,180,443.91,184,440.4,188a4.29,4.29,0,0,0-.52,2.38V213a14.45,14.45,0,0,1-1.86.21c-8.67,0-17.33-.1-26,0-1.75,0-2.27-.52-2.27-2.17q.15-104.35,0-208.7c0-1.76.52-2.38,2.37-2.38,8.25.1,16.61.1,25,.1,2.79,0,2.79,0,2.79,2.69v146.9c.72-.62,1.13-.93,1.44-1.24,10.21-12.11,20.32-24.12,30.43-36.23a4.34,4.34,0,0,1,3.82-1.86c9.9.1,19.81,0,29.71,0h2.79c-.83,1-1.34,1.66-1.86,2.28l-33,38.1c-1.24,1.35-1.34,2.28-.31,3.83,12.79,18.84,25.48,37.89,38.07,56.73a13.31,13.31,0,0,1,1.24,2Z\" />\n            <path d=\"M679.11,198.59c-3.29,2.58-6.38,5.48-10,7.75-12.46,8-26.25,9.72-40.66,8.58a58.41,58.41,0,0,1-27.38-8.58c-12-7.55-19.76-18.3-22.75-32.26s-1.54-27.4,5.56-39.91a50.55,50.55,0,0,1,29.54-24c15.54-5,30.88-4.34,45.39,3.52,12.87,6.93,20.48,18.09,24.5,31.95A72.94,72.94,0,0,1,686,168.71c0,2.07-.41,2.79-2.57,2.69H608.19a21.38,21.38,0,0,0,.72,2.58c3.5,9.72,10.91,14.58,20.79,15.61,11.12,1.34,21.41-1.24,30.16-8.58.72-.62,1.34-.93,2.26-.1,5.35,5.48,10.81,11,16.26,16.44a4.59,4.59,0,0,1,.72,1.24ZM608.6,150h45.6c-1.54-10.65-10.71-17.68-22.34-17.58-13.18.1-21.31,8.17-23.26,17.58Z\" />\n            <path d=\"M191.68,109.43v2.91c0,19.45-.1,38.91,0,58.26,0,6.14,1.86,11.55,7.34,15,3.83,2.39,8.07,2.91,12.51,2.7,7.65-.42,14.17-2.91,18.1-10.09,2.38-4.58,2.79-9.67,2.79-14.77.1-17,0-34,0-51v-2.81a17.3,17.3,0,0,1,2.07-.21c8.58,0,17.17.1,25.85,0,1.65,0,2.07.52,2.07,2.08v99.24c0,1.14,0,2.08-1.55,2.08h-27.3c-.31,0-.52-.21-1-.31V200.77a1.74,1.74,0,0,1-.52-.21,16.37,16.37,0,0,0-1.24,1.56c-5.48,7.59-13.13,11.34-22.13,12.8-7.76,1.14-15.31.94-22.65-1.87-12.2-4.47-19.44-13.52-22.44-25.9a78.46,78.46,0,0,1-2-17.06c-.21-19.35,0-38.7-.1-58,0-2,.41-2.6,2.48-2.6,8.48.1,17,0,25.44,0Z\" />\n            <path d=\"M355.71,201c-2.9,2.81-5.48,5.83-8.58,8.23-6,4.48-13,6-20.27,6.35-10.34.52-20-1.67-28.13-8.54a35.68,35.68,0,0,1-12-20.62,86.87,86.87,0,0,1-1.65-17.08c-.21-19.06-.1-38.11-.1-57.06,0-2.81,0-2.81,2.69-2.81,8.38,0,16.65.1,25,0,2,0,2.38.52,2.38,2.5,0,19.26,0,38.53.1,57.79a27.33,27.33,0,0,0,1.24,8.23c1.55,5.21,5.38,8.43,10.65,9.68a28,28,0,0,0,15.51-.62c8.89-3,12.31-9.89,13.13-18.64.1-1.77.1-3.64.1-5.41V109.64c.93-.1,1.55-.21,2.07-.21,8.69,0,17.27.1,25.85,0,1.65,0,2.17.42,2.17,2.08q-.16,49.67,0,99.34c0,1.67-.62,2.08-2.17,2.08-8.58-.1-17.27-.1-25.85,0-1.65,0-2.17-.52-2.07-2.19.1-2.71,0-5.41,0-8.12a8,8,0,0,0-.1-1.67Z\" />\n            <path d=\"M527.64.21A19.84,19.84,0,0,1,530,.1c8.28,0,16.55,0,24.83-.1,1.72,0,2.32.41,2.32,2.48V210.57c0,2-.4,2.69-2.42,2.59-8.28-.1-16.65-.1-25,0-1.51,0-2-.52-2-2.07.1-11.8,0-23.49,0-35.18V.21Z\" />\n          </g>\n        </svg>\n      </a>\n    </footer>\n  );\n};\n\nconst StyledFooter = styled(Footer)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  margin: 30px 0 10px;\n  padding-top: 10px;\n  border-top: 1px solid #e7e9ed;\n  a {\n    display: inline-flex;\n    align-items: center;\n    font-weight: bold;\n  }\n\n  > div {\n    font-size: 0.8rem;\n    a {\n      color: ${(props) => props.theme.mutedColor};\n      svg {\n        fill: ${(props) => props.theme.mutedColor};\n      }\n      &:last-child {\n        margin-left: 5px;\n      }\n    }\n    svg {\n      margin-right: 2px;\n      width: 15px;\n      height: 15px;\n      fill: ${(props) => props.theme.primaryColor};\n    }\n  }\n\n  > div,\n  .v-logo {\n    margin-bottom: 5px;\n  }\n\n  .v-logo {\n    svg {\n      width: 50px;\n      fill: ${(props) => props.theme.mutedColor};\n    }\n    &:hover {\n      svg {\n        fill: ${(props) => props.theme.primaryColor};\n      }\n    }\n  }\n\n  @media (max-width: 320px) {\n    .add-vuukle-link {\n      display: none;\n    }\n  }\n\n  @media (max-width: 200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport default StyledFooter;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '@vuukle/button';\nimport Tag from '@vuukle/tag';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  recommended: boolean;\n  recommends: number;\n  onClick: () => void;\n  inProgress?: boolean;\n\n  className?: string;\n}\n\n/**\n * @name RecommendButton\n * Button to recommend article.\n * Used in the header of the widget.\n * @render React\n * @example <RecommendButton recommended={false} recommends={15} onClick={() => alert('Recommended')} />\n */\nconst RecommendButton: React.FunctionComponent<IProps> = ({\n  recommended,\n  recommends,\n  className,\n  inProgress = false,\n  onClick,\n}) => {\n  return (\n    <Button sm={true} type=\"subtle\" className={className} onClick={onClick} active={recommended} loading={inProgress}>\n      <span role=\"img\" aria-label=\"heart\">\n        ❤️\n      </span>\n      <span>{recommended ? translation.common.recommended : translation.common.recommend}</span> <Tag>{recommends}</Tag>\n    </Button>\n  );\n};\n\nconst StyledRecommendButton = styled(RecommendButton)<IProps>`\n  span {\n    text-transform: capitalize !important;\n    transition: all 0.2s;\n  }\n  span[role='img'] {\n    margin-right: 2px;\n    opacity: ${props => (props.recommended ? 1 : 0.5)};\n  }\n  &:hover {\n    span[role='img'] {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default StyledRecommendButton;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { CommentsStore } from 'modules/CommentList/store';\nimport { WidgetStore } from 'stores/widgetStore';\n\nimport RecommendButton from 'components/RecommendButton';\nimport translation from 'stores/translationStore';\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 5px;\n  margin-bottom: 15px;\n  margin-top: 5px;\n  border-bottom: 1px solid rgba(150, 150, 150, 0.2);\n  > div:first-child {\n    font-weight: 600;\n  }\n`;\n\ninterface IProps {\n  className?: string;\n}\n\ninterface IInjectedProps {\n  commentsStore: CommentsStore;\n  widgetStore: WidgetStore;\n}\n\n@inject('commentsStore', 'widgetStore')\n@observer\nclass Header extends React.Component<IProps> {\n  get injected() {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  public render() {\n    if (this.injected.commentsStore.loading && this.injected.commentsStore.totalComments <= 0) {\n      return null;\n    }\n\n    return (\n      <Wrapper className={this.props.className}>\n        <div>\n          {this.injected.commentsStore.totalComments === 1\n            ? translation.commentText.when1\n            : translation.commentText.whenX}{' '}\n          ({this.injected.commentsStore.totalComments})\n        </div>\n        <div>\n          <RecommendButton\n            recommended={this.injected.widgetStore.isRecommended}\n            recommends={this.injected.widgetStore.recommendCount}\n            onClick={this.injected.widgetStore.recommend}\n            inProgress={this.injected.widgetStore.recommendInProgress}\n          />\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Dropdown from '@vuukle/dropdown';\nimport Icon from '@vuukle/icon';\nimport { Menu } from '@vuukle/menu';\nimport { TabItem, Tabs } from '@vuukle/tabs';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  active: string;\n  onSelect: (active: string) => void;\n\n  className?: string;\n}\n\nconst SortingRow: React.FunctionComponent<IProps> = ({ active, className, onSelect }) => {\n  return (\n    <Tabs className={className} active={active} onSelect={onSelect}>\n      <span className=\"v-sorting-header\">{translation.sorting.sortBy} </span>\n      <TabItem name=\"get_latest\" className=\"v-t-pane\">\n        {translation.sorting.latest /* Latest */}\n      </TabItem>\n      <TabItem name=\"get_most_up_votes\" className=\"v-t-pane\">\n        {translation.sorting.mostLiked /* Best */}\n      </TabItem>\n      <TabItem name=\"get_top_comment\" className=\"v-t-pane\">\n        {translation.sorting.editorsPick /* Editor's Pick */}\n      </TabItem>\n      <Dropdown\n        align=\"right\"\n        className={active === 'get_most_replied' || active === 'get_reverse_chrono' ? `active v-t-pane` : `v-t-pane`}\n        menu={\n          <Menu>\n            <Menu.Item\n              onClick={() => onSelect('get_top_comment')}\n              active={active === 'get_top_comment'}\n              className=\"v-editors-pick\"\n            >\n              {translation.sorting.editorsPick /* Editor's Pick */}\n            </Menu.Item>\n            <Menu.Item onClick={() => onSelect('get_most_replied')} active={active === 'get_most_replied'}>\n              {translation.sorting.mostReplied /* Most Replies */}\n            </Menu.Item>\n            <Menu.Item onClick={() => onSelect('get_reverse_chrono')} active={active === 'get_reverse_chrono'}>\n              {translation.sorting.oldest /* Oldest */}\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <a href=\"#\">\n          {translation.sorting.more /* More */} <Icon type=\"caret\" />\n        </a>\n      </Dropdown>\n    </Tabs>\n  );\n};\n\nconst StyledSortingRow = styled(SortingRow)`\n  .v-sorting-header {\n    margin-right: 5px;\n  }\n  .v-editors-pick {\n    display: none;\n  }\n\n  @media (max-width: 400px) {\n    .v-sorting-header,\n    .v-t-pane:nth-child(4) {\n      display: none;\n    }\n\n    .v-editors-pick {\n      display: block;\n    }\n  }\n`;\n\nexport default StyledSortingRow;\n","import * as React from 'react';\n\nimport Input from '@vuukle/input';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  id: string;\n  value: string;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n}\n\nconst EmailInput: React.FunctionComponent<IProps> = ({ id, value, onChange, disabled = false }) => (\n  <Input\n    type=\"email\"\n    value={value}\n    placeholder={translation.common.email}\n    dir=\"auto\"\n    name=\"email\"\n    id={`email-${id}`}\n    onChange={onChange}\n    required={true}\n    disabled={disabled}\n  />\n);\n\nexport default EmailInput;\n","import * as React from 'react';\n\nimport Input from '@vuukle/input';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  id: string;\n  value: string;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  minLength?: number;\n}\n\nconst PasswordInput: React.FunctionComponent<IProps> = ({ id, value, onChange, minLength = 5 }) => (\n  <Input\n    type=\"password\"\n    name=\"password\"\n    id={`password-${id}`}\n    placeholder={translation.common.password}\n    minLength={minLength}\n    maxLength={32}\n    onChange={onChange}\n    required={true}\n  />\n);\n\nexport default PasswordInput;\n","import styled from 'styled-components';\n\nexport default styled.form`\n  input[type='text'],\n  input[type='email'],\n  input[type='password'],\n  > div {\n    display: block;\n    margin-bottom: 10px;\n  }\n  input[type='checkbox'] {\n    margin: 0 5px;\n  }\n`;\n","/**\n * @file Contains protected auth component. This component is used to show authorization module\n * for users that want to perform action that requires password authorization, but user is authenticated\n * without password.\n */\nimport uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport EmailInput from './components/EmailInput';\nimport PasswordInput from './components/PasswordInput';\nimport StyledForm from './components/StyledForm';\n\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  onClose: () => void;\n}\n\ninterface IState {\n  password: string;\n}\n\n/** MobX Store injected props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\ninterface IInjectedProps {\n  authStore: AuthStore;\n  userStore: UserStore;\n}\n\n@inject('authStore', 'userStore')\n@observer\nclass ProtectedAuth extends React.Component<IProps, IState> {\n  private readonly id: string = uniqueId('pwd');\n  public readonly state: Readonly<IState> = {\n    password: '',\n  };\n\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   * @return {Props & InjectedProps}\n   */\n  public get injected(): IProps & IInjectedProps {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  protected onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    this.injected.authStore\n      .signIn((this.injected.userStore.details && this.injected.userStore.details.email) || '', this.state.password)\n      .then(() => {\n        if (!this.injected.authStore.error) {\n          this.setState({ password: '' });\n        }\n      });\n  };\n\n  /** Handles input change and writes to store based on input name attribute */\n  private handleInputChange = (e: React.FormEvent<HTMLInputElement>): void =>\n    this.setState({ [e.currentTarget.name as 'password']: e.currentTarget.value });\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit}>\n        <div>\n          <p>{translation.messages.protectedAction}</p>\n          <EmailInput\n            id={this.id}\n            value={(this.injected.userStore.details && this.injected.userStore.details.email) || ''}\n            onChange={this.handleInputChange}\n            disabled={true}\n          />\n          <PasswordInput id={this.id} value={this.state.password} minLength={0} onChange={this.handleInputChange} />\n          {/* Errors Alert */}\n          {error && (\n            <Alert type=\"error\" onClose={closeAlert}>\n              {this.injected.authStore.error}\n            </Alert>\n          )}\n          {/* Submit Button */}\n          <div style={{ textAlign: 'right' }}>\n            <p>\n              <span style={{ margin: '0 5px' }}>\n                Forgot password?{' '}\n                <a href=\"https://user.vuukle.com/forgot-password\" target=\"_blank\" rel=\"nofollow\">\n                  {translation.messages.passwordReset}\n                </a>\n              </span>\n            </p>\n            <Button\n              disabled={inProgress}\n              htmlType=\"button\"\n              onClick={this.props.onClose}\n              type=\"subtle\"\n              style={{ margin: '0 5px' }}\n            >\n              {translation.common.cancel}\n            </Button>\n            <Button loading={inProgress} htmlType=\"submit\">\n              {translation.common.signIn}\n            </Button>\n          </div>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default ProtectedAuth;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Alert from '@vuukle/alert';\nimport Avatar from '@vuukle/avatar';\nimport Button from '@vuukle/button';\nimport ProtectedAuth from 'modules/Auth/ProtectedAuth';\n\nimport { IAlert } from 'stores/models/Alert';\n\nimport CommentModel from 'modules/CommentList/store/CommentItem';\ninterface IProps {\n  comment: CommentModel;\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  alert: IAlert | null;\n  closeAlert: () => void;\n  inProgress: boolean;\n  closeEditor: () => void;\n  children: any;\n  authenticatedWithPassword: boolean;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  > div:first-child {\n    flex: 0 0 40px;\n    margin-right: 10px;\n  }\n\n  > div:last-child {\n    flex: 1 1 100%;\n    max-width: calc(100% - 50px);\n  }\n`;\n\nclass EditFormWrapper extends React.PureComponent<IProps> {\n  /** Renders Alert */\n  private renderAlert = (): React.ReactElement | null => {\n    if (!this.props.alert) {\n      return null;\n    }\n    return (\n      <Alert type={this.props.alert.type} onClose={this.props.closeAlert}>\n        {this.props.alert.message}\n      </Alert>\n    );\n  };\n\n  /** Renders available actions for users authenticated with password, otherwise we show auth */\n  private renderAuthenticatedActions = () => {\n    return (\n      <div style={{ textAlign: 'right' }}>\n        <Button\n          disabled={this.props.inProgress}\n          onClick={this.props.closeEditor}\n          htmlType=\"button\"\n          type=\"subtle\"\n          style={{ margin: '0 5px' }}\n        >\n          Cancel\n        </Button>\n        <Button loading={this.props.inProgress} htmlType=\"submit\">\n          Save Edit\n        </Button>\n      </div>\n    );\n  };\n\n  public render() {\n    return (\n      <Wrapper>\n        <div>\n          <Avatar\n            src={this.props.comment.data.pictureUrl}\n            name={this.props.comment.data.name}\n            hash={this.props.comment.data.userId}\n          />\n        </div>\n        <div>\n          <form onSubmit={this.props.onSubmit}>\n            {this.props.children}\n            <div style={{ marginTop: '10px' }}>\n              {this.renderAlert()}\n              {/** Render authenticated actions only and only if user has been authorized using password. Otherwise we show protected auth module */}\n              {this.props.authenticatedWithPassword && this.renderAuthenticatedActions()}\n            </div>\n          </form>\n          {!this.props.authenticatedWithPassword && <ProtectedAuth onClose={this.props.closeEditor} />}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default EditFormWrapper;\n","import darken from 'polished/lib/color/darken';\nimport styled from 'styled-components';\n\ninterface IProps {\n  focused: boolean;\n  children?: any;\n  language?: string;\n  toggleLanguage?: () => void;\n  charsLimit?: number;\n}\n\nconst TextareaFooterWrapper = styled('div')<IProps>`\n  min-height: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 7px 10px;\n  margin: 0;\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.mutedColor};\n  background-color: ${(props) => darken(0.02, props.theme.input.background)};\n  border: 1px solid ${(props) => (props.focused ? props.theme.input.active.border : props.theme.input.border)};\n  border-top: 0;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n`;\n\nexport default TextareaFooterWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  className?: string;\n  /**\n   * Allow Editor to be changed or not\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * onChange handler - called once user type anything\n   * @default undefined\n   */\n  onChange?: (e: React.KeyboardEvent<HTMLDivElement>) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLDivElement>) => void;\n  /**\n   * Click handler\n   * @default undefined\n   */\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  /**\n   * Paste event handler (ctrl/cmd + v)\n   * @default undefined\n   */\n  onPaste?: (e: React.ClipboardEvent<HTMLDivElement>) => void;\n  /**\n   * Same as placeholder for input\n   * @default ''\n   */\n  placeholder?: string;\n  /** ID of the div */\n  id: string;\n  /**\n   * Number of rows inside textarea\n   * @default 2\n   */\n  rows?: number;\n  /** HTML Values */\n  value: string;\n}\n\nconst StyledEditor = styled.div<{ rows?: number }>`\n  display: block;\n  padding: 15px;\n  text-align: left;\n  min-height: ${(props) => 30 + (props.rows || 2) * 16 + 'px'};\n  max-height: 300px;\n  overflow-y: auto;\n  background: ${(props) => props.theme.input.background};\n  border-radius: 4px 4px 0 0;\n  &:focus,\n  &:active {\n    outline: none;\n  }\n  &:empty:before {\n    content: attr(placeholder);\n    display: block;\n    color: ${(props) => props.theme.mutedColor};\n  }\n`;\n\ninterface IComponentProps extends IProps {\n  forwardRef: React.Ref<any>;\n}\n\nclass Editor extends React.PureComponent<IComponentProps> {\n  public static defaultProps: Partial<IProps> = {\n    disabled: false,\n    placeholder: '',\n    rows: 2,\n  };\n\n  public componentDidMount(): void {\n    document.execCommand('defaultParagraphSeparator', false, 'p');\n  }\n\n  /**\n   * Handle pasting of text and paste it as 'text/plain'\n   * @param e\n   */\n  private onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text/plain');\n\n    document.execCommand('insertText', false, text);\n\n    if (this.props.onPaste) {\n      this.props.onPaste(e);\n    }\n  };\n\n  /**\n   * Handle key down in the editor\n   * @param {React.KeyboardEvent<HTMLDivElement>} e\n   */\n  private onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    const callUpperHandler = (): void => (this.props.onKeyDown ? this.props.onKeyDown(e) : undefined);\n\n    /** Prevent creation of new divs on enter */\n    if (e.keyCode === 13) {\n      // e.preventDefault();\n      // document.execCommand('insertHTML', false, '<br/><br/>');\n      callUpperHandler();\n      return false;\n    }\n\n    callUpperHandler();\n    return false;\n  };\n\n  private onInput = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (!e.currentTarget.innerHTML) {\n      // document.execCommand('formatBlock', false, 'p');\n    }\n\n    return this.props.onChange ? this.props.onChange(e) : undefined;\n  };\n\n  public render() {\n    return (\n      <StyledEditor\n        className=\"editor\"\n        contentEditable={!this.props.disabled}\n        onInput={this.onInput}\n        ref={this.props.forwardRef}\n        id={this.props.id}\n        onFocus={this.props.onFocus}\n        onBlur={this.props.onBlur}\n        placeholder={this.props.placeholder}\n        onClick={this.props.onClick}\n        onPaste={this.onPaste}\n        onKeyDown={this.onKeyDown}\n        rows={this.props.rows}\n        dangerouslySetInnerHTML={{ __html: this.props.value }}\n      />\n    );\n  }\n}\n\nexport default React.forwardRef((props: IProps, ref) => <Editor {...props} forwardRef={ref} />);\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  /** Image url */\n  image: string;\n  /** On click action */\n  onClick: () => void;\n}\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst GifWrapper = styled.div`\n  margin-bottom: 5px;\n  width: 49%;\n  overflow: hidden;\n  cursor: pointer;\n  &:hover {\n    background: black;\n  }\n  &:hover ${Image} {\n    opacity: 0.9;\n  }\n`;\n\nconst GifItem = ({ image, onClick }: IProps) => (\n  <GifWrapper onClick={onClick}>\n    <Image src={image} />\n  </GifWrapper>\n);\n\nexport default GifItem;\n","import debounce from 'lodash/debounce';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Input from '@vuukle/input';\n\nimport GifItem from './GifItem';\nimport { getSearchGIFs, getTrendingGIFs, IGIFItem } from './utils';\n\ninterface IProps {\n  onSelect: (GIFLink: string) => void;\n}\n\ninterface IState {\n  GIFs: IGIFItem[];\n  searchGIFs: IGIFItem[];\n  searchValue: string;\n}\n\nconst SearchResult = styled.div`\n  margin-top: 5px;\n  margin-right: -5px;\n  height: 250px;\n  overflow-y: auto;\n  > p {\n    font-size: 0.8em;\n    color: ${(props) => props.theme.mutedColor};\n    text-transform: uppercase;\n    font-weight: bold;\n    margin: 0 0 10px;\n  }\n  > div {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n`;\n\nclass GifPicker extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      /** Trending GIFs from Giphy */\n      GIFs: [],\n      /** GIFs based on search value from Giphy */\n      searchGIFs: [],\n      /** Search input value */\n      searchValue: '',\n    };\n  }\n\n  /**\n   * Lifecycle method.\n   * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n   */\n  public componentDidMount() {\n    this.getTrending();\n  }\n\n  /**\n   * Search input change handler\n   * @param {React.FormEvent<HTMLInputElement>} e - Input event\n   * @return {void}\n   */\n  private onSearchInputChange = (e: React.FormEvent<HTMLInputElement>) =>\n    this.setState({ searchValue: e.currentTarget.value || '' }, () => this.searchGIFs());\n\n  /**\n   * Get trending GIFs and update state\n   * @return {Promise<void>}\n   */\n  private getTrending = async (): Promise<void> => {\n    const trendingResponse = await getTrendingGIFs();\n    this.setState({ GIFs: trendingResponse.data });\n  };\n\n  /**\n   * Get GIFs based on search input value. If it's empty then get trending GIFs.\n   * @return {Promise<void>}\n   */\n  private searchGIFs = debounce(async (): Promise<void> => {\n    if (this.state.searchValue) {\n      const searchResponse = await getSearchGIFs(this.state.searchValue);\n      this.setState({ searchGIFs: searchResponse.data });\n    } else {\n      this.getTrending().then(() => this.setState({ searchGIFs: [] }));\n    }\n  }, 1000);\n\n  /** Renders GIF items from the Giphy response */\n  private renderGifItems = (GIFs: IGIFItem[]): JSX.Element[] =>\n    GIFs.map((gif: IGIFItem) => (\n      <GifItem\n        key={gif.id}\n        image={gif.images.fixed_height_small.url}\n        onClick={() => this.props.onSelect(gif.images.downsized_medium.url)}\n      />\n    ));\n\n  public render() {\n    /** Select GIFs array to render based on search input */\n    const GIFs = this.state.searchGIFs.length > 0 ? this.state.searchGIFs : this.state.GIFs;\n\n    return (\n      <div>\n        <div>\n          <Input\n            placeholder=\"Search GIFs via Giphy ...\"\n            value={this.state.searchValue}\n            onChange={this.onSearchInputChange}\n          />\n        </div>\n        <SearchResult>\n          <p>{this.state.searchGIFs.length ? 'SEARCH RESULTS' : 'TRENDING'}</p>\n          <div>{this.renderGifItems(GIFs)}</div>\n        </SearchResult>\n      </div>\n    );\n  }\n}\n\nexport default GifPicker;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IButtonProps {\n  active?: boolean;\n  disabled?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Needed for rendering element as <label> */\n  for?: string;\n}\n\nexport const Button = styled.button<IButtonProps>`\n  -webkit-appearance: none !important;\n  outline: none;\n  border: none;\n  background: transparent;\n  transition: color 0.2s;\n  cursor: pointer;\n  margin: 0;\n  padding: 0 5px;\n\n  &:hover {\n    svg {\n      fill: ${(props) => props.theme.textColor};\n      transition: all 0.3s;\n    }\n  }\n\n  svg {\n    max-width: 20px;\n    width: 100%;\n    fill: ${(props) => props.theme.mutedColor};\n    ${(props) => props.disabled && `fill: ${props.theme.mutedColor} !important`};\n  }\n\n  //min-width: 20px;\n\n  ${(props) =>\n    props.active &&\n    `\n    color: ${props.theme.textColor};\n    font-weight: bold;\n    svg {\n      fill: ${props.theme.textColor};\n    }\n  `};\n\n  ${(props) => props.disabled && `cursor: not-allowed;`}\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: row;\n  height: 30px;\n  background: ${(props) => props.theme.input.background};\n  padding: 0 4px;\n  border: 0;\n  border-top: 1px dashed ${(props) => props.theme.input.border};\n  align-items: center;\n`;\n\nexport interface IOption {\n  onClick: () => void;\n  icon: string;\n  title?: string;\n  active?: boolean;\n}\n\ninterface IProps {\n  children?: any;\n  options: IOption[];\n}\n\nconst Options = ({ options, children }: IProps) => {\n  return (\n    <Wrapper>\n      {children}\n      <span>&nbsp;</span>\n      {options.map((option) => (\n        <Button\n          dangerouslySetInnerHTML={{ __html: option.icon }}\n          onClick={option.onClick}\n          active={option.active}\n          title={option.title}\n          type=\"button\"\n          key={option.title}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default Options;\n","import React from 'react';\n\nconst GIFIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 439.875 439.875\">\n    <path d=\"M76.5,191.25v57.375c0,21.037,17.212,38.25,38.25,38.25h57.375v-15.3V229.5v-19.125H114.75V229.5H153v38.25h-38.25 c-11.475,0-19.125-7.65-19.125-19.125V191.25c0-11.475,7.65-19.125,19.125-19.125h57.375V153H114.75 C93.712,153,76.5,170.212,76.5,191.25z\" />\n    <polygon points=\"191.25,172.125 210.375,172.125 210.375,267.75 191.25,267.75 191.25,286.875 248.625,286.875 248.625,267.75 229.5,267.75 229.5,172.125 248.625,172.125 248.625,153 191.25,153\" />\n    <path d=\"M382.5,95.625H57.375C24.862,95.625,0,120.487,0,153v133.875c0,32.513,24.862,57.375,57.375,57.375H382.5 c32.513,0,57.375-24.862,57.375-57.375V153C439.875,120.487,415.013,95.625,382.5,95.625z M420.75,286.875 c0,21.037-17.213,38.25-38.25,38.25H57.375c-21.038,0-38.25-17.213-38.25-38.25V153c0-21.038,17.212-38.25,38.25-38.25H382.5 c21.037,0,38.25,17.212,38.25,38.25V286.875z\" />\n    <polygon points=\"267.75,286.875 286.875,286.875 286.875,229.5 344.25,229.5 344.25,210.375 286.875,210.375 286.875,172.125 363.375,172.125 363.375,153 267.75,153\" />\n  </svg>\n);\n\nexport default GIFIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Menu } from '@vuukle/menu';\nimport GIFPicker from 'modules/GifPicker';\nimport { Button } from '../Options';\nimport Icon from './Icon';\n\ninterface IProps {\n  onSelect: (GIFUrl: string) => void;\n  disabled?: boolean;\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  .menu {\n    position: absolute;\n    left: 0;\n    top: 20px;\n    width: 350px;\n    padding: 10px;\n  }\n`;\n\nclass GIFDropdown extends React.Component<IProps, { displayMenu: boolean }> {\n  public wrapperRef: React.RefObject<any> = React.createRef();\n  public state = { displayMenu: false };\n\n  public showMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => document.addEventListener('click', this.hideMenu));\n  };\n\n  public hideMenu = (event: React.MouseEvent<HTMLButtonElement> | MouseEvent): void => {\n    const button = this.wrapperRef.current.querySelector('button');\n    if (\n      (this.wrapperRef.current && !this.wrapperRef.current.contains(event.target)) ||\n      (button && button.contains(event.target))\n    ) {\n      this.setState({ displayMenu: false }, () => document.removeEventListener('click', this.hideMenu));\n    }\n  };\n\n  /** Render Dropdown Menu once it's opened */\n  private renderMenu = () => (\n    <Menu className=\"menu\">\n      <GIFPicker\n        onSelect={(GIFLink) => {\n          this.setState({ displayMenu: false });\n          this.props.onSelect(GIFLink);\n        }}\n      />\n    </Menu>\n  );\n\n  public render() {\n    return (\n      <Wrapper ref={this.wrapperRef}>\n        <Button type={'button'} onClick={this.showMenu} disabled={this.props.disabled}>\n          <Icon />\n        </Button>\n\n        {/** GIF picker component */}\n        {this.state.displayMenu && this.renderMenu()}\n      </Wrapper>\n    );\n  }\n}\n\nexport default GIFDropdown;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Link from '@vuukle/link';\n\nconst EntityItem = styled.div`\n  display: inline-block;\n  max-width: 300px;\n  padding: 10px;\n  text-align: center;\n`;\n\ninterface IProps {\n  /** Image remove action */\n  onRemove: (url: string) => void;\n  /** Image url to display */\n  url: string;\n}\n\n/**\n * Renders added comment image\n */\nexport function ImageEntity({ onRemove, url }: IProps) {\n  return (\n    <EntityItem>\n      <img src={url} style={{ width: '100%', height: 'auto' }} alt=\"Comment image\" />\n      <div>\n        <Link light={true} onClick={() => onRemove(url)}>\n          Remove\n        </Link>\n      </div>\n    </EntityItem>\n  );\n}\n\nexport default ImageEntity;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport ImageEntity from './ImagePreview';\n\ninterface IProps {\n  /** Image remove action */\n  items: string[];\n  /** Function to remove entity */\n  onRemove: (url: string) => void;\n}\n\n/**\n * Renders added images to comment\n */\nexport function ImagesPreview({ onRemove, items }: IProps) {\n  return (\n    <div>\n      {items.map((url: string) => (\n        <ImageEntity onRemove={onRemove} key={url} url={url} />\n      ))}\n    </div>\n  );\n}\n\nexport default observer(ImagesPreview);\n","import * as React from 'react';\n\nconst CameraIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 333.668 333.668\">\n      <path\n        d=\"M295.101,298.649H38.561C17.295,298.649,0,281.354,0,260.088V103.703c0-21.266,17.295-38.561,38.561-38.561h52.347\n\t\tl4.582-15.457c1.87-8.458,9.602-14.666,18.696-14.666h105.297c8.837,0,16.658,6.176,18.728,14.743l0.122,0.527l4.177,14.852h52.597\n\t\tc21.266,0,38.561,17.295,38.561,38.561v156.384C333.662,281.354,316.361,298.649,295.101,298.649z M38.561,77.996\n\t\tc-14.178,0-25.707,11.53-25.707,25.707v156.384c0,14.178,11.53,25.707,25.707,25.707h256.54c14.178,0,25.707-11.53,25.707-25.707\n\t\tV103.703c0-14.178-11.53-25.707-25.707-25.707h-62.327l-7.037-25.097c-0.649-2.918-3.278-5.032-6.26-5.032H114.179\n\t\tc-3.027,0-5.598,2.069-6.26,5.039l-7.429,25.09H38.561z M166.841,259.798c-44.981,0-81.576-36.588-81.576-81.563\n\t\tc0-44.981,36.594-81.569,81.576-81.569c44.969,0,81.557,36.594,81.557,81.569C248.397,223.204,211.809,259.798,166.841,259.798z\n\t\t M166.841,109.513c-37.893,0-68.722,30.823-68.722,68.716s30.83,68.709,68.722,68.709c37.886,0,68.703-30.823,68.703-68.709\n\t\tC235.543,140.336,204.72,109.513,166.841,109.513z M286.804,101.852c-6.555,0-11.858,5.315-11.858,11.858\n\t\tc0,6.549,5.302,11.857,11.858,11.857c6.549,0,11.851-5.309,11.851-11.857C298.649,107.167,293.346,101.852,286.804,101.852z\"\n      />\n    </svg>\n  );\n};\n\nexport default CameraIcon;\n","import uniqueId from 'lodash/uniqueId';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Button } from '../Options';\nimport CameraIcon from './CameraIcon';\n\ninterface IProps {\n  className?: string;\n  onFileInputChange: (e: any) => void;\n  disabled?: boolean;\n}\n\nconst UploadButton = ({ className, onFileInputChange, disabled }: IProps) => {\n  const id = uniqueId('upload_');\n  return (\n    <div className={className}>\n      <Button type=\"button\" as=\"label\" for={id} style={{ margin: '0 5px' }} disabled={disabled}>\n        <CameraIcon />\n      </Button>\n      <input\n        type=\"file\"\n        name={id}\n        accept=\".png,.jpg,.jpeg,.bmp\"\n        id={id}\n        onChange={onFileInputChange}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nconst StyledUploadButton = styled(UploadButton)`\n  position: relative;\n  overflow: hidden;\n\n  input[type='file'] {\n    font-size: 100px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    visibility: hidden;\n    cursor: pointer;\n  }\n`;\n\nexport default StyledUploadButton;\n","/** Detect Tag in a content editable */\nexport const whichTag = (tagName: string) => {\n  const sel = window.getSelection();\n  let containerNode: Node | null = null;\n  let tagFound = false;\n  tagName = tagName.toUpperCase();\n\n  if (sel.rangeCount > 0) {\n    containerNode = sel.getRangeAt(0).commonAncestorContainer;\n  }\n\n  while (containerNode) {\n    if (containerNode.nodeType === 1 && (containerNode as HTMLElement).tagName === tagName) {\n      tagFound = true;\n      containerNode = null;\n      break;\n    } else if ((containerNode as HTMLElement).contentEditable === 'true') {\n      tagFound = false;\n      break;\n    } else {\n      containerNode = containerNode.parentNode;\n    }\n  }\n\n  return tagFound;\n};\n","import { action, computed, decorate, observable } from 'mobx';\nimport { createRef, RefObject } from 'react';\n\nimport { BoldIcon, CodeIcon, ItalicIcon, QuoteIcon, UlIcon, UnderlineIcon } from '../components/Icons';\nimport { whichTag } from '../utils';\n\nexport interface IOption {\n  icon: any;\n  onClick: () => void;\n  title?: string;\n  active?: boolean;\n}\n\ninterface IFormattingState {\n  bold: boolean;\n  italic: boolean;\n  underline: boolean;\n  pre: boolean;\n  ul: boolean;\n  blockquote: boolean;\n}\n\nclass Formatting {\n  /** Ref to the contentEditable element */\n  public ref: RefObject<HTMLDivElement> = createRef<HTMLDivElement>();\n  /** State of the formatting things. i.e. bold: active/inactive etc. */\n  public formattingState: IFormattingState;\n  /** IE/Edge detection */\n  private isEdgeBrowser: boolean = (document as any).documentMode || /Edge/.test(navigator.userAgent);\n\n  constructor() {\n    this.formattingState = this.getFormattingState();\n  }\n\n  @action\n  private getFormattingState = (): IFormattingState => ({\n    blockquote: whichTag('blockquote'),\n    bold: document.queryCommandState('bold'),\n    italic: document.queryCommandState('italic'),\n    pre: whichTag('pre'),\n    ul: document.queryCommandState('insertUnorderedList'),\n    underline: document.queryCommandState('underline'),\n  });\n\n  @action\n  private focus = () => {\n    if (this.ref.current) {\n      this.ref.current.focus();\n    }\n  };\n\n  public updateFormattingState = () => (this.formattingState = this.getFormattingState());\n\n  @action\n  private formatText = (commandId: 'bold' | 'italic' | 'underline') => {\n    this.focus();\n\n    document.execCommand(commandId, false);\n    this.formattingState = this.getFormattingState();\n\n    this.focus();\n  };\n\n  // TODO: mb create a decorator\n  // TODO: improve logic\n  private formatBlock = (command: 'blockquote' | 'pre' | 'p'): void => {\n    this.focus();\n\n    // Firefox checking\n    if (whichTag('blockquote')) {\n      document.execCommand('outdent', false);\n      if (command === 'blockquote') {\n        return;\n      }\n    }\n\n    if (document.queryCommandState('insertUnorderedList')) {\n      document.execCommand('insertUnorderedList');\n    }\n\n    if (whichTag(command)) {\n      document.execCommand('formatBlock', false, 'p');\n    } else {\n      if (document.queryCommandValue('formatBlock') && document.queryCommandValue('formatBlock') !== 'Normal') {\n        // Edge returns 'Normal' for formatted blocks, so we need to check this too. Until they won't switch to chromium\n        document.execCommand('formatBlock', false, 'p');\n      }\n      document.execCommand('formatBlock', false, `<${command}>`);\n    }\n\n    this.removeAttributes();\n    this.updateFormattingState();\n    this.focus();\n  };\n\n  /**\n   * Clear HTML style attributes inside contentEditable\n   * @return {void}\n   */\n  private removeAttributes = (): void => {\n    if (this.ref.current) {\n      this.ref.current.querySelectorAll('*').forEach((item) => {\n        if (item instanceof HTMLElement) {\n          item.removeAttribute('style');\n        }\n      });\n    }\n  };\n\n  private insertList = (type: 'ol' | 'ul') => {\n    this.focus();\n\n    if (whichTag('blockquote')) {\n      document.execCommand('outdent', false);\n    }\n\n    if (whichTag('pre') || whichTag('blockquote')) {\n      this.formatBlock('p');\n    }\n\n    if (type === 'ol') {\n      document.execCommand('insertOrderedList');\n    } else {\n      document.execCommand('insertUnorderedList');\n    }\n\n    this.removeAttributes();\n    this.focus();\n  };\n\n  /**\n   * Available formatting options to render\n   * @return {IOption[]} Array of the options with all needed props to render using React\n   */\n  get options(): IOption[] {\n    const { italic, bold, underline, blockquote, pre, ul } = this.formattingState;\n\n    const options = [\n      { active: bold, icon: BoldIcon, title: 'Bold', onClick: () => this.formatText('bold') },\n      { active: italic, icon: ItalicIcon, onClick: () => this.formatText('italic'), title: 'Italic' },\n      { active: underline, icon: UnderlineIcon, onClick: () => this.formatText('underline'), title: 'Underline' },\n    ];\n\n    // Unfortunately we can't offer block formatting inside Edge, as it's working unstable\n    if (this.isEdgeBrowser) {\n      return options;\n    }\n\n    // For all other browsers we offer block formatting options\n    return [\n      ...options,\n      { active: blockquote, icon: QuoteIcon, onClick: () => this.formatBlock('blockquote'), title: 'Quotation' },\n      { icon: CodeIcon, title: 'Code', onClick: () => this.formatBlock('pre'), active: pre },\n      { icon: UlIcon, title: 'List', onClick: () => this.insertList('ul'), active: ul },\n    ];\n  }\n}\n\ndecorate(Formatting, {\n  formattingState: observable,\n  updateFormattingState: action,\n\n  options: computed,\n});\n\nexport default Formatting;\n","/**\n * SVG Icons file\n */\n\nexport const BoldIcon = `\n <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      version=\"1.1\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M13.5,15.5H10V12.5H13.5A1.5,1.5 0 0,1 15,14A1.5,1.5 0 0,1 13.5,15.5M10,6.5H13A1.5,1.5 0 0,1 14.5,8A1.5,1.5 0 0,1 13,9.5H10M15.6,10.79C16.57,10.11 17.25,9 17.25,8C17.25,5.74 15.5,4 13.25,4H7V18H14.04C16.14,18 17.75,16.3 17.75,14.21C17.75,12.69 16.89,11.39 15.6,10.79Z\" />\n    </svg>\n`;\n\nexport const CodeIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M14.6,16.6L19.2,12L14.6,7.4L16,6L22,12L16,18L14.6,16.6M9.4,16.6L4.8,12L9.4,7.4L8,6L2,12L8,18L9.4,16.6Z\" />\n  </svg>\n`;\n\nexport const ItalicIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M10,4V7H12.21L8.79,15H6V18H14V15H11.79L15.21,7H18V4H10Z\" />\n  </svg>\n`;\n\nexport const QuoteIcon = `\n<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M14,17H17L19,13V7H13V13H16M6,17H9L11,13V7H5V13H8L6,17Z\" />\n  </svg>\n`;\n\nexport const UlIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M3,13H5V11H3V13M3,17H5V15H3V17M3,9H5V7H3V9M7,13H21V11H7V13M7,17H21V15H7V17M7,7V9H21V7H7Z\" />\n  </svg>\n`;\n\nexport const UnderlineIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M5,21H19V19H5V21M12,17A6,6 0 0,0 18,11V3H15.5V11A3.5,3.5 0 0,1 12,14.5A3.5,3.5 0 0,1 8.5,11V3H6V11A6,6 0 0,0 12,17Z\" />\n  </svg>\n`;\n\nexport const GIFIcon = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 439.875 439.875\">\n <path d=\"M76.5,191.25v57.375c0,21.037,17.212,38.25,38.25,38.25h57.375v-15.3V229.5v-19.125H114.75V229.5H153v38.25h-38.25 c-11.475,0-19.125-7.65-19.125-19.125V191.25c0-11.475,7.65-19.125,19.125-19.125h57.375V153H114.75 C93.712,153,76.5,170.212,76.5,191.25z\" />\n <polygon points=\"191.25,172.125 210.375,172.125 210.375,267.75 191.25,267.75 191.25,286.875 248.625,286.875 248.625,267.75 229.5,267.75 229.5,172.125 248.625,172.125 248.625,153 191.25,153\" />\n <path d=\"M382.5,95.625H57.375C24.862,95.625,0,120.487,0,153v133.875c0,32.513,24.862,57.375,57.375,57.375H382.5 c32.513,0,57.375-24.862,57.375-57.375V153C439.875,120.487,415.013,95.625,382.5,95.625z M420.75,286.875 c0,21.037-17.213,38.25-38.25,38.25H57.375c-21.038,0-38.25-17.213-38.25-38.25V153c0-21.038,17.212-38.25,38.25-38.25H382.5 c21.037,0,38.25,17.212,38.25,38.25V286.875z\" />\n <polygon points=\"267.75,286.875 286.875,286.875 286.875,229.5 344.25,229.5 344.25,210.375 286.875,210.375 286.875,172.125 363.375,172.125 363.375,153 267.75,153\" />\n</svg>\n`;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport styled from 'styled-components';\nimport EditorBox from './components/EditorBox';\nimport GIFDropdown from './components/GIFDropdown';\nimport ImagesPreview from './components/ImagesPreview';\nimport Options from './components/Options';\nimport UploadImageButton from './components/UploadImageButton';\n\nimport FormattingStore from './stores/Formatting';\n\n/** Values that Rich Editor returns for onChange event handler */\nexport interface IEditorChangeReturn {\n  /** Images urls list */\n  images: string[];\n  /** Computed HTML of the comment including added images html */\n  html: string;\n  /** Plain comment text */\n  text: string;\n}\n\ninterface IProps {\n  // === General Section ===\n  /** ID of the div */\n  id: string;\n  /** Editor HTML value */\n  value: string;\n  /**\n   * Same as placeholder for input\n   * @default ''\n   */\n  placeholder?: string;\n  /**\n   * Allow Editor to be changed or not\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * onChange handler - called once user type anything\n   * @default undefined\n   */\n  onChange?: ({ images, html, text }: IEditorChangeReturn) => void;\n  /** On Focus event handler */\n  onFocus?: () => void;\n  /** On Blur event handler */\n  onBlur?: () => void;\n  /** On Key down event handler */\n  onKeyDown?: (e: React.KeyboardEvent<HTMLDivElement>) => void;\n  /**\n   * Click handler\n   * @default undefined\n   */\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n\n  // === 🖼️ Images Section ===\n  /** Images URLs */\n  images: string[];\n  /**\n   * Disable images adding\n   * @default false\n   */\n  imagesDisabled?: boolean;\n  /** Callback to add image */\n  addImage: (url: string | File) => void;\n  /** Called once user is trying to remove an image */\n  removeImage: (url: string) => void;\n  /** Hide upload image icon */\n  hideUploadImage: boolean;\n  /**\n   * Number of rows inside textarea\n   * @default 2\n   */\n  rows?: number;\n  /**\n   * Show/Hide formatting box (add GIFs, bold, italic etc.)\n   * @default true\n   */\n  showFormattingRow?: boolean;\n}\n\nconst Wrapper = styled.div<{ focused: boolean }>`\n  border: 1px solid ${(props) => props.theme.input.border};\n  border-radius: 4px 4px 0 0;\n  border-bottom-style: dashed;\n  background-color: ${(props) => props.theme.input.background};\n  word-break: break-word;\n  ${(props) => props.focused && `border-color: ${props.theme.input.active.border};`};\n`;\n\ninterface IState {\n  /** Determines if editor is focused */\n  isFocused: boolean;\n}\n\n@observer\nclass Editor extends React.Component<IProps, IState> {\n  private formattingStore: FormattingStore = new FormattingStore();\n  public static defaultProps = {\n    disabled: false,\n    imagesDisabled: false,\n    placeholder: 'Write Comment',\n    rows: 2,\n    showFormattingRow: true,\n  };\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      isFocused: false,\n    };\n  }\n\n  /** Editor Click handler */\n  private onEditorClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    this.formattingStore.updateFormattingState();\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  /** Editor focus handler */\n  private onEditorFocus = (): void => {\n    this.setState({ isFocused: true });\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  /** Editor blur handler */\n  private onEditorBlur = () => {\n    this.setState({ isFocused: false });\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  private onEditorKeyDown = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    this.formattingStore.updateFormattingState();\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n  };\n\n  /** Editor change handler */\n  private onEditorChange = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (this.props.onChange) {\n      this.props.onChange({\n        html: e.currentTarget.innerHTML,\n        images: this.props.images,\n        text: e.currentTarget.innerText,\n      });\n    }\n  };\n\n  /** Handler for image upload button */\n  private onUploadChange = (e: any) => {\n    const files = Array.from(e.target.files);\n    if (files[0] instanceof File) {\n      this.props.addImage(files[0] as File);\n    }\n  };\n\n  public render() {\n    return (\n      <Wrapper focused={this.state.isFocused}>\n        <EditorBox\n          id={this.props.id}\n          onChange={this.onEditorChange}\n          onFocus={this.onEditorFocus}\n          onBlur={this.onEditorBlur}\n          onClick={this.onEditorClick}\n          onKeyDown={this.onEditorKeyDown}\n          disabled={this.props.disabled}\n          placeholder={this.props.placeholder}\n          ref={this.formattingStore.ref}\n          value={this.props.value}\n          rows={this.props.rows}\n        />\n\n        <ImagesPreview items={this.props.images} onRemove={this.props.removeImage} />\n\n        {this.props.showFormattingRow && (\n          <Options options={this.formattingStore.options}>\n            {!this.props.imagesDisabled && !this.props.hideUploadImage && (\n              <UploadImageButton onFileInputChange={this.onUploadChange} disabled={this.props.imagesDisabled} />\n            )}\n            <GIFDropdown onSelect={this.props.addImage} disabled={this.props.imagesDisabled} />\n          </Options>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Editor;\n","import * as React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\n// keyframes returns a unique name based on a hash of the contents of the keyframes\nconst ballScale = keyframes`\n  0% {\n    transform: scale(0)\n  }\n  100% {\n    transform: scale(1);\n    opacity: 0.5\n  }\n`;\n\nconst toxicAnimation = keyframes`\n  0% {\n    border-radius: 50%;\n    transform: scale(0.3);\n  }\n  50% {\n    transform: scale(1.2) rotate(90deg);\n    border-radius: 0%;\n  }\n  100% {\n    transform: rotate(225deg);\n  }\n`;\n\nconst mediumAnimation = keyframes`\n  0% {\n    border-radius: 50%;\n    transform: scale(0.3);\n  }\n  50% {\n    transform: scale(1.2);\n    border-radius: 0%;\n  }\n`;\n\nconst lowAnimation = keyframes`\n  0% {\n    border-radius: 50%;\n    transform: scale(0.3);\n  }\n  50% {\n    transform: scale(1.2);\n    border-radius: 0%;\n  }\n`;\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst Progress = styled('div')<IProps>`\n  height: 15px;\n  width: 15px;\n  background-color: ${(props) => {\n    if (!props.loading) {\n      if (props.value >= 75) {\n        return '#b719fa';\n      } else if (props.value >= 50) {\n        return '#7a4ffe';\n      } else if (props.value >= 25) {\n        return '#5185fc';\n      }\n      return '#2db6f9';\n    }\n    return '#868e96';\n  }};\n  border-radius: ${(props) => (!props.loading && props.value >= 25 ? 0 : '100%')};\n  margin: 2px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 10px;\n  transform: ${(props) => {\n    if (!props.loading && props.value >= 75) {\n      return 'rotate(135deg)';\n    }\n    if (!props.loading && props.value >= 25) {\n      return 'rotate(90deg)';\n    }\n    return 'rotate(0)';\n  }};\n  animation: ${(props) => {\n    if (props.loading) {\n      return css`\n        ${ballScale} 1s 0s ease-in-out infinite;\n      `;\n    } else if (props.value >= 75) {\n      return css`\n        ${toxicAnimation} .5s ease-in;\n      `;\n    } else if (props.value >= 50) {\n      return css`\n        ${mediumAnimation} .5s ease-in;\n      `;\n    } else if (props.value >= 25) {\n      return css`\n        ${lowAnimation} .5s ease-in;\n      `;\n    } else {\n      return null;\n    }\n  }};\n`;\n\nconst Span = styled('span')`\n  vertical-align: middle;\n  display: inline;\n  animation: ${fadeIn} 0.25s ease-in;\n  font-size: 0.75rem;\n`;\n\ninterface IProps {\n  value: number;\n  loading: boolean;\n  toxicityText?: string;\n  visibilityLimit?: number;\n}\n\nconst ToxicityMeter: React.FunctionComponent<IProps> = ({\n  value,\n  loading,\n  visibilityLimit = 50,\n  toxicityText = '',\n  ...props\n}) => (\n  <div style={{ marginRight: '5px' }} {...props}>\n    <Progress loading={loading} value={value} />\n    {!loading && visibilityLimit < value && (\n      <Span>\n        {value}%<span> {toxicityText}</span>\n      </Span>\n    )}\n  </div>\n);\n\nexport default ToxicityMeter;\n","import { observer } from 'mobx-react';\nimport React from 'react';\n\nimport Tag from '@vuukle/tag';\nimport TextareaFooter from 'components/TextareaFooter';\nimport RichEditor, { IEditorChangeReturn } from 'modules/RichEditor';\nimport ToxicityMeter from './ToxicityMeter';\n\nimport translation from 'stores/translationStore';\n\n/** Component Props */\nimport EnglishEditBoxStore from 'modules/EditCommentBox/stores/EnglishEditBox';\nimport EnglishBoxStore from '../stores/EnglishBox';\ninterface IProps {\n  boxStore: EnglishBoxStore | EnglishEditBoxStore;\n  authorized: boolean;\n}\n\n@observer\nclass WriteCommentBox extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  /**\n   * Handler for RichEditor change\n   * @return {void}\n   */\n  public onEditorChange = ({ html }: IEditorChangeReturn): void => {\n    this.props.boxStore.value = html;\n  };\n\n  /** Add Image */\n  public addImage = (image: string | File) => {\n    if (image instanceof File) {\n      this.props.boxStore.images.uploadImage(image);\n    } else {\n      this.props.boxStore.images.add(image);\n    }\n  };\n\n  /** Returns main content of the form to render */\n  private renderContent(): React.ReactElement[] {\n    return [\n      <RichEditor\n        id={this.props.boxStore.id}\n        value={this.props.boxStore.value}\n        placeholder={translation.common.writeComment /* Write Comment */}\n        onFocus={this.props.boxStore.onFocus}\n        onBlur={this.props.boxStore.onBlur}\n        onChange={this.onEditorChange}\n        imagesDisabled={this.props.boxStore.images.inProgress || this.props.boxStore.images.uploadLimitExceeded}\n        hideUploadImage={!this.props.authorized}\n        addImage={this.addImage}\n        removeImage={this.props.boxStore.images.remove}\n        images={this.props.boxStore.images.items}\n        disabled={this.props.boxStore.inProgress}\n        rows={!this.props.boxStore.minimized ? 4 : 2}\n        showFormattingRow={!this.props.boxStore.minimized}\n        key={0}\n      />,\n      <TextareaFooter focused={this.props.boxStore.focused} key={1}>\n        <div>\n          {/* Show toxicity limit only if it's appropriate */}\n          {this.props.boxStore.toxicityModel.limit < 100 && (\n            <ToxicityMeter\n              value={this.props.boxStore.toxicityModel.value}\n              loading={this.props.boxStore.toxicityModel.loading}\n              toxicityText={translation.toxicity.long}\n              visibilityLimit={this.props.boxStore.toxicityModel.limit}\n            />\n          )}\n        </div>\n        <div>\n          {this.props.boxStore.allowedCharactersCount <= 200 && <Tag>{this.props.boxStore.allowedCharactersCount}</Tag>}\n        </div>\n      </TextareaFooter>,\n    ];\n  }\n\n  public render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\n\nexport default WriteCommentBox;\n","import * as React from 'react';\nimport Textarea from 'react-textarea-autosize';\nimport styled from 'styled-components';\n\ninterface IThemeProps {\n  theme: {\n    mutedColor: string;\n    input: {\n      background: string;\n      color: string;\n      border: string;\n      active: {\n        border: string;\n      };\n    };\n  };\n}\n\nconst StyledTextArea = styled(Textarea)<any & IThemeProps>`\n  display: block;\n  width: 100%;\n  resize: none;\n  padding: 15px 10px 10px;\n  border-radius: 3px 3px 0 0;\n  margin: 0;\n  border-image: initial;\n  background: ${(props) => props.theme.input.background};\n  color: ${(props) => props.theme.input.color};\n  border: 1px solid ${(props) => props.theme.input.border};\n  border-bottom: 1px dashed ${(props) => props.theme.input.border};\n  &::placeholder {\n    color: ${(props) => props.theme.mutedColor};\n  }\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.input.active.border};\n  }\n`;\n\nconst TextareaWrapper = (props: any) => <StyledTextArea name=\"comment\" {...props} />;\n\nexport default TextareaWrapper;\n","import { loadJS } from '@vuukle/utils';\nimport { action, computed, decorate, observable, when } from 'mobx';\nimport urlSearchParams from 'services/urlSearchParams';\n\nexport class Transliteration {\n  /** Transliteration enabled/disabled */\n  public enabled: boolean;\n  /** Language code to use transliteration for */\n  public languageCode: string;\n  /** Currently enabled language code. It can be 'en' or this.languageCode */\n  public currentLanguage: string;\n  /** Transliteration enabled by default yes/no. If no then english is default */\n  public enabledByDefault: boolean;\n  /** Instance of google transliteration plugin */\n  public transliterationControl: any;\n  /** Determines if transliteration plugin has been loaded */\n  public loaded: boolean = false;\n  /** List of available languages for transliteration */\n  public languages: { [key: string]: string } = {\n    am: 'Amharic',\n    ar: 'Arabic',\n    bn: 'Bengali',\n    el: 'Greek',\n    en: 'English',\n    fa: 'Persian',\n    gu: 'Gujarati',\n    hi: 'Hindi',\n    kn: 'Kannada',\n    ml: 'Malayalam',\n    mr: 'Marathi',\n    ne: 'Nepali',\n    or: 'Oriya',\n    pa: 'Punjabi',\n    ru: 'Russian',\n    sa: 'Sanskrit',\n    si: 'Sinhalese',\n    sr: 'Serbian',\n    ta: 'Tamil',\n    te: 'Telugu',\n    ti: 'Tigrinya',\n    ur: 'Urdu',\n    zn: 'Chinese',\n  };\n  /** Stores textarea elements where use can write comment. We can have several write comment boxes opened at the same time */\n  private readonly transliterationBoxes: Set<any>;\n\n  constructor() {\n    this.languageCode = urlSearchParams.get('lang') || 'en';\n    this.enabledByDefault = urlSearchParams.get('l_d') === 'true';\n    this.enabled = this.languageCode !== 'en';\n    this.currentLanguage = this.enabledByDefault ? this.languageCode : 'en';\n    this.transliterationBoxes = new Set();\n    this.loaded = false;\n\n    if (this.languageCode !== 'en') {\n      this.loadTransliteration();\n    }\n  }\n\n  /**\n   * Get currently enabled transliteration language code\n   * @return {string}\n   */\n  get language(): string {\n    return this.languages[this.currentLanguage] || this.currentLanguage;\n  }\n\n  /** Init or Remove initialization from textarea ID */\n  public toggleBox = (id: string): void => {\n    if (this.transliterationBoxes.has(id)) {\n      this.transliterationBoxes.delete(id);\n    } else {\n      this.transliterationBoxes.add(id);\n    }\n\n    when(\n      () => this.loaded,\n      () => {\n        this.transliterationControl.makeTransliteratable(Array.from(this.transliterationBoxes));\n        if (this.languageCode === 'en') {\n          this.transliterationControl.disableTransliteration();\n        } else {\n          this.transliterationControl.enableTransliteration();\n        }\n      }\n    );\n  };\n\n  public toggleLanguage = () => {\n    this.currentLanguage = this.currentLanguage === 'en' ? this.languageCode : 'en';\n\n    when(\n      () => this.loaded,\n      () => {\n        if (this.currentLanguage !== 'en') {\n          return this.transliterationControl.enableTransliteration();\n        }\n        return this.transliterationControl.disableTransliteration();\n      }\n    );\n  };\n\n  private loadTransliteration = () => {\n    loadJS('https://www.google.com/jsapi')\n      .then(() => {\n        loadJS('https://cdn.jsdelivr.net/gh/vuukle/transliterate@1.0/js/transliteration.I.js').then(() => {\n          // 📦 Load CSS for transliteration\n          const fileRef = document.createElement('link');\n          fileRef.setAttribute('rel', 'stylesheet');\n          fileRef.setAttribute('type', 'text/css');\n          fileRef.setAttribute('href', 'https://cdn.jsdelivr.net/gh/vuukle/transliterate@1.0/css/transliteration.css');\n          document.getElementsByTagName('head')[0].appendChild(fileRef);\n\n          // Create an instance on TransliterationControl with the required\n          // options.\n          this.transliterationControl = new (window as any).google.elements.transliteration.TransliterationControl({\n            destinationLanguage: [this.languageCode],\n            sourceLanguage: 'en',\n            transliterationEnabled: this.enabledByDefault,\n          });\n          this.loaded = true;\n        });\n      })\n      .catch((err) => {\n        if (process.env.NODE_ENV === 'development') {\n          // tslint:disable-next-line\n          console.log('Transliteration loading err:', err);\n        }\n      });\n  };\n}\n\ndecorate(Transliteration, {\n  currentLanguage: observable,\n  languageCode: observable,\n  loaded: observable,\n\n  language: computed,\n\n  toggleBox: action,\n  toggleLanguage: action,\n});\n\nexport default new Transliteration();\n","import { makeRequest } from '@vuukle/utils';\nimport { action, computed, decorate, observable } from 'mobx';\nimport { userStore } from 'modules/Auth/stores';\nimport { IAlert } from 'stores/models/Alert';\n\nenum Errors {\n  error_saving_image = 'error_saving_image',\n  limit_exceeded = 'limit_exceeded',\n  wrong_format = 'wrong_format',\n  unknown = 'unknown',\n}\n\n/** Possible image uploading errors */\nconst alerts: { [key: string]: IAlert } = {\n  [Errors.error_saving_image]: {\n    message: `Sorry, there was an error saving an image, please try try again`,\n    type: 'error',\n  },\n  [Errors.limit_exceeded]: {\n    message: `The file size is too big, please upload an image below 5MB`,\n    type: 'error',\n  },\n  [Errors.unknown]: { message: 'Error happened, please try again', type: 'error' },\n  [Errors.wrong_format]: {\n    message: 'We can only accept the following image formats: .png .jpg .jpeg .bmp',\n    type: 'error',\n  },\n};\n\n/**\n * Responsible for image adding on comment post\n */\nclass ImageUpload {\n  /** images urls */\n  public items: string[] = [];\n  /** uploads limit */\n  public limit: number;\n  /** Uploading is in progress */\n  public inProgress: boolean = false;\n  public setAlert: (alert: IAlert) => void;\n  private allowedFormats: string[] = ['png', 'jpg', 'jpeg', 'bmp'];\n  /** API method to upload images to the Vuukle Server */\n  private uploadAPI = (data: FormData) =>\n    makeRequest('POST', `${process.env.API_URL}/api/v1/Comments/uploadCommentImage`, data, undefined, userStore.token);\n\n  constructor(limit: number = 1, setAlert: (alert: IAlert) => void) {\n    this.limit = limit;\n    this.setAlert = setAlert;\n  }\n\n  /**\n   * Remove image by link\n   * @param {string} url - image url to delete\n   * @return {void}\n   */\n  public remove = (url: string): void => {\n    this.items = this.items.filter((imageUrl) => imageUrl !== url);\n  };\n\n  /**\n   * Add image to the list of uploads\n   * @param {string} url - image url to add\n   */\n  public add = (url: string): void => {\n    if (this.items.indexOf(url) !== -1) {\n      return;\n    }\n\n    this.items.push(url);\n  };\n\n  /**\n   * Detects if upload items limit is exceeded\n   * @return {boolean} true limit is exceeded and false it no\n   */\n  get uploadLimitExceeded(): boolean {\n    return this.items.length >= this.limit;\n  }\n\n  /**\n   * @public\n   * Upload Image using Vuukle API\n   * @param {File} imageFile image to upload\n   * @returns {Promise<void>}\n   */\n  public uploadImage = async (imageFile: File): Promise<void> => {\n    /** Validate file extension */\n    const fileExtension =\n      imageFile.name\n        .toLocaleLowerCase()\n        .split('.')\n        .pop() || '';\n\n    if (this.allowedFormats.indexOf(fileExtension) === -1) {\n      return this.setAlert(alerts[Errors.wrong_format]);\n    }\n\n    /** Check for file limit */\n    if (imageFile.size > 5e6) {\n      return this.setAlert(alerts[Errors.limit_exceeded]);\n    }\n\n    /** Send File to the server */\n    const data = new FormData();\n    data.append('file', imageFile);\n    this.inProgress = true;\n\n    try {\n      const uploadResponse = await this.uploadAPI(data);\n      if (uploadResponse.success && uploadResponse.data.imgLink) {\n        this.add(uploadResponse.data.imgLink);\n      } else {\n        throw new Error(uploadResponse.errors[0]);\n      }\n    } catch (err) {\n      this.setAlert(alerts[err.message || 'unknown'] || alerts[Errors.unknown]);\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /** Get HTML code for the uploaded images */\n  get html(): string {\n    return this.items.map((imageUrl: string) => `<p><img src=\"${imageUrl}\"></p>`).join('');\n  }\n}\n\ndecorate(ImageUpload, {\n  add: action,\n  inProgress: observable,\n  items: observable,\n  remove: action,\n  uploadLimitExceeded: computed,\n});\n\nexport default ImageUpload;\n","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from '@vuukle/button';\nimport Tag from '@vuukle/tag';\nimport translation from 'stores/translationStore';\n\nimport TextareaFooter from 'components/TextareaFooter';\nimport Textarea from './Textarea';\n\n/** Props */\nimport ForeignEditStore from 'modules/EditCommentBox/stores/ForeignEditBox';\nimport ForeignStore from '../stores/ForeignBox';\nimport TransliterationStore, { Transliteration } from '../stores/models/Transliteration';\n\ninterface IProps {\n  foreignStore: ForeignStore | ForeignEditStore;\n}\n\n@observer\nclass ForeignBox extends React.Component<IProps, {}> {\n  public transliterationStore: Transliteration = TransliterationStore;\n\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  public componentDidMount(): void {\n    /** 🇮🇳 🇺🇦 🇵🇱 Enabled transliteration for current component textarea */\n    this.transliterationStore.toggleBox(this.props.foreignStore.id);\n\n    /** Set value of the comment box if needed */\n    const textarea = document.querySelector(`#${this.props.foreignStore.id}`);\n    if (textarea instanceof HTMLTextAreaElement) {\n      textarea.value = this.props.foreignStore.value;\n    }\n  }\n\n  public componentWillUnmount(): void {\n    /** 🔴 Remove textarea on component unmount */\n    this.transliterationStore.toggleBox(this.props.foreignStore.id);\n  }\n\n  /** Handles for textarea change */\n  private handleTextAreaChange = (e: React.FormEvent<HTMLTextAreaElement>): void => {\n    this.props.foreignStore.value = e.currentTarget.value;\n  };\n\n  private renderContent(): React.ReactElement[] {\n    return [\n      <Textarea\n        id={this.props.foreignStore.id}\n        disabled={this.props.foreignStore.inProgress}\n        rows={this.props.foreignStore.minimized ? 2 : 4}\n        minRows={this.props.foreignStore.minimized ? 2 : 4}\n        maxRows={10}\n        onFocus={this.props.foreignStore.onFocus}\n        onBlur={this.props.foreignStore.onBlur}\n        onChange={this.handleTextAreaChange}\n        placeholder={translation.common.writeComment /* Write Comment */}\n        required={true}\n        key={0}\n      />,\n      <TextareaFooter focused={false} key={1}>\n        <div>\n          <Button\n            onClick={this.transliterationStore.toggleLanguage}\n            style={{ padding: '0 6px', lineHeight: 1.2, marginRight: '5px', textTransform: 'capitalize' }}\n            type=\"subtle\"\n            sm={true}\n          >\n            {this.transliterationStore.language}\n          </Button>\n        </div>\n        <div>\n          {/* !shouldShowLimitTag && <TextFormattingTips /> */}\n          {this.props.foreignStore.allowedCharactersCount <= 200 && (\n            <Tag>{this.props.foreignStore.allowedCharactersCount}</Tag>\n          )}\n        </div>\n      </TextareaFooter>,\n    ];\n  }\n\n  public render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\n\nexport default ForeignBox;\n","import { getTextFromHTML } from '@vuukle/utils';\nimport min from 'lodash/min';\nimport uniqueId from 'lodash/uniqueId';\nimport { action, computed, observable, when } from 'mobx';\n\nimport urlSearchParams from 'services/urlSearchParams';\nimport Alert, { IAlert } from 'stores/models/Alert';\nimport translation from 'stores/translationStore';\nimport ImageUpload from './ImageUpload';\n\nexport enum CommentErrors {\n  // Front-end\n  blank_comment = 'blank_comment',\n  similar_comment = 'similar_comment',\n  long_comment = 'long_comment',\n  // Server\n  repeat_comment = 'repeat_comment',\n  spammer = 'spammer',\n  success = 'success',\n  moderation = 'moderation',\n  ip_blocked = 'ip_blocked',\n  email_blocked = 'email_blocked',\n}\n\nexport const alertMessages: { [key: string]: IAlert } = {\n  [CommentErrors.blank_comment]: { type: 'error', message: translation.common.blankComment },\n  [CommentErrors.similar_comment]: { type: 'error', message: translation.messages.almostSame },\n  [CommentErrors.long_comment]: { type: 'warning', message: `${translation.messages.charlimits}` },\n  // Server\n  [CommentErrors.repeat_comment]: { type: 'warning', message: translation.messages.alreadySubmitted },\n  [CommentErrors.spammer]: { type: 'warning', message: translation.messages.spammerComment },\n  [CommentErrors.success]: { type: 'success', message: translation.messages.commentAdded },\n  [CommentErrors.moderation]: { type: 'warning', message: translation.messages.moderationMessage },\n  [CommentErrors.ip_blocked]: { type: 'warning', message: translation.messages.blockedIp },\n  [CommentErrors.email_blocked]: { type: 'warning', message: translation.messages.blockedEmail },\n  unknown: { type: 'error', message: translation.messages.errorContactVuukle },\n};\n\nabstract class CommentBox {\n  /** Uniquer id for each created comment box (used as id of textarea) */\n  public readonly id: string = uniqueId('write-comment-');\n  /** Comment value from textarea or content editable */\n  @observable\n  protected _value: string = '';\n  /** Comment box is focused */\n  @observable\n  public focused: boolean = false;\n  /**\n   * By default textarea has minimized view to don't show all of the elements.\n   * But once user focuses on textarea at least once we expand it\n   */\n  @observable\n  public minimized: boolean = true;\n  /** Comment posting/editing progress */\n  @observable\n  public inProgress: boolean = false;\n  /** Alert to notify user about any errors or to show success posting message */\n  @observable\n  public alert: Alert = new Alert();\n  /** Uploaded Images URLs */\n  @observable\n  public images: ImageUpload = new ImageUpload(1, (alert) => (this.alert.value = alert));\n  // === 🔧 Configurable from outside of the widget\n  /** If true, then box is hidden by default and we show button that sets this value to true and shows comment box */\n  @observable\n  public hidden: boolean;\n  /** Chars limit to post comment. Publisher can customize it but anyway max limit is 3000 */\n  public static readonly lengthLimit: number =\n    min([parseInt(urlSearchParams.get('maxChars') || '3000', 10), 3000]) || 3000;\n\n  protected constructor() {\n    this.hidden = urlSearchParams.get('hideCommentBox') === 'true';\n    /** Expand textarea rows once user focused textarea box */\n    when(() => this.focused, () => (this.minimized = false));\n  }\n\n  public abstract set value(commentText: string);\n  public abstract get value(): string;\n\n  @computed\n  protected get text(): string {\n    return getTextFromHTML(this._value);\n  }\n\n  /**\n   * Creates HTML that is ready to be posted to server\n   */\n  @computed\n  protected get computedHTML(): string {\n    if (!this.value && !this.images.items.length) {\n      return '';\n    }\n\n    let commentHTML = this.value\n      .trim()\n      // Remove empty tags\n      .replace(/(?!<br>|<br\\/>|<br \\/>)(<[^\\/>][^>]*><\\/[^>]+>)/gim, '')\n      // Convert more than 3 new lines within <p>\n      .replace(/(<p>(<br>|<br\\/>|<br \\/>)<\\/p>){3,}/gim, '<br><br>')\n      // Convert more than 3 new lines into 2\n      .replace(/(<br>|<br\\/>|<br \\/>){3,}/gim, '<br><br>')\n      // Remove more than 3 spaces\n      .replace(/ {3,}/g, '   ')\n      .trim();\n\n    if (this.images.items.length > 0) {\n      this.images.items.forEach((imageUrl) => (commentHTML += ` <p><img src=\"${imageUrl}\"></p>`));\n    }\n\n    return commentHTML;\n  }\n\n  /** ➕/➖ Calculates how many characters user is allowed to type */\n  @computed\n  public get allowedCharactersCount(): number {\n    return CommentBox.lengthLimit - this.text.length;\n  }\n\n  /** Form focus handler */\n  @action\n  public onFocus = (): void => {\n    this.minimized = false;\n    this.focused = true;\n  };\n\n  /** Form blur handler */\n  @action\n  public onBlur = (): void => {\n    this.focused = false;\n  };\n\n  /**\n   * Determines if commenting is disabled\n   * @return {boolean}\n   */\n  public abstract get disabled(): boolean;\n\n  /**\n   * Form submit handler\n   * @return {void}\n   */\n  public abstract onSubmit(e: React.FormEvent<HTMLFormElement>): void;\n\n  /**\n   * Pre submit util function to verify if comment that is ready to be posted/edited is a valid comment\n   * @return {Promise} - error or resolves true on success\n   */\n  @action\n  protected preSubmit = (): Promise<CommentErrors | boolean> =>\n    new Promise<CommentErrors | boolean>((resolve, reject) => {\n      /** Check if comment text is empty (without tags) */\n      if (!this.text && !this.computedHTML.match(/<img [^>]*src=\"[^\"]*\"[^>]*>/gm)) {\n        this.alert.value = alertMessages[CommentErrors.blank_comment];\n        reject(CommentErrors.blank_comment);\n      } else if (this.text.length > CommentBox.lengthLimit) {\n        this.alert.value = {\n          ...alertMessages[CommentErrors.long_comment],\n          message: alertMessages[CommentErrors.long_comment].message + ` ${CommentBox.lengthLimit}`,\n        };\n        reject(CommentErrors.long_comment);\n      }\n      resolve(true);\n    });\n}\n\nexport default CommentBox;\n","import { action, computed, decorate, observable } from 'mobx';\n\nimport { perspectiveAPIs } from 'services/apis';\nimport searchParams from 'services/urlSearchParams';\n\nimport { makeDevLog } from '@vuukle/utils';\n\nexport class SpamValidation {\n  /**\n   * PerspectiveAPI Toxicity Model\n   * {@link https://github.com/conversationai/perspectiveapi/blob/master/api_reference.md}\n   * null - toxicity is in progress\n   * number - when we have toxicity number or error loading and we set 0\n   */\n  public value: number = 0;\n  /**\n   * Configured limit of the model. User cannot post comments if limit exceeded\n   */\n  public readonly limit: number = 90;\n  /**\n   * Unlike toxicity restrict, users can post spammy comments but before this action should be confirmed.\n   * Users are asked with alert if they are ready to post spam comment.\n   */\n  public confirmed: boolean = false;\n\n  constructor() {\n    // Get toxicity and spam limit. Not valid values convert to default value and 0 to 100\n    const limitFromUrl = parseInt(searchParams.get('spamLimit') || '90', 10) || 100;\n\n    this.limit = limitFromUrl >= 0 ? limitFromUrl : 90;\n  }\n\n  /** Determines if spam is enabled or not */\n  get enabled() {\n    return this.limit < 100 && this.limit > 0;\n  }\n\n  public getValue = async (commentText: string): Promise<number> => {\n    if (!this.enabled) {\n      this.value = 0;\n      return this.value;\n    }\n\n    this.confirmed = false; // if we are getting new value then confirmed should be reseted\n\n    try {\n      const response: any = await perspectiveAPIs.spamModel.send(commentText);\n      this.value = response.value;\n\n      return this.value;\n    } catch (err) {\n      makeDevLog(`PerspectiveAPIs.toxicModel error: ${err}`, 'error');\n      this.value = 0;\n\n      return this.value;\n    }\n  };\n}\n\ndecorate(SpamValidation, {\n  value: observable,\n\n  enabled: computed,\n  getValue: action,\n});\n\nexport default SpamValidation;\n","import { action, computed, decorate, observable } from 'mobx';\n\nimport { perspectiveAPIs } from 'services/apis';\nimport searchParams from 'services/urlSearchParams';\n\nimport { makeDevLog } from '@vuukle/utils';\n\nexport class ToxicityValidation {\n  /**\n   * PerspectiveAPI Toxicity Model\n   * {@link https://github.com/conversationai/perspectiveapi/blob/master/api_reference.md}\n   * null - toxicity is in progress\n   * number - when we have toxicity number or error loading and we set 0\n   */\n  public value: number = 0;\n  public loading: boolean = false;\n  private checkingTimout: any;\n  /**\n   * Configured limit of the model. User cannot post comments if limit exceeded\n   */\n  public readonly limit: number = 80;\n\n  constructor() {\n    // Get toxicity and spam limit. Not valid values convert to default value and 0 to 100\n    const limitFromUrl = parseInt(searchParams.get('toxicityLimit') || '80', 10) || 100;\n\n    this.limit = limitFromUrl >= 0 ? limitFromUrl : 80;\n  }\n\n  /** Determines if toxicity is enabled or not */\n  public get enabled(): boolean {\n    return this.limit > 0 && this.limit < 100;\n  }\n\n  // TODO: improve function\n  public getValue = async (commentText: string, timeout: number = 0): Promise<boolean | number> => {\n    this.loading = true;\n    return new Promise((resolve) => {\n      clearTimeout(this.checkingTimout);\n\n      if (!commentText) {\n        this.loading = false;\n        this.value = 0;\n        return resolve(this.value);\n      }\n\n      if (timeout <= 0) {\n        resolve(this.getToxicity(commentText));\n      } else {\n        this.checkingTimout = setTimeout(async () => resolve(this.getToxicity(commentText)), timeout);\n      }\n    });\n  };\n\n  // TODO: change naming of that chain\n  @action\n  private getToxicity = async (commentText: string): Promise<number> => {\n    this.loading = true;\n    try {\n      const response: any = await perspectiveAPIs.toxicModel.send(commentText);\n      this.value = response.value || 0;\n\n      return this.value;\n    } catch (err) {\n      makeDevLog(`PerspectiveAPIs.toxicModel error: ${err}`, 'error');\n      this.value = 0;\n\n      return this.value;\n    } finally {\n      this.loading = false;\n    }\n  };\n}\n\ndecorate(ToxicityValidation, {\n  loading: observable,\n  value: observable,\n\n  enabled: computed,\n  getValue: action,\n});\n\nexport default ToxicityValidation;\n","import CommentBox, { alertMessages, CommentErrors } from 'modules/WriteComment/stores/models/CommentBox';\nimport SpamValidationModel from 'modules/WriteComment/stores/models/SpamValidationModel';\nimport ToxicityValidationModel from 'modules/WriteComment/stores/models/ToxicityValidationModel';\nimport translation from 'stores/translationStore';\n\nimport { makeDevLog } from '@vuukle/utils';\nimport { commentsApis } from 'services/apis';\n\nclass EnglishEditBox extends CommentBox {\n  public toxicityModel: ToxicityValidationModel = new ToxicityValidationModel();\n  public spamModel: SpamValidationModel = new SpamValidationModel();\n\n  constructor(\n    private commentID: number,\n    initialText: string,\n    private successCallback: (comment: Comments.ServerComment) => void\n  ) {\n    super();\n    /** 🔧 Expand all textarea function on the start of usage */\n    this.minimized = false;\n    /**\n     * ⚠ Since server returns full HTML including images and widget uses it separately we need to parse that HTML.\n     * So we need to get and remove images from the server HTML response, add to this.images and set parsed HTML to this.commentHTML\n     */\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = initialText;\n    const imgTags = wrapper.querySelectorAll('img');\n    imgTags.forEach((img: HTMLImageElement) => {\n      this.images.add(img.getAttribute('src') as string);\n      if (wrapper.contains(img)) {\n        img.remove();\n      }\n    });\n    wrapper.querySelectorAll('p:empty').forEach((p) => p.remove());\n\n    this.value = wrapper.innerHTML;\n  }\n\n  /** Edit comment box cannot be disabled */\n  public get disabled() {\n    return false;\n  }\n\n  public set value(commentText: string) {\n    this._value = commentText;\n\n    // Remove alerts on comment change\n    if (commentText.length > 0) {\n      this.alert.value = null;\n    }\n    /** Reset spam model on every comment change */\n    this.spamModel.value = 0;\n    /** Calculate toxicity on comment change */\n    if (this.toxicityModel.enabled) {\n      this.toxicityModel.getValue(this.text, 1000);\n    }\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      makeDevLog(err, 'error');\n      this.inProgress = false;\n      return;\n    }\n\n    /** Check toxicity if needed */\n    if (this.toxicityModel.enabled) {\n      if (this.toxicityModel.loading) {\n        await this.toxicityModel.getValue(this.text);\n      }\n\n      if (this.toxicityModel.value > this.toxicityModel.limit) {\n        this.alert.value = {\n          message: translation.messages.toxicityLimit.replace('%d', this.toxicityModel.limit.toString()),\n          type: 'warning',\n        };\n        this.inProgress = false;\n        return;\n      }\n    }\n\n    /** Check spam if enabled */\n    if (this.spamModel.enabled) {\n      if (!this.spamModel.value) {\n        this.spamModel.value = await this.spamModel.getValue(this.text);\n      }\n\n      if (this.spamModel.value > this.spamModel.limit && !this.spamModel.confirmed) {\n        this.alert.value = { type: 'warning', message: translation.messages.spamComment };\n        this.inProgress = false;\n        this.spamModel.confirmed = true;\n        return;\n      }\n    }\n\n    /** Call API to edit comment */\n    try {\n      const response = await commentsApis.edit(this.commentID, this.computedHTML);\n      if (response.success) {\n        this.alert.value = alertMessages[CommentErrors.success];\n        this.successCallback(response.data);\n      }\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default EnglishEditBox;\n","import CommentBox, { alertMessages, CommentErrors } from 'modules/WriteComment/stores/models/CommentBox';\n\nimport { getTextFromHTML, makeDevLog } from '@vuukle/utils';\nimport { commentsApis } from 'services/apis';\n\nclass ForeignEditBox extends CommentBox {\n  constructor(\n    private commentID: number,\n    initialText: string,\n    private successCallback: (comment: Comments.ServerComment) => void\n  ) {\n    super();\n\n    /** 🔧 Expand all textarea function on the start of usage */\n    this.minimized = false;\n\n    /**\n     * ⚠ Since server returns full HTML including images and widget uses it separately we need to parse that HTML.\n     * For Foreign comment box we don't have functionality to post images or any modifications, so we just get text from the text box, but\n     * with saving new lines and tabs\n     */\n    const commentText = initialText.replace(/<br( ?\\/?)>/, '\\n');\n    this.value = getTextFromHTML(commentText);\n  }\n\n  /** Edit comment box cannot be disabled */\n  public get disabled() {\n    return false;\n  }\n\n  public set value(commentText: string) {\n    this._value = commentText;\n\n    // Remove alerts on comment change\n    if (commentText.length > 0) {\n      this.alert.value = null;\n    }\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      makeDevLog(err, 'error');\n      this.inProgress = false;\n      return;\n    }\n\n    /** Call API to edit comment */\n    try {\n      const response = await commentsApis.edit(this.commentID, this.computedHTML);\n      if (response.success) {\n        this.alert.value = alertMessages[CommentErrors.success];\n        this.successCallback(response.data);\n      }\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default ForeignEditBox;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport EditFormWrapper from './components/EditFormWrapper';\n\nimport EnglishBox from 'modules/WriteComment/components/EnglishBox';\nimport ForeignBox from 'modules/WriteComment/components/ForeignBox';\n\nimport EnglishBoxStore from './stores/EnglishEditBox';\nimport ForeignBoxStore from './stores/ForeignEditBox';\n\n/** Component Props */\nimport Comment from 'modules/CommentList/store/CommentItem';\ninterface IProps {\n  /** Used for self closing. For example when user wants to cancel editing */\n  onClose: () => void;\n  comment: Comment;\n}\n\n/** Injected MobX Stores Props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\nimport { WidgetStore } from 'stores/widgetStore';\ninterface IInjectedProps extends IProps {\n  userStore: UserStore;\n  authStore: AuthStore;\n  widgetStore: WidgetStore;\n}\n\n@inject('userStore', 'authStore', 'widgetStore')\n@observer\nclass EditCommentBox extends React.Component<IProps> {\n  public store: EnglishBoxStore | ForeignBoxStore;\n\n  constructor(props: IProps) {\n    super(props);\n\n    /** Create appropriate store based on language */\n    if (this.injected.widgetStore.language === 'en') {\n      this.store = new EnglishBoxStore(\n        props.comment.data.id,\n        props.comment.data.commentText,\n        props.comment.editComment\n      );\n    } else {\n      this.store = new ForeignBoxStore(\n        props.comment.data.id,\n        props.comment.data.commentText,\n        props.comment.editComment\n      );\n    }\n  }\n  /** get Injected stores */\n  get injected() {\n    return this.props as IInjectedProps;\n  }\n\n  /** 🎨 Returns editor component based on selected language */\n  private renderEditor(): React.ReactElement {\n    /** Decide which box we need to show based on publisher configuration */\n    if (this.store instanceof EnglishBoxStore) {\n      return <EnglishBox boxStore={this.store} authorized={this.injected.userStore.isAuthorized} />;\n    }\n\n    return <ForeignBox foreignStore={this.store} />;\n  }\n\n  public render() {\n    return (\n      <EditFormWrapper\n        comment={this.props.comment}\n        onSubmit={this.store.onSubmit}\n        alert={this.store.alert.value}\n        closeAlert={this.store.alert.close}\n        inProgress={this.store.inProgress}\n        closeEditor={this.props.onClose}\n        authenticatedWithPassword={\n          (this.injected.userStore.details && this.injected.userStore.details.isPasswordEntered) || false\n        }\n      >\n        {this.renderEditor()}\n      </EditFormWrapper>\n    );\n  }\n}\n\nexport default EditCommentBox;\n","import { makeDevLog } from '@vuukle/utils';\nimport { action, computed, observable } from 'mobx';\n\nimport CommentBox, { alertMessages, CommentErrors } from './models/CommentBox';\nimport SpamValidationStore from './models/SpamValidationModel';\nimport ToxicityValidationStore from './models/ToxicityValidationModel';\n\nimport commentsStore from 'modules/CommentList/store';\nimport { commentsApis } from 'services/apis';\nimport { logCommentToPublisher, logCommentToWordPress } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\nimport translation from 'stores/translationStore';\nimport widgetStore from 'stores/widgetStore';\n\nclass WriteBox extends CommentBox {\n  @observable\n  public toxicityModel: ToxicityValidationStore = new ToxicityValidationStore();\n  public spamModel: SpamValidationStore = new SpamValidationStore();\n\n  constructor(private parentID: number, private successCallback: (comment: Comments.ServerComment) => void) {\n    super();\n  }\n\n  /**\n   * Determines if commenting is disabled\n   * @return {boolean}\n   */\n  @computed\n  public get disabled(): boolean {\n    return urlSearchParams.get('d') === 'true' || widgetStore.commentingDisabled;\n  }\n\n  public set value(commentText: string) {\n    this._value = commentText;\n\n    // Remove alerts on comment change\n    if (commentText.length > 0) {\n      this.alert.value = null;\n    }\n    /** Reset spam model on every comment change */\n    this.spamModel.value = 0;\n    /** Calculate toxicity on comment change */\n    if (this.toxicityModel.enabled) {\n      this.toxicityModel.getValue(this.text, 1000);\n    }\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  @action\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      makeDevLog(err, 'error');\n      this.inProgress = false;\n      return;\n    }\n\n    /** Check toxicity if needed */\n    if (this.toxicityModel.enabled) {\n      if (this.toxicityModel.loading) {\n        await this.toxicityModel.getValue(this.text);\n      }\n\n      if (this.toxicityModel.value > this.toxicityModel.limit) {\n        this.alert.value = {\n          message: translation.messages.toxicityLimit.replace('%d', this.toxicityModel.limit.toString()),\n          type: 'warning',\n        };\n        this.inProgress = false;\n        return;\n      }\n    }\n\n    /** Check spam if enabled */\n    if (this.spamModel.enabled) {\n      if (!this.spamModel.value) {\n        this.spamModel.value = await this.spamModel.getValue(this.text);\n      }\n\n      if (this.spamModel.value > this.spamModel.limit && !this.spamModel.confirmed) {\n        this.alert.value = { type: 'warning', message: translation.messages.spamComment };\n        this.inProgress = false;\n        this.spamModel.confirmed = true;\n        return;\n      }\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    /** 🏁 And only now we are ready to send comment to the server */\n    try {\n      const response = await commentsApis.post(\n        this.computedHTML,\n        this.toxicityModel.value || 0,\n        this.spamModel.value || 0,\n        this.parentID,\n        0,\n        'en'\n      );\n\n      if (response.data && response.data.state === 0) {\n        this.successCallback(response.data);\n        this.alert.value = alertMessages[CommentErrors.success];\n        // Updated total comments count\n        commentsStore.totalComments++;\n        // Send Event to publisher\n        logCommentToPublisher(response.data);\n        // Send event to sync with WP if comment approved\n        if (commentsStore.syncWithWP) {\n          // Sync data with WordPress\n          logCommentToWordPress(response.data);\n        }\n      } else {\n        this.alert.value = alertMessages[CommentErrors.moderation];\n      }\n\n      this.value = ''; // Clear comment box\n      this.images.items = [];\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default WriteBox;\n","import commentsStore from 'modules/CommentList/store';\nimport widgetStore from 'stores/widgetStore';\nimport CommentBox, { alertMessages, CommentErrors } from './models/CommentBox';\nimport transliterationStore from './models/Transliteration';\n\nimport { commentsApis } from 'services/apis';\nimport { logCommentToPublisher, logCommentToWordPress } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\n\nclass ForeignBox extends CommentBox {\n  public toggleBox = transliterationStore.toggleBox;\n  public toggleLanguage = transliterationStore.toggleLanguage;\n\n  constructor(private parentID: number, private successCallback: (comment: Comments.ServerComment) => void) {\n    super();\n  }\n\n  /**\n   * Determines if commenting is disabled\n   * @return {boolean}\n   */\n  public get disabled(): boolean {\n    return urlSearchParams.get('d') === 'true' || widgetStore.commentingDisabled;\n  }\n\n  public set value(commentText: string) {\n    this.alert.value = null;\n    this._value = commentText;\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  get language() {\n    return transliterationStore.language;\n  }\n\n  /** Since we can't control textarea value with google transliteration library, we are forced to update value using HTML when it's needed */\n  private updateTextareaValue() {\n    const textarea = document.querySelector(`#${this.id}`);\n    if (textarea instanceof HTMLTextAreaElement) {\n      textarea.value = this.value;\n    }\n  }\n\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      console.warn('error', err); // tslint:disable-line\n      this.inProgress = false;\n      return;\n    }\n\n    /** 🏁 And only now we are ready to send comment to the server */\n    try {\n      const response = await commentsApis.post(\n        this.computedHTML,\n        0,\n        0,\n        this.parentID,\n        0,\n        (document as any).documentElement.lang || 'en'\n      );\n\n      if (response.data && response.data.state === 0) {\n        this.successCallback(response.data);\n        this.alert.value = alertMessages[CommentErrors.success];\n        // Updated total comments count\n        commentsStore.totalComments++;\n        // Send Event to publisher\n        logCommentToPublisher(response.data);\n        // Send event to sync with WP if comment approved\n        if (commentsStore.syncWithWP) {\n          // Sync data with WordPress\n          logCommentToWordPress(response.data);\n        }\n      } else {\n        this.alert.value = alertMessages[CommentErrors.moderation];\n      }\n\n      this.value = ''; // Clear comment box\n      this.images.items = [];\n      this.updateTextareaValue();\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default ForeignBox;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Avatar from '@vuukle/avatar';\nimport Dropdown from '@vuukle/dropdown';\nimport Icon from '@vuukle/icon';\nimport { Menu } from '@vuukle/menu';\nimport Tag from '@vuukle/tag';\nimport { slugify } from '@vuukle/utils';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  profile: User;\n  signOut?: () => void;\n  showComments: () => void;\n}\n\nconst StyledDropDown = styled(props => <Dropdown {...props} />)`\n  .v-menu {\n    ${props => (props.theme.isArabic ? 'right: 0; left: auto;' : 'left: 0; right: auto;')};\n  }\n`;\n\n/**\n * @name ProfileRow\n * This component used to show profile dropdown below write comment box.\n * @render React\n */\nconst ProfileRow: React.FunctionComponent<IProps> = ({ profile, showComments, signOut }) => (\n  <div style={{ marginBottom: '10px' }}>\n    <StyledDropDown\n      menu={\n        <Menu>\n          <Menu.Item href={`https://vuukle.com/user/by/${slugify(profile.name)}/${profile.id}`} target=\"_blank\">\n            {translation.profile.myProfile}\n          </Menu.Item>\n          <Menu.Item onClick={showComments}>{translation.profile.myComments}</Menu.Item>\n          {signOut && <Menu.Item onClick={signOut}>{translation.profile.signOut}</Menu.Item>}\n        </Menu>\n      }\n    >\n      <a href=\"#no\" style={{ outline: 'none', boxShadow: 'none' }}>\n        <Avatar name={profile.name} src={profile.avatar} hash={profile.id} /> <span>{profile.name}</span>\n        {profile.isModerator && (\n          <Tag type=\"warning\" style={{ margin: '0 3px' }}>\n            {translation.common.moderator}\n          </Tag>\n        )}\n        <Icon type=\"caret\" />\n      </a>\n    </StyledDropDown>\n  </div>\n);\n\nexport default ProfileRow;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport SocialButton from '@vuukle/social-button';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  /** Show/Hide Facebook auth */\n  facebook: boolean;\n  /** Show/Hide Google auth */\n  google: boolean;\n  /** Show/Hide Twitter auth */\n  twitter: boolean;\n  /** Show/Hide Twitter auth */\n  disqus: boolean;\n\n  onClick: (social: 'facebook' | 'google' | 'twitter' | 'disqus') => void;\n}\n\nconst SocialAuthWrapper = styled.div`\n  margin-right: 10px;\n  > button {\n    margin-left: 5px;\n  }\n`;\n\nconst SocialAuth: React.FunctionComponent<IProps> = ({ onClick, disqus, facebook, google, twitter }) => (\n  <SocialAuthWrapper>\n    {facebook && (\n      <SocialButton\n        onClick={() => onClick('facebook')}\n        type=\"facebook\"\n        size=\"35px\"\n        title={translation.login.facebook}\n      />\n    )}\n    {google && (\n      <SocialButton onClick={() => onClick('google')} type=\"google\" size=\"35px\" title={translation.login.google} />\n    )}\n    {twitter && (\n      <SocialButton onClick={() => onClick('twitter')} type=\"twitter\" size=\"35px\" title={translation.login.twitter} />\n    )}\n    {disqus && (\n      <SocialButton onClick={() => onClick('disqus')} type=\"disqus\" size=\"35px\" title={translation.login.disqus} />\n    )}\n  </SocialAuthWrapper>\n);\n\nexport default SocialAuth;\n","import * as React from 'react';\n\ninterface IProps {\n  id: string;\n}\n\nconst PrivacyCheckbox: React.FunctionComponent<IProps> = ({ id }) => (\n  <div style={{ textAlign: 'right' }}>\n    <label htmlFor={`terms-${id}`}>\n      <input type=\"checkbox\" id={`terms-${id}`} name=\"terms\" required={true} />\n      <span>\n        I agree with Vuukle's{' '}\n        <a href=\"https://docs.vuukle.com/privacy-and-policy/\" target=\"_blank\" rel=\"noopener nofollow\">\n          Privacy Policy\n        </a>\n      </span>\n    </label>\n  </div>\n);\n\nexport default PrivacyCheckbox;\n","/**\n * @file Component to use for authorization with Password.\n */\nimport uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport translation from 'stores/translationStore';\n\nimport EmailInput from './components/EmailInput';\nimport PasswordInput from './components/PasswordInput';\nimport PrivacyCheckbox from './components/PrivacyCheckbox';\nimport StyledForm from './components/StyledForm';\n\ninterface IProps {\n  toggleView: () => void;\n}\n\n/** MobX injected props */\nimport { AuthStore } from 'modules/Auth/stores';\ninterface IInjectedProps {\n  authStore: AuthStore;\n}\n\ninterface IState {\n  /** Email input value */\n  email: string;\n  /** Password input value */\n  password: string;\n}\n\n@inject('authStore')\n@observer\nclass PasswordAuth extends React.Component<IProps, IState> {\n  public readonly state: Readonly<IState> = {\n    email: '',\n    password: '',\n  };\n\n  private id: string = uniqueId('pwd');\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   * @return {Props & InjectedProps}\n   */\n  get injected(): IProps & IInjectedProps {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  /**\n   * @name onSubmit\n   * @protected\n   * @description form submit event.\n   * @param {React.FormEvent<HTMLFormElement>} e - form event\n   * @returns {void}\n   */\n  protected onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    this.injected.authStore.signIn(this.state.email, this.state.password).then(() => {\n      if (!this.injected.authStore.error) {\n        this.setState({ email: '', password: '' });\n      }\n    });\n  };\n\n  private handleInputChange = (e: React.FormEvent<HTMLInputElement>) =>\n    this.setState({ [e.currentTarget.name as 'email']: e.currentTarget.value }); // FIXME: fix typings\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit}>\n        <EmailInput id={this.id} value={this.state.email} onChange={this.handleInputChange} />\n        <PasswordInput id={this.id} value={this.state.password} minLength={0} onChange={this.handleInputChange} />\n        <PrivacyCheckbox id={this.id} />\n        {/* Errors Alert */}\n        {error && (\n          <Alert type=\"error\" onClose={closeAlert}>\n            {this.injected.authStore.error}\n          </Alert>\n        )}\n        {/* Submit Button */}\n        <div style={{ textAlign: 'right' }}>\n          <span style={{ margin: '0 5px' }}>\n            Don't have an account?{' '}\n            <a href=\"#no\" onClick={this.props.toggleView}>\n              {translation.common.signUp}\n            </a>\n          </span>\n          <Button loading={inProgress} htmlType=\"submit\">\n            {translation.common.signIn}\n          </Button>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default PasswordAuth;\n","import * as React from 'react';\n\nimport Input from '@vuukle/input';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  id: string;\n  value: string;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n}\n\nconst NameInput: React.FunctionComponent<IProps> = ({ id, value, onChange }) => {\n  const namePattern = '^[^~`!#$%@^&*+=[\\\\];,/{}|\\\\\\\\\":<>?]*$';\n  return (\n    <Input\n      type=\"text\"\n      value={value}\n      pattern={namePattern}\n      name=\"name\"\n      id={`name-${id}`}\n      minLength={3}\n      maxLength={40}\n      placeholder={translation.common.name}\n      dir=\"auto\"\n      title={translation.common.invalidName}\n      onChange={onChange}\n      required={true}\n    />\n  );\n};\n\nexport default NameInput;\n","/**\n * @file Component to use for users authorization without password\n */\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { AuthStore } from 'modules/Auth/stores';\nimport translation from 'stores/translationStore';\n\nimport EmailInput from './components/EmailInput';\nimport NameInput from './components/NameInput';\nimport PrivacyCheckbox from './components/PrivacyCheckbox';\nimport StyledForm from './components/StyledForm';\n\ninterface IInjectedProps {\n  authStore: AuthStore;\n}\n\ninterface IState {\n  /** Name input value */\n  name: string;\n  /** Email input value */\n  email: string;\n}\n\n@inject('authStore')\n@observer\nclass PasswordLessAuth extends React.Component<{}, IState> {\n  public readonly state: Readonly<IState> = {\n    email: '',\n    name: '',\n  };\n  private id: string = uniqueId('pwdless');\n\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   */\n  get injected(): IInjectedProps {\n    return this.props as IInjectedProps;\n  }\n\n  /**\n   * @name onSubmit\n   * @protected\n   * @description form submit event.\n   * @param {React.FormEvent<HTMLFormElement>} e - Form event\n   * @returns {void}\n   */\n  protected onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n\n    await this.injected.authStore.signInWithoutPassword(this.state.name, this.state.email);\n    if (!this.injected.authStore.error) {\n      this.setState({ email: '', name: '' });\n    }\n  };\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit} action=\"#\">\n        <NameInput\n          id={this.id}\n          value={this.state.name}\n          onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ name: e.currentTarget.value })}\n        />\n        <EmailInput\n          id={this.id}\n          value={this.state.email}\n          onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ email: e.currentTarget.value })}\n        />\n        <PrivacyCheckbox id={this.id} />\n        {/* Errors Alert */}\n        {error && (\n          <Alert type=\"error\" onClose={closeAlert}>\n            {this.injected.authStore.error}\n          </Alert>\n        )}\n        {/* Submit Button */}\n        <div style={{ textAlign: 'right' }}>\n          <Button loading={inProgress} htmlType=\"submit\">\n            {translation.common.signIn}\n          </Button>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default PasswordLessAuth;\n","import uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\n\nimport { AuthStore } from 'modules/Auth/stores';\nimport translation from 'stores/translationStore';\n\nimport EmailInput from './components/EmailInput';\nimport NameInput from './components/NameInput';\nimport PasswordInput from './components/PasswordInput';\nimport PrivacyCheckbox from './components/PrivacyCheckbox';\nimport StyledForm from './components/StyledForm';\n\ninterface IProps {\n  toggleView: () => void;\n}\n\ninterface IInjectedProps {\n  authStore: AuthStore;\n}\n\ninterface IState {\n  /** Email input value */\n  name: string;\n  /** Email input value */\n  email: string;\n  /** Password input value */\n  password: string;\n}\n\n@inject('authStore')\n@observer\nclass SignUp extends React.Component<IProps, IState> {\n  public readonly state: Readonly<IState> = {\n    email: '',\n    name: '',\n    password: '',\n  };\n  private id: string = uniqueId('su');\n\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   */\n  get injected(): IInjectedProps {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  /**\n   * @name onSubmit\n   * @protected\n   * @description form submit event.\n   * @param {React.FormEvent<HTMLFormElement>} e - From event\n   * @returns {void}\n   */\n  protected onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    this.injected.authStore.signUp(this.state.name, this.state.email, this.state.password).then(() => {\n      if (!this.injected.authStore.error) {\n        this.setState({ email: '', password: '', name: '' });\n      }\n    });\n  };\n\n  private handleInputChange = (e: React.FormEvent<HTMLInputElement>) =>\n    this.setState({ [e.currentTarget.name as 'email']: e.currentTarget.value }); // FIXME: fix typings\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit}>\n        <NameInput id={this.id} value={this.state.name} onChange={this.handleInputChange} />\n        <EmailInput id={this.id} value={this.state.email} onChange={this.handleInputChange} />\n        <PasswordInput id={this.id} value={this.state.password} onChange={this.handleInputChange} />\n        <PrivacyCheckbox id={this.id} />\n        {/* Errors Alert */}\n        {error && (\n          <Alert type=\"error\" onClose={closeAlert}>\n            {this.injected.authStore.error}\n          </Alert>\n        )}\n        {/* Submit Button */}\n        <div style={{ textAlign: 'right' }}>\n          <span style={{ margin: '0 5px' }}>\n            Already have an account?{' '}\n            <a href=\"#\" onClick={this.props.toggleView}>\n              {translation.common.signIn}\n            </a>\n          </span>\n          <Button loading={inProgress} htmlType=\"submit\">\n            {translation.common.signUp}\n          </Button>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default SignUp;\n","import React from 'react';\n\nimport Button from '@vuukle/button';\n\ninterface IProps {\n  onClick: () => void;\n}\n\nconst SSOButton: React.FunctionComponent<IProps> = ({ onClick }) => {\n  return (\n    <div style={{ textAlign: 'right' }}>\n      <Button htmlType=\"button\" onClick={onClick}>\n        Sign up to post\n      </Button>\n    </div>\n  );\n};\n\nexport default SSOButton;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport SocialAuth from './components/SocialAuth';\nimport PasswordAuth from './PasswordAuth';\nimport PasswordlessAuth from './PasswordlessAuth';\nimport SignUp from './SignUp';\nimport SSO from './SSO';\n\ninterface IProps {\n  className?: string;\n}\n\n/** MobX injected props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\ninterface IInjectedProps extends IProps {\n  authStore: AuthStore;\n  userStore: UserStore;\n}\n\ninterface IState {\n  /**\n   * Toggle item to know if needed to show sign up or sign in form,\n   * as for password auth we have 2 views: sign in and sign up\n   */\n  showSignUp: boolean;\n}\n\n@inject('authStore', 'userStore')\n@observer\nclass Auth extends React.Component<IProps, IState> {\n  public readonly state: Readonly<IState> = {\n    showSignUp: false,\n  };\n\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  /**\n   * @name injected\n   * @description just returns safety typed injected props\n   * @returns {IInjectedProps}\n   */\n  get injected(): IInjectedProps {\n    return this.props as IInjectedProps;\n  }\n\n  /**\n   * @name toggleView\n   * @protected\n   * @description Toggles view for password auth configuration. So user can sign in or sign up\n   * @returns {void}\n   */\n  public toggleView = (): void => this.setState({ showSignUp: !this.state.showSignUp });\n\n  /**\n   * @name renderVuukleAuth\n   * @description Renders auth or sign up form based on configuration.\n   * It can be password/non-password auth or sign up\n   * @return {React.ReactElement<any>} SignUp or PasswordAuth, or Passwordless auth based on configuration\n   */\n  protected renderVuukleAuth = (): React.ReactElement<any> => {\n    /** Render password less auth if auth with password is disabled */\n    if (!this.injected.authStore.withPassword) {\n      return <PasswordlessAuth />;\n    } else if (this.state.showSignUp) {\n      /** Render sign up in case if password auth is enabled and view is toggled */\n      return <SignUp toggleView={this.toggleView} />;\n    } else {\n      /** Render password auth in case if password auth is enabled */\n      return <PasswordAuth toggleView={this.toggleView} />;\n    }\n  };\n\n  public render() {\n    /** If user is authorized we don't need to show auth */\n    if (this.injected.userStore.isAuthorized) {\n      return null;\n    }\n\n    const { signInWithSocial, withVuukle, openSSO } = this.injected.authStore;\n\n    const withSocial =\n      this.injected.authStore.facebookEnabled ||\n      this.injected.authStore.googleEnabled ||\n      this.injected.authStore.twitterEnabled ||\n      this.injected.authStore.disqusEnabled;\n\n    return (\n      <section className={this.props.className}>\n        {/** Render social auth if configured */}\n        <div>\n          <SocialAuth\n            facebook={this.injected.authStore.facebookEnabled}\n            google={this.injected.authStore.googleEnabled}\n            twitter={this.injected.authStore.twitterEnabled}\n            disqus={this.injected.authStore.disqusEnabled}\n            onClick={signInWithSocial}\n          />\n        </div>\n        {/** Render Vuukle Auth if configured */}\n        <div>{withVuukle && this.renderVuukleAuth()}</div>\n        {/** Render SSO only button if everything else is disabled */}\n        {!withVuukle && !withSocial && <SSO onClick={openSSO} />}\n      </section>\n    );\n  }\n}\n\nconst AuthStyled = styled(Auth)`\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  > div {\n    &:first-child {\n      min-width: 170px;\n      max-width: 100%;\n      flex-grow: 1;\n    }\n    &:last-child {\n      flex-grow: 3;\n      width: 100%;\n      max-width: 65%;\n    }\n  }\n\n  @media (max-width: 470px) {\n    flex-direction: column;\n    > div:last-child {\n      margin-top: 10px;\n      max-width: 100%;\n    }\n  }\n`;\n\nexport default AuthStyled;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\n\nimport translation from 'stores/translationStore';\n\nimport ProfileRow from 'components/ProfileRow';\nimport Auth from 'modules/Auth';\nimport { openModalWidgetProfile } from 'services/communication';\n\nexport interface IProps {\n  /** Function which will be called on form submit */\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  /** Comment box id */\n  id: string;\n  /** Form/Comment submit is in progress */\n  inProgress: boolean;\n  /** Alert object to show message */\n  alert: { type: 'success' | 'warning' | 'error'; message: string } | null;\n  /** Function to close alert. So we allow users to close alert earlier */\n  closeAlert: () => void;\n  /** If collapsed then only button 'Write Comment' shown first which expands box on click */\n  isCollapsed: boolean;\n  /** Expand function for isCollapsed: true */\n  expand: () => void;\n  /** if block is main or opened inside reply. Needed for some logic things. */\n  isReply?: boolean;\n  /** Commenting Disabled */\n  isDisabled: boolean;\n  /** Textarea was clicked (User wants to write comment) and we can show additional UI items */\n  isClicked: boolean;\n}\n\n/** Injected MobX Stores Props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\ninterface IInjectedProps extends IProps {\n  userStore: UserStore;\n  authStore: AuthStore;\n}\n\n@inject('userStore', 'authStore')\n@observer\nclass FormWrapper extends React.Component<IProps, {}> {\n  /** Injected stores */\n  get injected() {\n    return this.props as IInjectedProps;\n  }\n\n  /**\n   * Sends message to the platform to show comments widget with needed params\n   * @return {void}\n   */\n  protected openProfileModal = (): void =>\n    openModalWidgetProfile({\n      avatar: (this.injected.userStore.details as User).avatar,\n      id: (this.injected.userStore.details as User).id,\n      name: (this.injected.userStore.details as User).name,\n      points: (this.injected.userStore.details as User).points,\n    });\n\n  public render() {\n    /** Commenting has been disabled by publisher */\n    if (this.props.isDisabled) {\n      return <Alert>{translation.messages.commentsClosed /* Comments are now closed. */}</Alert>;\n    }\n\n    /** Check if we need to collapse main comment box on widget load. */\n    if (this.props.isCollapsed && !this.props.isReply) {\n      return (\n        <Button onClick={this.props.expand} style={{ width: '100%' }}>\n          {translation.buttons.addComment /* Add Comment */}\n        </Button>\n      );\n    }\n\n    return (\n      <div>\n        <form onSubmit={this.props.handleSubmit}>\n          {this.injected.userStore.details && (\n            <ProfileRow\n              profile={this.injected.userStore.details}\n              showComments={this.openProfileModal}\n              signOut={this.injected.authStore.withSSO ? undefined : this.injected.authStore.signOut}\n            />\n          )}\n          {this.props.children}\n          <div style={{ marginTop: '10px' }}>\n            {this.props.alert && (\n              <Alert type={this.props.alert.type} onClose={this.props.closeAlert}>\n                {this.props.alert.message}\n              </Alert>\n            )}\n            {this.injected.userStore.isAuthorized && (\n              <div style={{ textAlign: 'right' }}>\n                <Button loading={this.props.inProgress} htmlType=\"submit\">\n                  {translation.buttons.post}\n                </Button>\n              </div>\n            )}\n          </div>\n        </form>\n        {this.props.isClicked && <Auth />}\n      </div>\n    );\n  }\n}\n\nexport default FormWrapper;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport CommentStoreModel from 'modules/CommentList/store/CommentItem';\n\nimport EnglishBox from './components/EnglishBox';\nimport ForeignBox from './components/ForeignBox';\n\nimport EnglishBoxStore from './stores/EnglishBox';\nimport ForeignBoxStore from './stores/ForeignBox';\n\nimport FormWrapper from './components/FormWrapper';\n\ninterface IProps {\n  /**\n   * Add comment callback.\n   * In general this prop is just a function which is used to add comment to the needed place in the store\n   */\n  addComment: (comment: Comments.ServerComment) => void;\n  /**\n   * It's id of the parent comment. Needed if we put reply box.\n   * Use 0 for comment action (comment that appears as main in feed) and real `parentId` for an reply action\n   */\n  parentId: number;\n  /**\n   * Comment edit mode\n   * @default false\n   */\n  editComment?: CommentStoreModel;\n}\n\n/** Injected Store Props */\nimport { UserStore } from 'modules/Auth/stores';\nimport { WidgetStore } from 'stores/widgetStore';\ninterface IInjectedProps extends IProps {\n  userStore: UserStore;\n  widgetStore: WidgetStore;\n}\n\n/**\n * @name HOCDecision\n * Decides which editor to show for user based on language publisher selected.\n * For english we show one editor and for non-english another with a transliteration plugin.\n * @render React\n * Main comment box:\n * @example <HOCDecision />\n * Reply box:\n * @example <HOCDecision addComment={(comment) => console.log('Comment has been added:', comment)} parentId={1} />}\n */\n@inject('widgetStore', 'userStore')\n@observer\nclass HOCDecision extends React.Component<IProps, {}> {\n  public store: EnglishBoxStore | ForeignBoxStore;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.store =\n      this.injected.widgetStore.language !== 'en'\n        ? new ForeignBoxStore(props.parentId, props.addComment)\n        : new EnglishBoxStore(props.parentId, props.addComment);\n  }\n\n  get injected() {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  public renderCommentBox(): React.ReactElement | null {\n    /** Decide which box we need to show based on publisher configuration */\n    if (this.store instanceof ForeignBoxStore) {\n      return <ForeignBox foreignStore={this.store} />;\n    }\n\n    return <EnglishBox boxStore={this.store} authorized={this.injected.userStore.isAuthorized} />;\n  }\n\n  public render() {\n    return (\n      <FormWrapper\n        handleSubmit={this.store.onSubmit}\n        id={this.store.id}\n        inProgress={this.store.inProgress}\n        alert={this.store.alert.value}\n        closeAlert={this.store.alert.close}\n        expand={() => (this.store.hidden = false)}\n        isCollapsed={this.store.hidden}\n        isReply={this.props.parentId !== 0}\n        isDisabled={this.store.disabled}\n        isClicked={!this.store.minimized}\n      >\n        {this.renderCommentBox()}\n      </FormWrapper>\n    );\n  }\n}\n\nexport default HOCDecision;\n","import { observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport Comment from '@vuukle/comment';\nimport Tag from '@vuukle/tag';\nimport TruncateText from '@vuukle/truncate-text';\n\nimport CommentModel from 'modules/CommentList/store/CommentItem';\nimport EditCommentBox from 'modules/EditCommentBox';\nimport WriteComment from 'modules/WriteComment';\nimport translation from 'stores/translationStore';\n\nimport { IAlert } from 'stores/models/Alert';\n\ninterface ICommentProps {\n  comment: CommentModel;\n  isModerator: boolean;\n  /**\n   * Highlight comment with border\n   * @default false\n   */\n  highlighted?: boolean;\n\n  className?: string;\n}\n\nconst Wrapper = styled.div`\n  margin: 10px 0;\n  padding-bottom: 10px;\n  &:not(:last-child) {\n    border-bottom: 0.05rem solid ${(props) => (props.theme.isDark ? '#757575' : '#e7e9ed')};\n  }\n`;\n\nconst RepliesWrapper = styled('div')`\n  margin-left: 15px;\n  margin-top: 15px;\n  ${Wrapper} {\n    border-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\n\n@observer\nclass CommentItem extends React.Component<ICommentProps> {\n  public static defaultProps: Partial<ICommentProps> = {\n    highlighted: false,\n  };\n\n  /**\n   * @name getDropdownOptions\n   * @description creates array of comment actions for dropdown\n   */\n  protected getDropdownOptions = () => {\n    const options: Array<{ name: string; onClick: () => void }> = [\n      {\n        name: `${this.props.comment.collapsed ? translation.common.expand : translation.common.collapse}`,\n        onClick: this.props.comment.collapse,\n      },\n    ];\n\n    if (this.props.comment.isOwner) {\n      options.unshift({\n        name: 'Edit Comment',\n        onClick: () => (this.props.comment.editMode = true),\n      });\n    }\n    /** Detect if it's comment owner to show another comment actions */\n    if (this.props.comment.isOwner) {\n      options.unshift({\n        name: translation.profile.removeComment,\n        onClick: () => (window as any).open('https://vuukle.com/user/lock?to=comments', '_blank'),\n      });\n    } else {\n      options.unshift({ name: translation.common.report, onClick: this.props.comment.report });\n    }\n    /** Add one more option to moderate comment */\n    if (this.props.isModerator) {\n      options.unshift({ name: 'Reject Comment', onClick: this.props.comment.reject });\n    }\n    return options;\n  };\n\n  /**\n   * @name renderCommentHeader\n   * @description get content for comment header\n   */\n  protected renderCommentHeader = (): JSX.Element | null => {\n    const { authorType } = this.props.comment.data;\n    /**\n     * 1 - Admin\n     * 2 - Author\n     * 3 - Moderator\n     */\n    if (authorType === 1 || authorType === 2 || authorType === 3) {\n      return (\n        <Tag type=\"warning\" key=\"mod\" style={{ verticalAlign: 'top', margin: '0 5px' }}>\n          {translation.common.moderator}\n        </Tag>\n      );\n    }\n\n    return null;\n  };\n\n  /**\n   * Renders alert based on passed alert obj\n   * @param {IAlert} alert - alert obj with message and type\n   * @param {function} onClose - function to call once alert close button clicked\n   */\n  public renderAlert = (alert: IAlert, onClose: () => void) => (\n    <Alert type={alert.type} onClose={onClose}>\n      <div dangerouslySetInnerHTML={{ __html: alert.message }} />\n    </Alert>\n  );\n\n  public render() {\n    const { className, comment } = this.props;\n\n    return (\n      <Wrapper className={className}>\n        {/** Top Alert for errors/warning */}\n        {comment.topAlert.value && this.renderAlert(comment.topAlert.value, comment.topAlert.close)}\n\n        {comment.editMode && (\n          <EditCommentBox comment={this.props.comment} onClose={() => (this.props.comment.editMode = false)} />\n        )}\n\n        {!comment.editMode && !comment.hidden && (\n          <Comment\n            className=\"v-comment\"\n            name={comment.data.name}\n            hash={comment.data.userId}\n            onUserClick={comment.showCommenterProfile}\n            avatar={comment.data.pictureUrl}\n            comment={\n              <TruncateText seeMore={translation.common.readMore}>\n                <span dangerouslySetInnerHTML={{ __html: comment.getCommentTextForRender() }} />\n              </TruncateText>\n            }\n            points={\n              comment.data.userPoints\n                ? `${comment.data.userPoints} ${\n                    comment.data.userPoints === 1 ? translation.common.point : translation.common.points\n                  }`\n                : undefined\n            }\n            header={this.renderCommentHeader()}\n            likes={comment.data.likeCount}\n            dislikes={0}\n            date={comment.data.timeago}\n            minimize={comment.collapsed}\n            actions={[\n              <Comment.Action key=\"1\">\n                <Button type=\"subtle\" onClick={comment.toggleLike} active={comment.currentSessionLiked} sm={true}>\n                  👍 <strong>{comment.data.likeCount}</strong>\n                </Button>\n              </Comment.Action>,\n              <Comment.Share key=\"2\" onClick={comment.share}>\n                {translation.common.share}\n              </Comment.Share>,\n              <Comment.Action key=\"3\">\n                <a\n                  href=\"#no\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    comment.toggleReplyBox();\n                  }}\n                >\n                  {translation.common.reply /* Reply */}\n                </a>\n              </Comment.Action>,\n            ]}\n            options={this.getDropdownOptions()}\n            highlighted={this.props.highlighted}\n          />\n        )}\n\n        {/** Bottom Alert for errors/warning */}\n        {comment.bottomAlert.value && this.renderAlert(comment.bottomAlert.value, comment.bottomAlert.close)}\n\n        {/** Write comment box with sing in */}\n        {comment.showReplyBox && (\n          <div style={{ margin: '10px 0' }}>\n            <WriteComment\n              // TODO: mb rename this prop\n              addComment={(commentItem: Comments.ServerComment) => {\n                comment.addReply(commentItem); // Add reply to this comment\n                comment.toggleReplyBox(); // Hide reply on success\n              }}\n              parentId={comment.data.id}\n            />\n          </div>\n        )}\n        {/* Replies */}\n        {!comment.collapsed && comment.replies.length > 0 && (\n          <RepliesWrapper>\n            {comment.replies.map((reply: CommentModel) => (\n              <CommentItem isModerator={this.props.isModerator} comment={reply} key={comment.data.id} />\n            ))}\n          </RepliesWrapper>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default CommentItem;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from '@vuukle/button';\nimport Loader from '@vuukle/loader';\n\nimport translation from 'stores/translationStore';\nimport CommentModel from './store/CommentItem';\n\nimport SortingRow from 'components/SortingRow';\nimport Comment from './components/CommentItem';\n\n/** MobX injected props */\nimport { UserStore } from 'modules/Auth/stores';\nimport { CommentsStore } from './store';\ninterface IInjectedProps {\n  commentsStore: CommentsStore;\n  userStore: UserStore;\n}\n\n@inject('commentsStore', 'userStore')\n@observer\nexport default class Comments extends React.Component {\n  get injected() {\n    return this.props as IInjectedProps;\n  }\n\n  public render() {\n    const { comments, loading, totalComments, moreAvailable, sorting, selectedComment } = this.injected.commentsStore;\n    const isModerator = (this.injected.userStore.details && this.injected.userStore.details.isModerator) || false;\n\n    if (loading && totalComments <= 0) {\n      return <Loader size=\"15px\" style={{ margin: '20px auto' }} />;\n    }\n\n    if (totalComments <= 0) {\n      return <p style={{ textAlign: 'center' }}>{translation.messages.noComments}</p>;\n    }\n\n    return (\n      <div>\n        <SortingRow active={sorting} onSelect={this.injected.commentsStore.changeSorting} />\n        <div style={{ margin: '15px 0' }}>\n          {selectedComment && <Comment comment={selectedComment} isModerator={isModerator} highlighted={true} />}\n          {loading && comments.length <= 0 && <Loader size=\"15px\" />}\n          {!loading && comments.length <= 0 && (\n            <p style={{ textAlign: 'center' }}>{translation.messages.noCommentsInSorting}</p>\n          )}\n          {comments.map((comment: CommentModel) => (\n            <Comment comment={comment} isModerator={isModerator} key={comment.data.id} />\n          ))}\n        </div>\n        {moreAvailable && (\n          <Button\n            onClick={this.injected.commentsStore.loadMoreComments}\n            loading={loading}\n            style={{ display: 'block', width: '100%' }}\n          >\n            {translation.buttons.loadMore /* Load More */}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '@vuukle/button';\nimport Card from '@vuukle/card';\nimport Tag from '@vuukle/tag';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  articles: Articles.Article[];\n  /**\n   * Show or hide button to load more articles\n   * @default false\n   */\n  showMoreButton: boolean;\n  /**\n   * On click handler for more button click\n   */\n  onMoreButtonClick: () => void;\n  isVerticalCards?: boolean;\n  className?: string;\n}\n\nconst ArticlesWrapper: React.FunctionComponent<IProps> = ({\n  articles,\n  showMoreButton = false,\n  onMoreButtonClick,\n  isVerticalCards = false,\n  className = '',\n}) => {\n  return (\n    <div className={className}>\n      <div>\n        {articles.map((article) => (\n          <Card\n            key={article.articleId}\n            heading={article.excerpt || article.title}\n            img={article.articleAvatar}\n            link={article.uri}\n            linkRel=\"noopener nofollow\"\n            mode={isVerticalCards ? 'vertical' : 'horizontal'}\n          >\n            {article.commentCount > 0 && (\n              <Tag style={{ marginRight: '5px' }}>\n                {article.commentCount}{' '}\n                {article.commentCount > 1 ? translation.commentText.whenX : translation.commentText.when1}\n              </Tag>\n            )}\n          </Card>\n        ))}\n      </div>\n      {showMoreButton && <Button onClick={onMoreButtonClick}>{translation.buttons.showMoreArticles}</Button>}\n    </div>\n  );\n};\n\nconst StyledArticlesWrapper = styled(ArticlesWrapper)`\n  > div {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  ${Button} {\n    display: block;\n    width: 100%;\n  }\n\n  ${Card} {\n    flex: 0 49%;\n    margin-bottom: 10px;\n  }\n\n  @media (max-width: 450px) {\n    ${Card} {\n      flex: 0 100%;\n    }\n  }\n`;\n\nexport default StyledArticlesWrapper;\n","import { observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport translation from 'stores/translationStore';\nimport articlesStore, { ArticlesStore } from './store';\n\nimport ArticlesWrapper from './components/ArticlesWrapper';\n\ninterface IProps {\n  className?: string;\n}\n\n/** Component Wrapper Styles */\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  padding: 0 1px;\n  h4 {\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n`;\n\n@observer\nclass Articles extends React.Component<IProps> {\n  private articlesStore: ArticlesStore = articlesStore;\n\n  public render() {\n    if (this.articlesStore.disabled || this.articlesStore.articles.length <= 0) {\n      return null;\n    }\n\n    return (\n      <Wrapper className={this.props.className}>\n        <h4>{translation.recommendedStories /* 'Talk of the town' */}</h4>\n        <ArticlesWrapper\n          articles={this.articlesStore.articles}\n          isVerticalCards={this.articlesStore.isVerticalCards}\n          showMoreButton={this.articlesStore.moreArticlesAvailable}\n          onMoreButtonClick={this.articlesStore.showMoreArticles}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Articles;\n","import { Provider } from 'mobx-react';\nimport * as React from 'react';\n// APIs\nimport { commentsApis } from 'services/apis';\n\n// Store\nimport { authStore, userStore } from 'modules/Auth/stores';\nimport commentsStore, { SortingType } from 'modules/CommentList/store';\nimport articlesStore from 'modules/RecommendedArticles/store';\nimport widgetStore from 'stores/widgetStore';\n\n// Containers\nimport Footer from 'components/Footer';\nimport Header from 'containers/Header';\nimport CommentsList from 'modules/CommentList';\nimport Articles from 'modules/RecommendedArticles';\nimport WriteComment from 'modules/WriteComment';\n// Utils\nimport { syncInitialLoadPorthole } from 'services/communication';\n\nconst stores = {\n  authStore,\n  commentsStore,\n  userStore,\n  widgetStore,\n};\n\n/**  We need to start initial load request */\ncommentsApis.initialLoading().then((response: any) => {\n  // tslint:disable-next-line\n  /** Server didn't load article and didn't return error */\n  if (!response.success || !(response.data instanceof Object)) {\n    return;\n  }\n  /** Comments was loaded */\n  commentsStore.initialLoadSuccess(response.data.comments.items, response.data.article.commentCount);\n  commentsStore.sorting = SortingType[(response.data.sortedBy as string) || 'Latest'];\n  articlesStore.setArticlesFromServer(response.data.recommended || [], response.data.defaultTotCount);\n  widgetStore.recommendCount = response.data.recommendCount || 0;\n  widgetStore.commentingDisabled = response.data.article.disabled || false;\n  /** Share data with outer widgets */\n  syncInitialLoadPorthole(response);\n});\n\n/** Main APP wrapper */\nexport default class App extends React.Component {\n  public render() {\n    return (\n      <Provider {...stores}>\n        <div>\n          <Header />\n          <WriteComment addComment={commentsStore.addComment} parentId={0} />\n          <CommentsList />\n          <Articles />\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n","/**\n * index.ts\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\nimport '@babel/polyfill';\nimport './polyfills';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { initializeListener } from 'services/communication';\nimport widgetStore from 'stores/widgetStore';\nimport App from './containers/App';\n\nconst HTML_NODE = document.querySelector('html');\nconst BODY_NODE = document.querySelector('body');\nconst MOUNT_NODE = document.getElementById('app');\n\n/* ========================================================\n * 💅 Global Styles and Theming\n======================================================== */\nimport { generateGlobalStyles, generateTheme } from '@vuukle/widget-theme';\nimport { ThemeProvider } from 'styled-components';\nconst theme = generateTheme(widgetStore.theme, widgetStore.language === 'ar');\nconst GlobalStyles = generateGlobalStyles(theme);\n\n/* ========================================================\n * 🏞️ Render React App\n======================================================== */\nconst render = () =>\n  ReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <div>\n        <GlobalStyles />\n        <App />\n      </div>\n    </ThemeProvider>,\n    MOUNT_NODE\n  );\n\nrender();\n\n/* ========================================================\n* Detect APP language\n======================================================== */\nif (HTML_NODE !== null) {\n  if (widgetStore.language === 'ar') {\n    HTML_NODE.setAttribute('dir', 'rtl');\n  }\n  if (widgetStore.language !== 'en') {\n    HTML_NODE.setAttribute('lang', widgetStore.language);\n  }\n}\n\n/* ========================================================\n* Check for Opera Mini in Saving mode\n======================================================== */\nif (\n  navigator.userAgent.indexOf('Opera Mini') !== -1 ||\n  Object.prototype.toString.call((window as any).operamini) === '[object OperaMini]'\n) {\n  const element = document.createElement('div');\n  element.style.border = '1px solid #ffb995';\n  element.style.backgroundColor = '#fff8f4';\n  element.style.padding = '8px';\n  element.style.margin = '10px';\n  element.innerHTML = 'Please disable Opera Mini \"Saving mode\" to have a correct working page and comments widget.';\n  // Insert to body\n  if (BODY_NODE) {\n    BODY_NODE.insertBefore(element, BODY_NODE.firstChild); // insert message\n  }\n}\n\n/* ========================================================\n* 💬 Listen for messages from porthole\n* [replace to another file if we will add more handlers]\n======================================================== */\ninitializeListener();\n\n/* ========================================================\n* 🔁 HOT reload\n======================================================== */\nif ((module as any).hot && process.env.NODE_ENV === 'development' && MOUNT_NODE instanceof HTMLElement) {\n  // Hot reloadable React components and translation json files\n  // modules.hot.accept does not accept dynamic dependencies,\n  // have to be constants at compile-time\n  (module as any).hot.accept('./containers/App', () => {\n    ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n    render();\n  });\n}\n\n/* ========================================================\n Ohh!😱 And one more... we need to watch height of app since\n we will be rendered inside iframe\n======================================================== */\nlet oldHeight = MOUNT_NODE instanceof HTMLElement ? MOUNT_NODE.offsetHeight : 0;\n\nsetInterval(() => {\n  // We add 5 pixels to height because we can have for example in bottom CircleProgress and while it will\n  // be animated scrollbar will appear/disappear because animation is faster than this height processing\n  const newHeight: number = MOUNT_NODE instanceof HTMLElement ? MOUNT_NODE.offsetHeight + 5 : 0;\n\n  if (newHeight !== oldHeight) {\n    if (window.parent.postMessage) {\n      oldHeight = newHeight;\n\n      window.parent.postMessage(\n        JSON.stringify({\n          data: { height: newHeight },\n          sourceOrigin: (window as any).origin,\n          sourceWindowName: window.name,\n          type: 'resize',\n          widget: 'emotes',\n        }),\n        '*'\n      );\n    }\n  }\n  // tslint:disable-next-line\n}, 200);\n\n/* ========================================================\n* and one more... 😃 Log Vuukle Initialization\n======================================================== */\n// tslint:disable-next-line\nconsole.log(\n  `%c[VUUKLE] Comments widget initialized! Version: ${\n    process.env.VERSION\n  }. Need help? Reach us at support[at]vuukle[dot]com`,\n  'color:#039BE5;'\n);\n","import { getTextFromHTML, truncateString } from '@vuukle/utils';\nimport translation from 'stores/translationStore';\n\n/**\n * Generate hash code from string.\n * Used to generate hash to send comment and prevent many comments sending from some program etc.\n * so hash will be different for every sendComment API request\n * https://gitlab.com/vuukle/widget-comments/issues/65\n * @returns {number}\n */\nexport function hashCode(str: string): number {\n  let hash = 0;\n  for (let i = 0; i < str.length; i += 1) {\n    hash = ~~((hash << 5) - hash + str.charCodeAt(i)); // tslint:disable-line\n  }\n  return hash;\n}\n\nfunction timeAgoBuilder() {\n  const monthsOptions = { month: 'short', day: 'numeric' };\n  const roundTime = (val: number): string => String(Math.abs(Math.round(val)));\n\n  return (date: number): string => {\n    const time = new Date(date * 1000);\n\n    const now = new Date();\n    const seconds = ((now.getTime() - time.getTime()) * 0.001) >> 0; // tslint:disable-line\n    const minutes = seconds / 60;\n    const hours = minutes / 60;\n    const days = hours / 24;\n\n    return (\n      (seconds < 60 && translation.timeAgo.seconds) ||\n      (minutes < 60 && translation.timeAgo.minutes.replace('%d', roundTime(minutes))) ||\n      (hours < 24 && translation.timeAgo.hours.replace('%d', roundTime(hours))) ||\n      (days < 28 && translation.timeAgo.days.replace('%d', roundTime(days))) ||\n      (days < 365 && time.toLocaleDateString(translation.timeAgo.locale, monthsOptions)) ||\n      `${roundTime(days / 365)}y`\n    );\n  };\n}\n\nexport const timeAgo = timeAgoBuilder();\n\n/**\n * @name createTitleExcerpt\n * @param {string} title to truncate\n * @param {number} maxLength - max string length\n * @return {string} excerpt\n */\nexport const createTitleExcerpt = (title: string, maxLength: number) =>\n  truncateString(getTextFromHTML(title), maxLength);\n","import * as Cookies from 'js-cookie';\nimport { action, decorate, observable } from 'mobx';\nimport { recommendAPIs } from 'services/apis';\nimport { syncRecommendations } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\n\nexport class WidgetStore {\n  /** Article recommendation */\n  public recommendCount: number = 0;\n  public recommendInProgress: boolean = false;\n  public isRecommended: boolean = false;\n  /** Comments widget language */\n  public language: string;\n  /** Publisher API key */\n  public apiKey: string;\n  public commentingDisabled: boolean = false;\n  /** Article Details */\n  public article: {\n    refHost: string;\n    /** Article host */\n    host: string;\n    /** Article ID */\n    id: string;\n    /** Article title/heading */\n    title: string;\n    /** Article URL */\n    url: string;\n    /** Article image */\n    img: string;\n    /** Article tags */\n    tags: string;\n    /** Article author */\n    author: string;\n  };\n  public theme: {\n    /** Determines if widget is loaded on dark theme */\n    darkMode: boolean;\n    /** Primary widget color */\n    color: string | null;\n    /** Custom font-family */\n    font: string | null;\n  };\n\n  /** Config we will use for transliteration */\n  // transliterationConfig: Transliteration = TransliterationStore;\n  constructor() {\n    this.language = urlSearchParams.get('lang') || 'en';\n    this.apiKey = urlSearchParams.get('apiKey') || '';\n\n    this.article = {\n      author: urlSearchParams.get('author') || '',\n      host: urlSearchParams.get('host') || '',\n      id: urlSearchParams.get('articleId') || '',\n      img: urlSearchParams.get('img') || '',\n      refHost: urlSearchParams.get('refHost') || '',\n      tags: urlSearchParams.get('tags') || '',\n      title: urlSearchParams.get('title') || '',\n      url: urlSearchParams.get('url') || '',\n    };\n\n    this.theme = {\n      color: urlSearchParams.get('color'),\n      darkMode: urlSearchParams.get('darkMode') === 'true',\n      font: urlSearchParams.get('font'),\n    };\n\n    if (process.env.NODE_ENV === 'development') {\n      // this.apiKey = '7c2920a3-81a0-4758-8000-d2cc1b892ceb';\n      // this.apiKey = 'de9d8063-9a97-4608-b612-9353a2b07c7b';\n      // this.apiKey = '8f291d07-5577-46be-ae2e-b4782cc3a034'; // nbc-2\n      // this.article = {\n      //   // host: 'testertest.test.com',\n      //   host: 'cranky-lumiere-e81cb7.netlify.com',\n      //   id: '6698817',\n      //   title: 'test title 610%!@#$%^&*()_+',\n      //   // url: 'https://testertest.test.com',\n      //   url: 'https://cranky-lumiere-e81cb7.netlify.com/',\n      //   img: 'https://via.placeholder.com/400x400',\n      //   tags: '',\n      //   author: 'Author',\n      // };\n      // this.article = {\n      //   host: 'nbc-2.com',\n      //   id: '39104899',\n      //   author: '',\n      //   img: '',\n      //   tags: 'News - AP-National',\n      //   title: 'Trump Jr. mocks sexual assault claim against Kavanaugh',\n      //   url: 'http://www.nbc-2.com/story/39104899/trump-jr-mocks-sexual-assault-claim-against-kavanaugh',\n      // };\n    }\n\n    /** Check in cookies if user recommended this article */\n    this.isRecommended = !!Cookies.get(`${this.article.host}&${this.article.id}_recommend`);\n  }\n\n  public recommend = async (): Promise<boolean | void> => {\n    this.recommendInProgress = true;\n\n    try {\n      const alreadyVoted = this.isRecommended;\n      /** Toggle recommendation */\n      this.isRecommended = !this.isRecommended;\n      /** If user already voted than decrease count of recommendations, remove cookie and send request */\n      if (alreadyVoted) {\n        if (this.recommendCount > 0) {\n          this.recommendCount--;\n        }\n        Cookies.remove(`${this.article.host}&${this.article.id}_recommend`);\n        /** Toggle recommend button in other widgets after we updated values */\n        syncRecommendations(this.isRecommended, this.recommendCount);\n\n        await recommendAPIs.delete();\n      } else {\n        /** Else increase counter, create cookie and send request */\n        this.recommendCount++;\n        Cookies.set(`${this.article.host}&${this.article.id}_recommend`, 'true', { expires: 30 });\n        /** Toggle recommend button in other widgets after we updated values */\n        syncRecommendations(this.isRecommended, this.recommendCount);\n\n        await recommendAPIs.post();\n      }\n    } catch (error) {\n      return false;\n    } finally {\n      this.recommendInProgress = false;\n    }\n  };\n}\n\ndecorate(WidgetStore, {\n  commentingDisabled: observable,\n  isRecommended: observable,\n  recommendCount: observable,\n  recommendInProgress: observable,\n\n  recommend: action,\n});\n\nexport default new WidgetStore();\n","/**\n * @file Store to manage recommended articles section\n */\nimport { action, computed, decorate, observable } from 'mobx';\nimport urlSearchParams from 'services/urlSearchParams';\nimport { createTitleExcerpt } from 'utils';\n\n/**\n * Recommended Articles Store\n * Used to store articles related config and articles items itself\n */\nexport class ArticlesStore {\n  /**\n   * Recommended articles are disabled (not needed to render).\n   * @default false\n   */\n  public disabled: boolean = false;\n  /**\n   * Global Articles Recommendations.\n   * This configuration item determines if publisher wants to load recommendations from all domains available by api key\n   * @default false\n   */\n  public global: boolean = false;\n  /**\n   * Publisher can configure custom articles link structure (protocol,additional paths etc.)\n   * For example it can be: 'http://[url]', 'https://www.[url]' etc.\n   * And we just replace '[url]' with actual article url we receive from the server\n   * @default 'http://[url]' @see ArticlesStore.constructor\n   */\n  public link: string = 'http://[url]';\n  /**\n   * Publisher can enable vertical cards styles\n   * @default false We show horizontal styled cards by default\n   */\n  public isVerticalCards: boolean = false;\n  /** 🔧State */\n  @observable private items: Articles.Article[] = [];\n  // If we have more than 6 articles we should set this to false,\n  // so expand button will be shown and will toggle this to true. This is needed only once.\n  @observable private articlesToShow: number = 6;\n\n  constructor() {\n    this.disabled = urlSearchParams.get('hideArticles') === 'true';\n    /** If articles disabled we don't need to do anything */\n    if (this.disabled) {\n      return;\n    }\n\n    this.global = urlSearchParams.get('gr') === 'true';\n    this.isVerticalCards = urlSearchParams.get('totWideImg') === 'true';\n    this.link = urlSearchParams.get('link') || 'http://[url]';\n  }\n\n  /**\n   * Get articles list.\n   * @return {Array<Object>} First 6 articles or full list based on this.articlesExpanded\n   */\n  get articles(): Articles.Article[] {\n    return this.items.slice(0, this.articlesToShow);\n  }\n\n  /**\n   * Set article items.\n   * @param {Array<Object>} articles list we received from the server response from loadVuukle\n   * @return {void}\n   */\n  set articles(articles: Articles.Article[]) {\n    if (this.disabled) {\n      return;\n    }\n    this.items = articles;\n  }\n\n  @computed\n  get moreArticlesAvailable() {\n    return this.items.length > this.articlesToShow;\n  }\n\n  /** Show more articles */\n  public showMoreArticles = () => {\n    return (this.articlesToShow = this.items.length);\n  };\n\n  /**\n   * Parse and set articles received from the server\n   * @param {Array<object>} articles - articles received from server\n   * @return {void}\n   */\n  public setArticlesFromServer = (articles: Articles.ServerArticle[], articlesToShowBeforeExpand: number): void => {\n    // ⬇ We don't need to do anything if articles disabled\n    if (this.disabled) {\n      return;\n    }\n\n    this.articlesToShow = articlesToShowBeforeExpand;\n\n    this.articles = articles.map(\n      (article): Articles.Article => {\n        return {\n          articleAvatar: article.articleAvatar,\n          articleId: article.articleId,\n          commentCount: article.commentCount,\n          excerpt: createTitleExcerpt(article.title, 120),\n          host: article.host,\n          title: article.title,\n          uri: `${process.env.API_URL}/stats/External?source=talk_of_town&url=${this.link.replace(\n            '[url]',\n            article.uri\n          )}`,\n        };\n      }\n    );\n  };\n}\n\ndecorate(ArticlesStore, {\n  setArticlesFromServer: action,\n  showMoreArticles: action,\n});\n\nexport default new ArticlesStore();\n","import * as Cookies from 'js-cookie';\n\nexport const getOptions = () => (process.env.NODE_ENV === 'production' ? { domain: '.vuukle.com' } : {});\n\n/** Get user token */\nexport const getToken = () => Cookies.get(process.env.SESSION_COOKIE_NAME || 'token');\n/** Set user token */\nexport const saveToken = (token: string) =>\n  Cookies.set(process.env.SESSION_COOKIE_NAME || 'token', token, { ...getOptions(), expires: 365 });\n/** Remove user token */\nexport const removeToken = () => Cookies.remove(process.env.SESSION_COOKIE_NAME || 'token', getOptions());\n/** Save user API key for analytics usage (platform) */\nexport const setUserApiKey = (apiKey: string) => Cookies.set('uid', apiKey, { ...getOptions(), expires: 365 });\n/** Remove user API key on sign out so analytics won't use old session */\nexport const removeUserApiKey = () => Cookies.remove('uid', getOptions());\n\nexport default {\n  getToken,\n  removeToken,\n  removeUserApiKey,\n  saveToken,\n  setUserApiKey,\n};\n","import { action, computed, decorate, observable } from 'mobx';\n\nexport interface IAlert {\n  type: 'error' | 'warning' | 'success';\n  message: string;\n  timeout?: number;\n}\n\n/** This class is responsible for showing/hiding/removing alerts for other components */\nclass Alert {\n  @observable\n  private alertValue: IAlert | null = null;\n  private alertTimeout: any; // Timeout saved in this variable for further canceling\n\n  @computed\n  get value(): IAlert | null {\n    return this.alertValue;\n  }\n\n  set value(alertObj: IAlert | null) {\n    clearTimeout(this.alertTimeout);\n    this.alertValue = alertObj;\n    if (alertObj) {\n      this.alertTimeout = setTimeout(() => (this.alertValue = null), alertObj.timeout || 7000);\n    }\n  }\n\n  /** Just a simple helper to easily pass close function as a callback */\n  public close = () => (this.value = null);\n}\n\ndecorate(Alert, {\n  close: action,\n});\n\nexport default Alert;\n"],"sourceRoot":""}