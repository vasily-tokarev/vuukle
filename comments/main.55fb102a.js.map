{"version":3,"sources":["webpack:///./tools/inferno-compat.tsx","webpack:///./app/modules/Auth/stores/index.ts","webpack:///./app/components/Footer/index.tsx","webpack:///./app/components/RecommendButton.tsx","webpack:///./app/containers/Header.tsx","webpack:///./app/components/SortingRow.tsx","webpack:///./app/modules/Auth/components/EmailInput.tsx","webpack:///./app/modules/Auth/components/PasswordInput.tsx","webpack:///./app/modules/Auth/components/StyledForm.tsx","webpack:///./app/modules/Auth/ProtectedAuth.tsx","webpack:///./app/modules/EditCommentBox/components/EditFormWrapper.tsx","webpack:///./app/components/TextareaFooter.tsx","webpack:///./app/modules/RichEditor/components/EditorBox.tsx","webpack:///./app/modules/GifPicker/GifItem.tsx","webpack:///./app/modules/GifPicker/GifPicker.tsx","webpack:///./app/modules/RichEditor/components/Options.tsx","webpack:///./app/modules/RichEditor/components/GIFDropdown/Icon.tsx","webpack:///./app/modules/RichEditor/components/GIFDropdown/GIFDropdown.tsx","webpack:///./app/modules/RichEditor/components/ImagePreview.tsx","webpack:///./app/modules/RichEditor/components/ImagesPreview.tsx","webpack:///./app/modules/RichEditor/components/UploadImageButton/CameraIcon.tsx","webpack:///./app/modules/RichEditor/components/UploadImageButton/index.tsx","webpack:///./app/modules/RichEditor/utils.ts","webpack:///./app/modules/RichEditor/stores/Formatting.ts","webpack:///./app/modules/RichEditor/components/Icons.tsx","webpack:///./app/modules/RichEditor/RichEditor.tsx","webpack:///./app/modules/WriteComment/components/ToxicityMeter.tsx","webpack:///./app/modules/WriteComment/components/EnglishBox.tsx","webpack:///./app/modules/WriteComment/components/Textarea.tsx","webpack:///./app/modules/WriteComment/stores/models/Transliteration.ts","webpack:///./app/modules/WriteComment/stores/models/ImageUpload.ts","webpack:///./app/modules/WriteComment/components/ForeignBox.tsx","webpack:///./app/modules/WriteComment/stores/models/CommentBox.ts","webpack:///./app/modules/WriteComment/stores/models/SpamValidationModel.ts","webpack:///./app/modules/WriteComment/stores/models/ToxicityValidationModel.ts","webpack:///./app/modules/EditCommentBox/stores/EnglishEditBox.ts","webpack:///./app/modules/EditCommentBox/stores/ForeignEditBox.ts","webpack:///./app/modules/EditCommentBox/EditCommentBox.tsx","webpack:///./app/modules/WriteComment/stores/EnglishBox.ts","webpack:///./app/modules/WriteComment/stores/ForeignBox.ts","webpack:///./app/components/ProfileRow.tsx","webpack:///./app/modules/Auth/components/SocialAuth.tsx","webpack:///./app/modules/Auth/components/PrivacyCheckbox.tsx","webpack:///./app/modules/Auth/PasswordAuth.tsx","webpack:///./app/modules/Auth/components/NameInput.tsx","webpack:///./app/modules/Auth/PasswordlessAuth.tsx","webpack:///./app/modules/Auth/SignUp.tsx","webpack:///./app/modules/Auth/SSO.tsx","webpack:///./app/modules/Auth/index.tsx","webpack:///./app/modules/WriteComment/components/FormWrapper.tsx","webpack:///./app/modules/WriteComment/WriteComment.tsx","webpack:///./app/modules/CommentList/components/CommentItem.tsx","webpack:///./app/modules/CommentList/CommentList.tsx","webpack:///./app/modules/RecommendedArticles/components/ArticlesWrapper.tsx","webpack:///./app/modules/RecommendedArticles/RecommendedArticles.tsx","webpack:///./app/containers/App.tsx","webpack:///./app/index.tsx","webpack:///./app/utils/req.ts","webpack:///./app/services/apis/index.ts","webpack:///./app/services/communication/windowProxy.ts","webpack:///./app/services/communication/initListener.ts","webpack:///./app/services/communication/sendEvents.ts","webpack:///./app/services/communication/index.ts","webpack:///./app/modules/CommentList/store/CommentItem.ts","webpack:///./app/modules/CommentList/store/index.tsx","webpack:///./app/modules/Auth/stores/userStore.ts","webpack:///./app/utils/index.ts","webpack:///./app/modules/RecommendedArticles/store.ts","webpack:///./app/services/auth.ts","webpack:///./app/stores/translationStore.ts","webpack:///./app/stores/models/Alert.ts","webpack:///./app/modules/Auth/stores/authStore.ts","webpack:///./app/stores/widgetStore.ts","webpack:///./app/services/apis/PerspectiveAPI.ts","webpack:///./app/modules/GifPicker/utils.ts","webpack:///./app/services/urlSearchParams.ts"],"names":["__webpack_require__","d","__webpack_exports__","unstable_batchedUpdates","inferno_compat__WEBPACK_IMPORTED_MODULE_0__","create_inferno_context__WEBPACK_IMPORTED_MODULE_1__","create_inferno_context__WEBPACK_IMPORTED_MODULE_1___default","n","a","Children","Component","EMPTY_OBJ","Fragment","PropTypes","PureComponent","_CI","_HI","_M","_MCCC","_ME","_MFCC","_MP","_MR","_MT","__render","cloneElement","cloneVNode","createClass","createComponentVNode","createElement","createFactory","createFragment","createPortal","createRef","createRenderer","createTextVNode","createVNode","directClone","findDOMNode","findDOMfromVNode","forwardRef","getFlagsForElementVnode","hydrate","isValidElement","linkEvent","normalizeProps","options","render","rerender","unmountComponentAtNode","unstable_renderSubtreeIntoContainer","version","createContext","_authStore__WEBPACK_IMPORTED_MODULE_0__","_userStore__WEBPACK_IMPORTED_MODULE_1__","StyledFooter","styled","_ref","className","inferno_compat","href","target","rel","viewBox","translation","footer","addVuukle","privacy","xmlns","withConfig","displayName","componentId","props","theme","mutedColor","primaryColor","StyledRecommendButton","recommended","recommends","_ref$inProgress","inProgress","onClick","Button","sm","type","active","loading","role","aria-label","common","recommend","Tag","Wrapper","header","Header","inject","observer","React","this","injected","commentsStore","totalComments","commentText","when1","whenX","components_RecommendButton","widgetStore","isRecommended","recommendCount","recommendInProgress","StyledSortingRow","onSelect","tabs_src","sorting","sortBy","name","latest","mostLiked","editorsPick","Dropdown","align","menu","src","Item","mostReplied","oldest","more","Icon","EmailInput","id","value","onChange","_ref$disabled","disabled","Input","placeholder","email","dir","concat","required","PasswordInput","_ref$minLength","minLength","password","maxLength","form","ProtectedAuth","uniqueId","state","onSubmit","e","preventDefault","_this","authStore","signIn","userStore","details","then","error","setState","handleInputChange","_defineProperty","currentTarget","_this$injected$authSt","closeAlert","StyledForm","messages","protectedAction","components_EmailInput","components_PasswordInput","Alert","onClose","style","textAlign","margin","passwordReset","htmlType","cancel","div","EditFormWrapper","renderAlert","alert","message","renderAuthenticatedActions","closeEditor","EditFormWrapper_Wrapper","Avatar","comment","data","pictureUrl","hash","userId","children","marginTop","authenticatedWithPassword","Auth_ProtectedAuth","TextareaFooterWrapper","darken","input","background","focused","border","StyledEditor","rows","Editor","onPaste","text","clipboardData","getData","document","execCommand","onKeyDown","callUpperHandler","undefined","keyCode","onInput","innerHTML","contentEditable","ref","onFocus","onBlur","dangerouslySetInnerHTML","__html","defaultProps","EditorBox_Editor","_extends","Image","img","GifWrapper","GifItem","image","SearchResult","GifPicker","GifPicker_classCallCheck","GifPicker_possibleConstructorReturn","GifPicker_getPrototypeOf","call","onSearchInputChange","searchValue","searchGIFs","getTrending","_asyncToGenerator","regenerator_default","mark","_callee","trendingResponse","wrap","_context","prev","next","getTrendingGIFs","sent","GIFs","stop","debounce","_callee2","searchResponse","_context2","getSearchGIFs","renderGifItems","map","gif","GifPicker_GifItem","key","images","fixed_height_small","url","downsized_medium","length","button","textColor","Options","Options_Wrapper","option","Options_Button","icon","title","GIFIcon","x","y","points","GIFDropdown","wrapperRef","displayMenu","showMenu","event","addEventListener","hideMenu","current","querySelector","contains","removeEventListener","renderMenu","modules_GifPicker_GifPicker","GIFLink","GIFDropdown_Wrapper","GIFDropdown_Icon","EntityItem","ImageEntity","onRemove","width","height","alt","Link","light","items","ImagePreview","CameraIcon","StyledUploadButton","onFileInputChange","as","for","UploadImageButton_CameraIcon","accept","whichTag","tagName","sel","window","getSelection","containerNode","tagFound","toUpperCase","rangeCount","getRangeAt","commonAncestorContainer","nodeType","parentNode","Formatting","Formatting_classCallCheck","formattingState","isEdgeBrowser","documentMode","test","navigator","userAgent","_initializerDefineProperty","_descriptor","_descriptor2","updateFormattingState","getFormattingState","_descriptor3","formatBlock","command","focus","queryCommandState","queryCommandValue","removeAttributes","querySelectorAll","forEach","item","HTMLElement","removeAttribute","insertList","_this2","_this$formattingState","italic","bold","underline","blockquote","pre","ul","formatText","action","_this3","commandId","_this4","decorate","observable","computed","RichEditor_classCallCheck","RichEditor_possibleConstructorReturn","RichEditor_getPrototypeOf","formattingStore","FormattingStore","onEditorClick","onEditorFocus","isFocused","onEditorBlur","onEditorKeyDown","onEditorChange","html","innerText","onUploadChange","files","Array","from","File","addImage","RichEditor_Wrapper","EditorBox","components_ImagesPreview","removeImage","showFormattingRow","components_Options","imagesDisabled","hideUploadImage","UploadImageButton","components_GIFDropdown_GIFDropdown","ballScale","keyframes","toxicAnimation","mediumAnimation","lowAnimation","fadeIn","Progress","css","Span","ToxicityMeter","_ref$visibilityLimit","visibilityLimit","_ref$toxicityText","toxicityText","_objectWithoutProperties","ToxicityMeter_extends","marginRight","WriteCommentBox","EnglishBox_classCallCheck","EnglishBox_possibleConstructorReturn","EnglishBox_getPrototypeOf","boxStore","uploadImage","add","RichEditor","writeComment","uploadLimitExceeded","authorized","remove","minimized","TextareaFooter","toxicityModel","limit","components_ToxicityMeter","toxicity","long","allowedCharactersCount","renderContent","StyledTextArea","Textarea","color","TextareaWrapper","Textarea_extends","Transliteration","Transliteration_classCallCheck","enabled","languageCode","currentLanguage","enabledByDefault","transliterationControl","loaded","languages","am","ar","bn","el","en","fa","gu","hi","kn","ml","mr","ne","or","pa","ru","sa","si","sr","ta","te","ti","ur","zn","transliterationBoxes","toggleBox","has","delete","when","makeTransliteratable","disableTransliteration","enableTransliteration","toggleLanguage","loadTransliteration","loadJS","fileRef","setAttribute","getElementsByTagName","appendChild","google","elements","transliteration","TransliterationControl","destinationLanguage","sourceLanguage","transliterationEnabled","catch","err","process","urlSearchParams","get","Set","Transliteration_createClass","language","models_Transliteration","Errors","ForeignBox","ForeignBox_classCallCheck","ForeignBox_possibleConstructorReturn","ForeignBox_getPrototypeOf","transliterationStore","TransliterationStore","handleTextAreaChange","foreignStore","textarea","HTMLTextAreaElement","minRows","maxRows","padding","lineHeight","textTransform","alerts","ImageUpload_defineProperty","_alerts","error_saving_image","limit_exceeded","unknown","wrong_format","ImageUpload","arguments","setAlert","ImageUpload_classCallCheck","allowedFormats","uploadAPI","makeRequest","token","filter","imageUrl","indexOf","push","ImageUpload_asyncToGenerator","imageFile","fileExtension","uploadResponse","toLocaleLowerCase","split","pop","abrupt","size","FormData","append","success","imgLink","Error","errors","t0","finish","_x","apply","join","CommentErrors","alertMessages","CommentBox_defineProperty","_alertMessages","blank_comment","blankComment","similar_comment","almostSame","long_comment","charlimits","repeat_comment","alreadySubmitted","spammer","spammerComment","commentAdded","moderation","moderationMessage","ip_blocked","blockedIp","email_blocked","blockedEmail","errorContactVuukle","CommentBox","CommentBox_classCallCheck","CommentBox_initializerDefineProperty","CommentBox_descriptor","CommentBox_descriptor2","CommentBox_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","hidden","getTextFromHTML","_value","commentHTML","trim","replace","lengthLimit","min","parseInt","Promise","resolve","reject","_this5","computedHTML","match","_objectSpread","SpamValidation","SpamValidationModel_classCallCheck","confirmed","getValue","SpamValidationModel_asyncToGenerator","response","perspectiveAPIs","spamModel","send","makeDevLog","limitFromUrl","searchParams","SpamValidationModel_createClass","ToxicityValidation","ToxicityValidationModel_descriptor","ToxicityValidationModel_applyDecoratedDescriptor","ToxicityValidationModel_class","ToxicityValidationModel_classCallCheck","checkingTimout","ToxicityValidationModel_asyncToGenerator","timeout","_args2","clearTimeout","getToxicity","setTimeout","ToxicityValidationModel_initializerDefineProperty","ToxicityValidationModel_createClass","prototype","configurable","enumerable","writable","initializer","_ref3","_callee3","_context3","toxicModel","_x2","EnglishEditBox","commentID","initialText","successCallback","EnglishEditBox_classCallCheck","EnglishEditBox_possibleConstructorReturn","EnglishEditBox_getPrototypeOf","ToxicityValidationModel","SpamValidationModel","EnglishEditBox_asyncToGenerator","Event","preSubmit","toxicityLimit","toString","spamComment","commentsApis","edit","t1","wrapper","getAttribute","p","ForeignEditBox","ForeignEditBox_classCallCheck","ForeignEditBox_possibleConstructorReturn","ForeignEditBox_getPrototypeOf","ForeignEditBox_asyncToGenerator","EditCommentBox","EditCommentBox_classCallCheck","EditCommentBox_possibleConstructorReturn","EditCommentBox_getPrototypeOf","store","EnglishBoxStore","editComment","ForeignBoxStore","EnglishBox","isAuthorized","components_ForeignBox","components_EditFormWrapper","close","isPasswordEntered","renderEditor","WriteBox","parentID","stores_EnglishBox_classCallCheck","stores_EnglishBox_possibleConstructorReturn","stores_EnglishBox_getPrototypeOf","EnglishBox_initializerDefineProperty","EnglishBox_descriptor","stores_EnglishBox_assertThisInitialized","SpamValidationStore","EnglishBox_descriptor2","commentingDisabled","ToxicityValidationStore","post","logCommentToPublisher","syncWithWP","logCommentToWordPress","stores_ForeignBox_classCallCheck","stores_ForeignBox_possibleConstructorReturn","stores_ForeignBox_getPrototypeOf","ForeignBox_asyncToGenerator","console","warn","documentElement","lang","updateTextareaValue","StyledDropDown","isArabic","ProfileRow","profile","showComments","signOut","marginBottom","slugify","myProfile","myComments","outline","boxShadow","avatar","isModerator","moderator","SocialAuthWrapper","SocialAuth","disqus","facebook","twitter","SocialButton","login","PrivacyCheckbox","htmlFor","PasswordAuth","PasswordAuth_defineProperty","components_PrivacyCheckbox","toggleView","signUp","NameInput","pattern","invalidName","PasswordLessAuth","signInWithoutPassword","components_NameInput","SignUp","SignUp_defineProperty","SSOButton","Auth","Auth_classCallCheck","Auth_possibleConstructorReturn","Auth_getPrototypeOf","showSignUp","renderVuukleAuth","withPassword","Auth_SignUp","Auth_PasswordAuth","PasswordlessAuth","signInWithSocial","withVuukle","openSSO","withSocial","facebookEnabled","googleEnabled","twitterEnabled","disqusEnabled","components_SocialAuth","SSO","AuthStyled","FormWrapper","openProfileModal","openModalWidgetProfile","isDisabled","commentsClosed","isCollapsed","isReply","expand","buttons","addComment","handleSubmit","components_ProfileRow","withSSO","isClicked","modules_Auth","HOCDecision","WriteComment_classCallCheck","WriteComment_possibleConstructorReturn","WriteComment_getPrototypeOf","parentId","components_FormWrapper","renderCommentBox","isDark","RepliesWrapper","CommentItem","getDropdownOptions","collapsed","collapse","isOwner","unshift","editMode","removeComment","open","report","renderCommentHeader","authorType","verticalAlign","_this$props","CommentItem_Wrapper","topAlert","modules_EditCommentBox_EditCommentBox","Comment","onUserClick","showCommenterProfile","TruncateText","seeMore","readMore","getCommentTextForRender","userPoints","point","likes","likeCount","dislikes","date","timeago","minimize","actions","Action","toggleLike","currentSessionLiked","Share","share","toggleReplyBox","reply","highlighted","bottomAlert","showReplyBox","WriteComment","commentItem","addReply","replies","Comments","_this$injected$commen","comments","moreAvailable","selectedComment","Loader","noComments","components_SortingRow","changeSorting","components_CommentItem","noCommentsInSorting","loadMoreComments","display","loadMore","StyledArticlesWrapper","articles","_ref$showMoreButton","showMoreButton","onMoreButtonClick","_ref$isVerticalCards","isVerticalCards","_ref$className","article","Card","articleId","heading","excerpt","articleAvatar","link","uri","linkRel","mode","commentCount","showMoreArticles","Articles","articlesStore","RecommendedArticles_Wrapper","recommendedStories","components_ArticlesWrapper","moreArticlesAvailable","stores","initialLoading","Object","initialLoadSuccess","SortingType","sortedBy","setArticlesFromServer","defaultTotCount","syncInitialLoadPorthole","App","index_module","containers_Header","CommentList_Comments","RecommendedArticles","components_Footer","HTML_NODE","BODY_NODE","MOUNT_NODE","getElementById","generateTheme","GlobalStyles","generateGlobalStyles","ReactDOM","styled_components_browser_esm","App_App","operamini","element","backgroundColor","insertBefore","firstChild","initializeListener","oldHeight","offsetHeight","setInterval","newHeight","parent","postMessage","JSON","stringify","sourceOrigin","origin","sourceWindowName","widget","log","Request","method","requireAuth","contentType","baseParams","_classCallCheck","xhr","XMLHttpRequest","params","mergedParams","obj","keys","serialize","setRequestHeader","onload","parse","onerror","statusText","onabort","abort","authAPIs","commentLikesAPIs","commentFlagAPIs","recommendAPIs","apiKey","host","pageSize","start","getByID","commentId","globalRecommendation","global","toLoad","spam","parentTimestamp","spamValue","Math","round","tag","tags","r","hashCode","s","isArray","changeStatus","commentIDs","me","register","ageRange","withoutPassword","PerspectiveAPI","windowProxy","Porthole","WindowProxy","location","path","authenticationObject","authorizeWithToken","authenticateUser","authorizeSilently","syncWidget","votes","voted","CommentsStore","getCommentDetailsByID","loadComment","shares","articleData","recommendations","openModalWidgetAuth","additionalParams","modalData","hideModal","openLinkInModal","vuukle_event","eventType","dateAdded","Date","toISOString","comment_ID","comment_agent","comment_approved","comment_author","comment_author_IP","comment_author_url","comment_content","comment_date","comment_date_gmt","comment_karma","comment_parent","comment_post_ID","comment_type","user_id","reportEvent","label","callSSOMethod","callSSO","syncRecommendations","sendEvents_syncInitialLoadPorthole","sendEvents_openModalWidgetAuth","sendEvents_openModalWidgetProfile","sendEvents_openLinkInModal","sendEvents_reportEvent","sendEvents_callSSOMethod","sendEvents_syncRecommendations","_applyDecoratedDescriptor","_class","selfRemove","openAuth","makeSafeHTML","getCommentTextOnly","removeHTMLTags","ownCommentVote","dislike","like","social","openWindow","shareLink","encodeURIComponent","substring","urlInstance","URL","reportResponse","confirm","flagQuestion","flaggedMessage","result","alreadyReported","pathOr","replyItem","createdTimestamp","decodeString","timeAgo","topComment","kFormatter","decodeURIComponent","reaction","_editMode","_createClass","set","enable","editingWithReplies","likeResponse","alreadyVoted","_callee4","_context4","store_descriptor","store_applyDecoratedDescriptor","store_class","store_classCallCheck","Latest","commentInstance","store_asyncToGenerator","loadComments","createCommentsWithRecursion","store_initializerDefineProperty","store_createClass","_getCommentDetailsByID","ID","createCommentWithReplies","removeFn","_CommentItem$replies","_toConsumableArray","_CommentItem$replies2","_this3$comments","_args4","UserStore","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","authResponse","siteList","includes","setUserApiKey","forgetUser","invalidLogin","removeUserApiKey","cookieToken","getToken","_token","saveToken","removeToken","createTitleExcerpt","_vuukle_utils__WEBPACK_IMPORTED_MODULE_0__","stores_translationStore__WEBPACK_IMPORTED_MODULE_1__","str","i","charCodeAt","monthsOptions","month","day","roundTime","val","String","abs","time","seconds","getTime","minutes","hours","days","toLocaleDateString","locale","timeAgoBuilder","truncateString","ArticlesStore","articlesToShow","articlesToShowBeforeExpand","slice","getOwnPropertyDescriptor","Cookies","env","SESSION_COOKIE_NAME","domain","expires","ramda_src_mergeDeepRight__WEBPACK_IMPORTED_MODULE_0__","ramda_src_mergeDeepRight__WEBPACK_IMPORTED_MODULE_0___default","services_urlSearchParams__WEBPACK_IMPORTED_MODULE_1__","initialCustomText","blankName","blankEmail","blankPassword","invalidEmail","to","showLess","signInWith","signInWithVuukle","signUpWithVuukle","messageTooLong","errorSubmitting","emailExists","signInQuestion","signUpQuestion","missingPassword","incorrectDetails","months","years","shareIcons","linkedin","liked","customTextFromUrl","mergeDeepRight","alertTimeout","alertValue","alertObj","AuthStore","isCookiesAllowed","openCORSModal","_ref2","validateFields","authTicket","_x3","_x4","_x5","_x6","_x7","authModal","oauthInterval","closed","clearInterval","network","callback","GOOGLE_LOGIN_LINK","TWITTER_LOGIN_LINK","DISQUS_LOGIN_LINK","FACEBOOK_LOGIN_LINK","oauthWindow","isValidName","isOffensive","isValidEmail","signInUser","cookie","cookiesAllowed","WidgetStore","author","refHost","darkMode","font","model","req","reqParams","requestedAttributes","PERSEPECTIVE_API_KEY","attributeScores","summaryScore","GIPHY_TOKEN","status","searchQuery","URLSearchParams","search"],"mappings":"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","file":"main.55fb102a.js","sourcesContent":["// tslint:disable\nimport {\n  Children,\n  Component,\n  EMPTY_OBJ,\n  Fragment,\n  PropTypes,\n  PureComponent,\n  // Internal methods\n  _CI,\n  _HI,\n  _M,\n  _MCCC,\n  _ME,\n  _MFCC,\n  _MP,\n  _MR,\n  _MT,\n  __render,\n  // Public methods\n  cloneElement,\n  cloneVNode,\n  createClass,\n  createComponentVNode,\n  createElement,\n  createFactory,\n  createFragment,\n  createPortal,\n  createRef,\n  createRenderer,\n  createTextVNode,\n  createVNode,\n  directClone,\n  findDOMNode,\n  findDOMfromVNode,\n  forwardRef,\n  getFlagsForElementVnode,\n  hydrate,\n  isValidElement,\n  linkEvent,\n  normalizeProps,\n  options,\n  render,\n  rerender,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  version,\n} from 'inferno-compat';\nimport createContext from 'create-inferno-context';\n\nconst unstable_batchedUpdates = null;\n\nexport {\n  Children,\n  Component,\n  EMPTY_OBJ,\n  Fragment,\n  PropTypes,\n  PureComponent,\n  // Internal methods\n  _CI,\n  _HI,\n  _M,\n  _MCCC,\n  _ME,\n  _MFCC,\n  _MP,\n  _MR,\n  _MT,\n  __render,\n  // Public methods\n  cloneElement,\n  cloneVNode,\n  createClass,\n  createComponentVNode,\n  createElement,\n  createFactory,\n  createFragment,\n  createPortal,\n  createRef,\n  createRenderer,\n  createTextVNode,\n  createVNode,\n  directClone,\n  findDOMNode,\n  findDOMfromVNode,\n  forwardRef,\n  getFlagsForElementVnode,\n  hydrate,\n  isValidElement,\n  linkEvent,\n  normalizeProps,\n  options,\n  render,\n  rerender,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  version,\n  createContext, // <-- Add it here\n  unstable_batchedUpdates,\n};\nexport default {\n  Children,\n  Component,\n  EMPTY_OBJ,\n  Fragment,\n  PropTypes,\n  PureComponent,\n  // Internal methods\n  _CI,\n  _HI,\n  _M,\n  _MCCC,\n  _ME,\n  _MFCC,\n  _MP,\n  _MR,\n  _MT,\n  __render,\n  // Public methods\n  cloneElement,\n  cloneVNode,\n  createClass,\n  createComponentVNode,\n  createElement,\n  createFactory,\n  createFragment,\n  createPortal,\n  createRef,\n  createRenderer,\n  createTextVNode,\n  createVNode,\n  directClone,\n  findDOMNode,\n  findDOMfromVNode,\n  forwardRef,\n  getFlagsForElementVnode,\n  hydrate,\n  isValidElement,\n  linkEvent,\n  normalizeProps,\n  options,\n  render,\n  rerender,\n  unmountComponentAtNode,\n  unstable_renderSubtreeIntoContainer,\n  version,\n  createContext, // <-- And here\n  unstable_batchedUpdates,\n};\n","export { default as authStore, AuthStore } from './authStore';\nexport { default as userStore, UserStore } from './userStore';\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  className?: string;\n}\n\n// tslint:disable max-line-length\nconst Footer: React.FunctionComponent<IProps> = ({ className }) => {\n  return (\n    <footer className={className}>\n      <div>\n        {/* Add Vuukle Link */}\n        <a\n          href=\"https://vuukle.com/comments-widget.html\"\n          target=\"_blank\"\n          rel=\"noopener nofollow\"\n          className=\"add-vuukle-link\"\n        >\n          <svg viewBox=\"0 0 24 24\">\n            <path d=\"M19,11H15V15H13V11H9V9H13V5H15V9H19M20,2H8A2,2 0 0,0 6,4V16A2,2 0 0,0 8,18H20A2,2 0 0,0 22,16V4A2,2 0 0,0 20,2M4,6H2V20A2,2 0 0,0 4,22H18V20H4V6Z\" />\n          </svg>\n          <span>{translation.footer.addVuukle}</span>\n        </a>\n        {/* Privacy Link */}\n        <a href=\"https://vuukle.com/terms.html\" target=\"_blank\" rel=\"noopener nofollow\">\n          <svg viewBox=\"0 0 24 24\">\n            <path d=\"M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z\" />\n          </svg>\n          <span>{translation.footer.privacy}</span>\n        </a>\n      </div>\n      <a href=\"https://vuukle.com\" target=\"_blank\" rel=\"noopener nofollow\" className=\"v-logo\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 686.04 216.06\">\n          <g>\n            <path d=\"M91.87,144.95l3.7-9c7.2-17.73,14.51-35.45,21.71-53.18C124.17,66,131,49.06,137.85,32.26c3.09-7.46,6.07-14.93,9.26-22.39A2.49,2.49,0,0,1,149,8.52c10-.1,20-.1,29.83-.1.21,0,.41.21.82.31a13.2,13.2,0,0,1-.62,1.87c-10.18,24.15-20.47,48.31-30.66,72.46-10.8,25.5-21.5,51-32.3,76.51L92.9,214.3c-.31.73-1,1.14-1.65,1.76-.51-.62-1.34-1.14-1.65-1.76-4.84-10.88-9.57-21.77-14.3-32.55L54.63,134.17Q41.36,103.69,28,73C18.93,52.37,10,31.64.93,10.91.62,10.28.41,9.56,0,8.63a17.38,17.38,0,0,1,2.16-.1c9.77-.1,19.55,0,29.22-.1a3.13,3.13,0,0,1,3.29,2.18c8.33,19.8,16.67,39.7,25,59.5q14.81,35.14,29.53,70.08c.72,1.66,1.34,3.21,2.06,4.87a1.3,1.3,0,0,1,.62-.1Z\" />\n            <path d=\"M512.2,213.26H478.68a3.34,3.34,0,0,1-3.3-1.76c-7.53-11.39-15.06-22.67-22.59-34-.31-.52-.72-1-1.13-1.66-.31.1-.52.1-.62.21C447.42,180,443.91,184,440.4,188a4.29,4.29,0,0,0-.52,2.38V213a14.45,14.45,0,0,1-1.86.21c-8.67,0-17.33-.1-26,0-1.75,0-2.27-.52-2.27-2.17q.15-104.35,0-208.7c0-1.76.52-2.38,2.37-2.38,8.25.1,16.61.1,25,.1,2.79,0,2.79,0,2.79,2.69v146.9c.72-.62,1.13-.93,1.44-1.24,10.21-12.11,20.32-24.12,30.43-36.23a4.34,4.34,0,0,1,3.82-1.86c9.9.1,19.81,0,29.71,0h2.79c-.83,1-1.34,1.66-1.86,2.28l-33,38.1c-1.24,1.35-1.34,2.28-.31,3.83,12.79,18.84,25.48,37.89,38.07,56.73a13.31,13.31,0,0,1,1.24,2Z\" />\n            <path d=\"M679.11,198.59c-3.29,2.58-6.38,5.48-10,7.75-12.46,8-26.25,9.72-40.66,8.58a58.41,58.41,0,0,1-27.38-8.58c-12-7.55-19.76-18.3-22.75-32.26s-1.54-27.4,5.56-39.91a50.55,50.55,0,0,1,29.54-24c15.54-5,30.88-4.34,45.39,3.52,12.87,6.93,20.48,18.09,24.5,31.95A72.94,72.94,0,0,1,686,168.71c0,2.07-.41,2.79-2.57,2.69H608.19a21.38,21.38,0,0,0,.72,2.58c3.5,9.72,10.91,14.58,20.79,15.61,11.12,1.34,21.41-1.24,30.16-8.58.72-.62,1.34-.93,2.26-.1,5.35,5.48,10.81,11,16.26,16.44a4.59,4.59,0,0,1,.72,1.24ZM608.6,150h45.6c-1.54-10.65-10.71-17.68-22.34-17.58-13.18.1-21.31,8.17-23.26,17.58Z\" />\n            <path d=\"M191.68,109.43v2.91c0,19.45-.1,38.91,0,58.26,0,6.14,1.86,11.55,7.34,15,3.83,2.39,8.07,2.91,12.51,2.7,7.65-.42,14.17-2.91,18.1-10.09,2.38-4.58,2.79-9.67,2.79-14.77.1-17,0-34,0-51v-2.81a17.3,17.3,0,0,1,2.07-.21c8.58,0,17.17.1,25.85,0,1.65,0,2.07.52,2.07,2.08v99.24c0,1.14,0,2.08-1.55,2.08h-27.3c-.31,0-.52-.21-1-.31V200.77a1.74,1.74,0,0,1-.52-.21,16.37,16.37,0,0,0-1.24,1.56c-5.48,7.59-13.13,11.34-22.13,12.8-7.76,1.14-15.31.94-22.65-1.87-12.2-4.47-19.44-13.52-22.44-25.9a78.46,78.46,0,0,1-2-17.06c-.21-19.35,0-38.7-.1-58,0-2,.41-2.6,2.48-2.6,8.48.1,17,0,25.44,0Z\" />\n            <path d=\"M355.71,201c-2.9,2.81-5.48,5.83-8.58,8.23-6,4.48-13,6-20.27,6.35-10.34.52-20-1.67-28.13-8.54a35.68,35.68,0,0,1-12-20.62,86.87,86.87,0,0,1-1.65-17.08c-.21-19.06-.1-38.11-.1-57.06,0-2.81,0-2.81,2.69-2.81,8.38,0,16.65.1,25,0,2,0,2.38.52,2.38,2.5,0,19.26,0,38.53.1,57.79a27.33,27.33,0,0,0,1.24,8.23c1.55,5.21,5.38,8.43,10.65,9.68a28,28,0,0,0,15.51-.62c8.89-3,12.31-9.89,13.13-18.64.1-1.77.1-3.64.1-5.41V109.64c.93-.1,1.55-.21,2.07-.21,8.69,0,17.27.1,25.85,0,1.65,0,2.17.42,2.17,2.08q-.16,49.67,0,99.34c0,1.67-.62,2.08-2.17,2.08-8.58-.1-17.27-.1-25.85,0-1.65,0-2.17-.52-2.07-2.19.1-2.71,0-5.41,0-8.12a8,8,0,0,0-.1-1.67Z\" />\n            <path d=\"M527.64.21A19.84,19.84,0,0,1,530,.1c8.28,0,16.55,0,24.83-.1,1.72,0,2.32.41,2.32,2.48V210.57c0,2-.4,2.69-2.42,2.59-8.28-.1-16.65-.1-25,0-1.51,0-2-.52-2-2.07.1-11.8,0-23.49,0-35.18V.21Z\" />\n          </g>\n        </svg>\n      </a>\n    </footer>\n  );\n};\n\nconst StyledFooter = styled(Footer)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  margin: 30px 0 10px;\n  padding-top: 10px;\n  border-top: 1px solid #e7e9ed;\n  a {\n    display: inline-flex;\n    align-items: center;\n    font-weight: bold;\n  }\n\n  > div {\n    font-size: 0.8rem;\n    a {\n      color: ${(props) => props.theme.mutedColor};\n      svg {\n        fill: ${(props) => props.theme.mutedColor};\n      }\n      &:last-child {\n        margin-left: 5px;\n      }\n    }\n    svg {\n      margin-right: 2px;\n      width: 15px;\n      height: 15px;\n      fill: ${(props) => props.theme.primaryColor};\n    }\n  }\n\n  > div,\n  .v-logo {\n    margin-bottom: 5px;\n  }\n\n  .v-logo {\n    svg {\n      width: 50px;\n      fill: ${(props) => props.theme.mutedColor};\n    }\n    &:hover {\n      svg {\n        fill: ${(props) => props.theme.primaryColor};\n      }\n    }\n  }\n\n  @media (max-width: 320px) {\n    .add-vuukle-link {\n      display: none;\n    }\n  }\n\n  @media (max-width: 200px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport default StyledFooter;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '@vuukle/button';\nimport Tag from '@vuukle/tag';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  recommended: boolean;\n  recommends: number;\n  onClick: () => void;\n  inProgress?: boolean;\n\n  className?: string;\n}\n\n/**\n * @name RecommendButton\n * Button to recommend article.\n * Used in the header of the widget.\n * @render React\n * @example <RecommendButton recommended={false} recommends={15} onClick={() => alert('Recommended')} />\n */\nconst RecommendButton: React.FunctionComponent<IProps> = ({\n  recommended,\n  recommends,\n  className,\n  inProgress = false,\n  onClick,\n}) => {\n  return (\n    <Button sm={true} type=\"subtle\" className={className} onClick={onClick} active={recommended} loading={inProgress}>\n      <span role=\"img\" aria-label=\"heart\">\n        ❤️\n      </span>\n      <span>{recommended ? translation.common.recommended : translation.common.recommend}</span> <Tag>{recommends}</Tag>\n    </Button>\n  );\n};\n\nconst StyledRecommendButton = styled(RecommendButton)<IProps>`\n  span {\n    text-transform: capitalize !important;\n    transition: all 0.2s;\n  }\n  span[role='img'] {\n    margin-right: 2px;\n    opacity: ${props => (props.recommended ? 1 : 0.5)};\n  }\n  &:hover {\n    span[role='img'] {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default StyledRecommendButton;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { CommentsStore } from 'modules/CommentList/store';\nimport { WidgetStore } from 'stores/widgetStore';\n\nimport RecommendButton from 'components/RecommendButton';\nimport translation from 'stores/translationStore';\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 5px;\n  margin-bottom: 15px;\n  margin-top: 5px;\n  border-bottom: 1px solid rgba(150, 150, 150, 0.2);\n  > div:first-child {\n    font-weight: 600;\n  }\n`;\n\ninterface IProps {\n  className?: string;\n}\n\ninterface IInjectedProps {\n  commentsStore: CommentsStore;\n  widgetStore: WidgetStore;\n}\n\n@inject('commentsStore', 'widgetStore')\n@observer\nclass Header extends React.Component<IProps> {\n  get injected() {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  public render() {\n    if (this.injected.commentsStore.loading && this.injected.commentsStore.totalComments <= 0) {\n      return null;\n    }\n\n    return (\n      <Wrapper className={this.props.className}>\n        <div>\n          {this.injected.commentsStore.totalComments === 1\n            ? translation.commentText.when1\n            : translation.commentText.whenX}{' '}\n          ({this.injected.commentsStore.totalComments})\n        </div>\n        <div>\n          <RecommendButton\n            recommended={this.injected.widgetStore.isRecommended}\n            recommends={this.injected.widgetStore.recommendCount}\n            onClick={this.injected.widgetStore.recommend}\n            inProgress={this.injected.widgetStore.recommendInProgress}\n          />\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Dropdown from '@vuukle/dropdown';\nimport Icon from '@vuukle/icon';\nimport { Menu } from '@vuukle/menu';\nimport { TabItem, Tabs } from '@vuukle/tabs';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  active: string;\n  onSelect: (active: string) => void;\n\n  className?: string;\n}\n\nconst SortingRow: React.FunctionComponent<IProps> = ({ active, className, onSelect }) => {\n  return (\n    <Tabs className={className} active={active} onSelect={onSelect}>\n      <span className=\"v-sorting-header\">{translation.sorting.sortBy} </span>\n      <TabItem name=\"get_latest\" className=\"v-t-pane\">\n        {translation.sorting.latest /* Latest */}\n      </TabItem>\n      <TabItem name=\"get_most_up_votes\" className=\"v-t-pane\">\n        {translation.sorting.mostLiked /* Best */}\n      </TabItem>\n      <TabItem name=\"get_top_comment\" className=\"v-t-pane\">\n        {translation.sorting.editorsPick /* Editor's Pick */}\n      </TabItem>\n      <Dropdown\n        align=\"right\"\n        className={active === 'get_most_replied' || active === 'get_reverse_chrono' ? `active v-t-pane` : `v-t-pane`}\n        menu={\n          <Menu>\n            <Menu.Item\n              onClick={() => onSelect('get_top_comment')}\n              active={active === 'get_top_comment'}\n              className=\"v-editors-pick\"\n            >\n              {translation.sorting.editorsPick /* Editor's Pick */}\n            </Menu.Item>\n            <Menu.Item onClick={() => onSelect('get_most_replied')} active={active === 'get_most_replied'}>\n              {translation.sorting.mostReplied /* Most Replies */}\n            </Menu.Item>\n            <Menu.Item onClick={() => onSelect('get_reverse_chrono')} active={active === 'get_reverse_chrono'}>\n              {translation.sorting.oldest /* Oldest */}\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <a href=\"#\">\n          {translation.sorting.more /* More */} <Icon type=\"caret\" />\n        </a>\n      </Dropdown>\n    </Tabs>\n  );\n};\n\nconst StyledSortingRow = styled(SortingRow)`\n  .v-sorting-header {\n    margin-right: 5px;\n  }\n  .v-editors-pick {\n    display: none;\n  }\n\n  @media (max-width: 400px) {\n    .v-sorting-header,\n    .v-t-pane:nth-child(4) {\n      display: none;\n    }\n\n    .v-editors-pick {\n      display: block;\n    }\n  }\n`;\n\nexport default StyledSortingRow;\n","import * as React from 'react';\n\nimport Input from '@vuukle/input';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  id: string;\n  value: string;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n}\n\nconst EmailInput: React.FunctionComponent<IProps> = ({ id, value, onChange, disabled = false }) => (\n  <Input\n    type=\"email\"\n    value={value}\n    placeholder={translation.common.email}\n    dir=\"auto\"\n    name=\"email\"\n    id={`email-${id}`}\n    onChange={onChange}\n    required={true}\n    disabled={disabled}\n  />\n);\n\nexport default EmailInput;\n","import * as React from 'react';\n\nimport Input from '@vuukle/input';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  id: string;\n  value: string;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  minLength?: number;\n}\n\nconst PasswordInput: React.FunctionComponent<IProps> = ({ id, value, onChange, minLength = 5 }) => (\n  <Input\n    type=\"password\"\n    name=\"password\"\n    id={`password-${id}`}\n    placeholder={translation.common.password}\n    minLength={minLength}\n    maxLength={32}\n    onChange={onChange}\n    required={true}\n  />\n);\n\nexport default PasswordInput;\n","import styled from 'styled-components';\n\nexport default styled.form`\n  input[type='text'],\n  input[type='email'],\n  input[type='password'],\n  > div {\n    display: block;\n    margin-bottom: 10px;\n  }\n  input[type='checkbox'] {\n    margin: 0 5px;\n  }\n`;\n","/**\n * @file Contains protected auth component. This component is used to show authorization module\n * for users that want to perform action that requires password authorization, but user is authenticated\n * without password.\n */\nimport uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport EmailInput from './components/EmailInput';\nimport PasswordInput from './components/PasswordInput';\nimport StyledForm from './components/StyledForm';\n\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  onClose: () => void;\n}\n\ninterface IState {\n  password: string;\n}\n\n/** MobX Store injected props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\ninterface IInjectedProps {\n  authStore: AuthStore;\n  userStore: UserStore;\n}\n\n@inject('authStore', 'userStore')\n@observer\nclass ProtectedAuth extends React.Component<IProps, IState> {\n  private readonly id: string = uniqueId('pwd');\n  public readonly state: Readonly<IState> = {\n    password: '',\n  };\n\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   * @return {Props & InjectedProps}\n   */\n  public get injected(): IProps & IInjectedProps {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  protected onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    this.injected.authStore\n      .signIn((this.injected.userStore.details && this.injected.userStore.details.email) || '', this.state.password)\n      .then(() => {\n        if (!this.injected.authStore.error) {\n          this.setState({ password: '' });\n        }\n      });\n  };\n\n  /** Handles input change and writes to store based on input name attribute */\n  private handleInputChange = (e: React.FormEvent<HTMLInputElement>): void =>\n    this.setState({ [e.currentTarget.name as 'password']: e.currentTarget.value });\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit}>\n        <div>\n          <p>{translation.messages.protectedAction}</p>\n          <EmailInput\n            id={this.id}\n            value={(this.injected.userStore.details && this.injected.userStore.details.email) || ''}\n            onChange={this.handleInputChange}\n            disabled={true}\n          />\n          <PasswordInput id={this.id} value={this.state.password} minLength={0} onChange={this.handleInputChange} />\n          {/* Errors Alert */}\n          {error && (\n            <Alert type=\"error\" onClose={closeAlert}>\n              {this.injected.authStore.error}\n            </Alert>\n          )}\n          {/* Submit Button */}\n          <div style={{ textAlign: 'right' }}>\n            <p>\n              <span style={{ margin: '0 5px' }}>\n                Forgot password?{' '}\n                <a href=\"https://user.vuukle.com/forgot-password\" target=\"_blank\" rel=\"nofollow\">\n                  {translation.messages.passwordReset}\n                </a>\n              </span>\n            </p>\n            <Button\n              disabled={inProgress}\n              htmlType=\"button\"\n              onClick={this.props.onClose}\n              type=\"subtle\"\n              style={{ margin: '0 5px' }}\n            >\n              {translation.common.cancel}\n            </Button>\n            <Button loading={inProgress} htmlType=\"submit\">\n              {translation.common.signIn}\n            </Button>\n          </div>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default ProtectedAuth;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Alert from '@vuukle/alert';\nimport Avatar from '@vuukle/avatar';\nimport Button from '@vuukle/button';\nimport ProtectedAuth from 'modules/Auth/ProtectedAuth';\n\nimport { IAlert } from 'stores/models/Alert';\n\nimport CommentModel from 'modules/CommentList/store/CommentItem';\ninterface IProps {\n  comment: CommentModel;\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  alert: IAlert | null;\n  closeAlert: () => void;\n  inProgress: boolean;\n  closeEditor: () => void;\n  children: any;\n  authenticatedWithPassword: boolean;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  > div:first-child {\n    flex: 0 0 40px;\n    margin-right: 10px;\n  }\n\n  > div:last-child {\n    flex: 1 1 100%;\n    max-width: calc(100% - 50px);\n  }\n`;\n\nclass EditFormWrapper extends React.PureComponent<IProps> {\n  /** Renders Alert */\n  private renderAlert = (): React.ReactElement | null => {\n    if (!this.props.alert) {\n      return null;\n    }\n    return (\n      <Alert type={this.props.alert.type} onClose={this.props.closeAlert}>\n        {this.props.alert.message}\n      </Alert>\n    );\n  };\n\n  /** Renders available actions for users authenticated with password, otherwise we show auth */\n  private renderAuthenticatedActions = () => {\n    return (\n      <div style={{ textAlign: 'right' }}>\n        <Button\n          disabled={this.props.inProgress}\n          onClick={this.props.closeEditor}\n          htmlType=\"button\"\n          type=\"subtle\"\n          style={{ margin: '0 5px' }}\n        >\n          Cancel\n        </Button>\n        <Button loading={this.props.inProgress} htmlType=\"submit\">\n          Save Edit\n        </Button>\n      </div>\n    );\n  };\n\n  public render() {\n    return (\n      <Wrapper>\n        <div>\n          <Avatar\n            src={this.props.comment.data.pictureUrl}\n            name={this.props.comment.data.name}\n            hash={this.props.comment.data.userId}\n          />\n        </div>\n        <div>\n          <form onSubmit={this.props.onSubmit}>\n            {this.props.children}\n            <div style={{ marginTop: '10px' }}>\n              {this.renderAlert()}\n              {/** Render authenticated actions only and only if user has been authorized using password. Otherwise we show protected auth module */}\n              {this.props.authenticatedWithPassword && this.renderAuthenticatedActions()}\n            </div>\n          </form>\n          {!this.props.authenticatedWithPassword && <ProtectedAuth onClose={this.props.closeEditor} />}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default EditFormWrapper;\n","import darken from 'polished/lib/color/darken';\nimport styled from 'styled-components';\n\ninterface IProps {\n  focused: boolean;\n  children?: any;\n  language?: string;\n  toggleLanguage?: () => void;\n  charsLimit?: number;\n}\n\nconst TextareaFooterWrapper = styled('div')<IProps>`\n  min-height: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 7px 10px;\n  margin: 0;\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.mutedColor};\n  background-color: ${(props) => darken(0.02, props.theme.input.background)};\n  border: 1px solid ${(props) => (props.focused ? props.theme.input.active.border : props.theme.input.border)};\n  border-top: 0;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n`;\n\nexport default TextareaFooterWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  className?: string;\n  /**\n   * Allow Editor to be changed or not\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * onChange handler - called once user type anything\n   * @default undefined\n   */\n  onChange?: (e: React.KeyboardEvent<HTMLDivElement>) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLDivElement>) => void;\n  /**\n   * Click handler\n   * @default undefined\n   */\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  /**\n   * Paste event handler (ctrl/cmd + v)\n   * @default undefined\n   */\n  onPaste?: (e: React.ClipboardEvent<HTMLDivElement>) => void;\n  /**\n   * Same as placeholder for input\n   * @default ''\n   */\n  placeholder?: string;\n  /** ID of the div */\n  id: string;\n  /**\n   * Number of rows inside textarea\n   * @default 2\n   */\n  rows?: number;\n  /** HTML Values */\n  value: string;\n}\n\nconst StyledEditor = styled.div<{ rows?: number }>`\n  display: block;\n  padding: 15px;\n  text-align: left;\n  min-height: ${(props) => 30 + (props.rows || 2) * 16 + 'px'};\n  max-height: 300px;\n  overflow-y: auto;\n  background: ${(props) => props.theme.input.background};\n  border-radius: 4px 4px 0 0;\n  &:focus,\n  &:active {\n    outline: none;\n  }\n  &:empty:before {\n    content: attr(placeholder);\n    display: block;\n    color: ${(props) => props.theme.mutedColor};\n  }\n`;\n\ninterface IComponentProps extends IProps {\n  forwardRef: React.Ref<any>;\n}\n\nclass Editor extends React.PureComponent<IComponentProps> {\n  public static defaultProps: Partial<IProps> = {\n    disabled: false,\n    placeholder: '',\n    rows: 2,\n  };\n\n  public componentDidMount(): void {\n    document.execCommand('defaultParagraphSeparator', false, 'p');\n  }\n\n  /**\n   * Handle pasting of text and paste it as 'text/plain'\n   * @param e\n   */\n  private onPaste = (e: React.ClipboardEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text/plain');\n\n    document.execCommand('insertText', false, text);\n\n    if (this.props.onPaste) {\n      this.props.onPaste(e);\n    }\n  };\n\n  /**\n   * Handle key down in the editor\n   * @param {React.KeyboardEvent<HTMLDivElement>} e\n   */\n  private onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    const callUpperHandler = (): void => (this.props.onKeyDown ? this.props.onKeyDown(e) : undefined);\n\n    /** Prevent creation of new divs on enter */\n    if (e.keyCode === 13) {\n      // e.preventDefault();\n      // document.execCommand('insertHTML', false, '<br/><br/>');\n      callUpperHandler();\n      return false;\n    }\n\n    callUpperHandler();\n    return false;\n  };\n\n  private onInput = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (!e.currentTarget.innerHTML) {\n      // document.execCommand('formatBlock', false, 'p');\n    }\n\n    return this.props.onChange ? this.props.onChange(e) : undefined;\n  };\n\n  public render() {\n    return (\n      <StyledEditor\n        className=\"editor\"\n        contentEditable={!this.props.disabled}\n        onInput={this.onInput}\n        ref={this.props.forwardRef}\n        id={this.props.id}\n        onFocus={this.props.onFocus}\n        onBlur={this.props.onBlur}\n        placeholder={this.props.placeholder}\n        onClick={this.props.onClick}\n        onPaste={this.onPaste}\n        onKeyDown={this.onKeyDown}\n        rows={this.props.rows}\n        dangerouslySetInnerHTML={{ __html: this.props.value }}\n      />\n    );\n  }\n}\n\nexport default React.forwardRef((props: IProps, ref) => <Editor {...props} forwardRef={ref} />);\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  /** Image url */\n  image: string;\n  /** On click action */\n  onClick: () => void;\n}\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst GifWrapper = styled.div`\n  margin-bottom: 5px;\n  width: 49%;\n  overflow: hidden;\n  cursor: pointer;\n  &:hover {\n    background: black;\n  }\n  &:hover ${Image} {\n    opacity: 0.9;\n  }\n`;\n\nconst GifItem = ({ image, onClick }: IProps) => (\n  <GifWrapper onClick={onClick}>\n    <Image src={image} />\n  </GifWrapper>\n);\n\nexport default GifItem;\n","import debounce from 'lodash/debounce';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Input from '@vuukle/input';\n\nimport GifItem from './GifItem';\nimport { getSearchGIFs, getTrendingGIFs, IGIFItem } from './utils';\n\ninterface IProps {\n  onSelect: (GIFLink: string) => void;\n}\n\ninterface IState {\n  GIFs: IGIFItem[];\n  searchGIFs: IGIFItem[];\n  searchValue: string;\n}\n\nconst SearchResult = styled.div`\n  margin-top: 5px;\n  margin-right: -5px;\n  height: 250px;\n  overflow-y: auto;\n  > p {\n    font-size: 0.8em;\n    color: ${(props) => props.theme.mutedColor};\n    text-transform: uppercase;\n    font-weight: bold;\n    margin: 0 0 10px;\n  }\n  > div {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n`;\n\nclass GifPicker extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      /** Trending GIFs from Giphy */\n      GIFs: [],\n      /** GIFs based on search value from Giphy */\n      searchGIFs: [],\n      /** Search input value */\n      searchValue: '',\n    };\n  }\n\n  /**\n   * Lifecycle method.\n   * componentDidMount() is invoked immediately after a component is mounted (inserted into the tree).\n   */\n  public componentDidMount() {\n    this.getTrending();\n  }\n\n  /**\n   * Search input change handler\n   * @param {React.FormEvent<HTMLInputElement>} e - Input event\n   * @return {void}\n   */\n  private onSearchInputChange = (e: React.FormEvent<HTMLInputElement>) =>\n    this.setState({ searchValue: e.currentTarget.value || '' }, () => this.searchGIFs());\n\n  /**\n   * Get trending GIFs and update state\n   * @return {Promise<void>}\n   */\n  private getTrending = async (): Promise<void> => {\n    const trendingResponse = await getTrendingGIFs();\n    this.setState({ GIFs: trendingResponse.data });\n  };\n\n  /**\n   * Get GIFs based on search input value. If it's empty then get trending GIFs.\n   * @return {Promise<void>}\n   */\n  private searchGIFs = debounce(async (): Promise<void> => {\n    if (this.state.searchValue) {\n      const searchResponse = await getSearchGIFs(this.state.searchValue);\n      this.setState({ searchGIFs: searchResponse.data });\n    } else {\n      this.getTrending().then(() => this.setState({ searchGIFs: [] }));\n    }\n  }, 1000);\n\n  /** Renders GIF items from the Giphy response */\n  private renderGifItems = (GIFs: IGIFItem[]): JSX.Element[] =>\n    GIFs.map((gif: IGIFItem) => (\n      <GifItem\n        key={gif.id}\n        image={gif.images.fixed_height_small.url}\n        onClick={() => this.props.onSelect(gif.images.downsized_medium.url)}\n      />\n    ));\n\n  public render() {\n    /** Select GIFs array to render based on search input */\n    const GIFs = this.state.searchGIFs.length > 0 ? this.state.searchGIFs : this.state.GIFs;\n\n    return (\n      <div>\n        <div>\n          <Input\n            placeholder=\"Search GIFs via Giphy ...\"\n            value={this.state.searchValue}\n            onChange={this.onSearchInputChange}\n          />\n        </div>\n        <SearchResult>\n          <p>{this.state.searchGIFs.length ? 'SEARCH RESULTS' : 'TRENDING'}</p>\n          <div>{this.renderGifItems(GIFs)}</div>\n        </SearchResult>\n      </div>\n    );\n  }\n}\n\nexport default GifPicker;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IButtonProps {\n  active?: boolean;\n  disabled?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  /** Needed for rendering element as <label> */\n  for?: string;\n}\n\nexport const Button = styled.button<IButtonProps>`\n  -webkit-appearance: none !important;\n  outline: none;\n  border: none;\n  background: transparent;\n  transition: color 0.2s;\n  cursor: pointer;\n  margin: 0;\n  padding: 0 5px;\n\n  &:hover {\n    svg {\n      fill: ${(props) => props.theme.textColor};\n      transition: all 0.3s;\n    }\n  }\n\n  svg {\n    max-width: 20px;\n    width: 100%;\n    fill: ${(props) => props.theme.mutedColor};\n    ${(props) => props.disabled && `fill: ${props.theme.mutedColor} !important`};\n  }\n\n  //min-width: 20px;\n\n  ${(props) =>\n    props.active &&\n    `\n    color: ${props.theme.textColor};\n    font-weight: bold;\n    svg {\n      fill: ${props.theme.textColor};\n    }\n  `};\n\n  ${(props) => props.disabled && `cursor: not-allowed;`}\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: row;\n  height: 30px;\n  background: ${(props) => props.theme.input.background};\n  padding: 0 4px;\n  border: 0;\n  border-top: 1px dashed ${(props) => props.theme.input.border};\n  align-items: center;\n`;\n\nexport interface IOption {\n  onClick: () => void;\n  icon: string;\n  title?: string;\n  active?: boolean;\n}\n\ninterface IProps {\n  children?: any;\n  options: IOption[];\n}\n\nconst Options = ({ options, children }: IProps) => {\n  return (\n    <Wrapper>\n      {children}\n      <span>&nbsp;</span>\n      {options.map((option) => (\n        <Button\n          dangerouslySetInnerHTML={{ __html: option.icon }}\n          onClick={option.onClick}\n          active={option.active}\n          title={option.title}\n          type=\"button\"\n          key={option.title}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default Options;\n","import React from 'react';\n\nconst GIFIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 439.875 439.875\">\n    <path d=\"M76.5,191.25v57.375c0,21.037,17.212,38.25,38.25,38.25h57.375v-15.3V229.5v-19.125H114.75V229.5H153v38.25h-38.25 c-11.475,0-19.125-7.65-19.125-19.125V191.25c0-11.475,7.65-19.125,19.125-19.125h57.375V153H114.75 C93.712,153,76.5,170.212,76.5,191.25z\" />\n    <polygon points=\"191.25,172.125 210.375,172.125 210.375,267.75 191.25,267.75 191.25,286.875 248.625,286.875 248.625,267.75 229.5,267.75 229.5,172.125 248.625,172.125 248.625,153 191.25,153\" />\n    <path d=\"M382.5,95.625H57.375C24.862,95.625,0,120.487,0,153v133.875c0,32.513,24.862,57.375,57.375,57.375H382.5 c32.513,0,57.375-24.862,57.375-57.375V153C439.875,120.487,415.013,95.625,382.5,95.625z M420.75,286.875 c0,21.037-17.213,38.25-38.25,38.25H57.375c-21.038,0-38.25-17.213-38.25-38.25V153c0-21.038,17.212-38.25,38.25-38.25H382.5 c21.037,0,38.25,17.212,38.25,38.25V286.875z\" />\n    <polygon points=\"267.75,286.875 286.875,286.875 286.875,229.5 344.25,229.5 344.25,210.375 286.875,210.375 286.875,172.125 363.375,172.125 363.375,153 267.75,153\" />\n  </svg>\n);\n\nexport default GIFIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Menu } from '@vuukle/menu';\nimport GIFPicker from 'modules/GifPicker';\nimport { Button } from '../Options';\nimport Icon from './Icon';\n\ninterface IProps {\n  onSelect: (GIFUrl: string) => void;\n  disabled?: boolean;\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  .menu {\n    position: absolute;\n    left: 0;\n    top: 20px;\n    width: 350px;\n    padding: 10px;\n  }\n`;\n\nclass GIFDropdown extends React.Component<IProps, { displayMenu: boolean }> {\n  public wrapperRef: React.RefObject<any> = React.createRef();\n  public state = { displayMenu: false };\n\n  public showMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => document.addEventListener('click', this.hideMenu));\n  };\n\n  public hideMenu = (event: React.MouseEvent<HTMLButtonElement> | MouseEvent): void => {\n    const button = this.wrapperRef.current.querySelector('button');\n    if (\n      (this.wrapperRef.current && !this.wrapperRef.current.contains(event.target)) ||\n      (button && button.contains(event.target))\n    ) {\n      this.setState({ displayMenu: false }, () => document.removeEventListener('click', this.hideMenu));\n    }\n  };\n\n  /** Render Dropdown Menu once it's opened */\n  private renderMenu = () => (\n    <Menu className=\"menu\">\n      <GIFPicker\n        onSelect={(GIFLink) => {\n          this.setState({ displayMenu: false });\n          this.props.onSelect(GIFLink);\n        }}\n      />\n    </Menu>\n  );\n\n  public render() {\n    return (\n      <Wrapper ref={this.wrapperRef}>\n        <Button type={'button'} onClick={this.showMenu} disabled={this.props.disabled}>\n          <Icon />\n        </Button>\n\n        {/** GIF picker component */}\n        {this.state.displayMenu && this.renderMenu()}\n      </Wrapper>\n    );\n  }\n}\n\nexport default GIFDropdown;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Link from '@vuukle/link';\n\nconst EntityItem = styled.div`\n  display: inline-block;\n  max-width: 300px;\n  padding: 10px;\n  text-align: center;\n`;\n\ninterface IProps {\n  /** Image remove action */\n  onRemove: (url: string) => void;\n  /** Image url to display */\n  url: string;\n}\n\n/**\n * Renders added comment image\n */\nexport function ImageEntity({ onRemove, url }: IProps) {\n  return (\n    <EntityItem>\n      <img src={url} style={{ width: '100%', height: 'auto' }} alt=\"Comment image\" />\n      <div>\n        <Link light={true} onClick={() => onRemove(url)}>\n          Remove\n        </Link>\n      </div>\n    </EntityItem>\n  );\n}\n\nexport default ImageEntity;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport ImageEntity from './ImagePreview';\n\ninterface IProps {\n  /** Image remove action */\n  items: string[];\n  /** Function to remove entity */\n  onRemove: (url: string) => void;\n}\n\n/**\n * Renders added images to comment\n */\nexport function ImagesPreview({ onRemove, items }: IProps) {\n  return (\n    <div>\n      {items.map((url: string) => (\n        <ImageEntity onRemove={onRemove} key={url} url={url} />\n      ))}\n    </div>\n  );\n}\n\nexport default observer(ImagesPreview);\n","import * as React from 'react';\n\nconst CameraIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 333.668 333.668\">\n      <path\n        d=\"M295.101,298.649H38.561C17.295,298.649,0,281.354,0,260.088V103.703c0-21.266,17.295-38.561,38.561-38.561h52.347\n\t\tl4.582-15.457c1.87-8.458,9.602-14.666,18.696-14.666h105.297c8.837,0,16.658,6.176,18.728,14.743l0.122,0.527l4.177,14.852h52.597\n\t\tc21.266,0,38.561,17.295,38.561,38.561v156.384C333.662,281.354,316.361,298.649,295.101,298.649z M38.561,77.996\n\t\tc-14.178,0-25.707,11.53-25.707,25.707v156.384c0,14.178,11.53,25.707,25.707,25.707h256.54c14.178,0,25.707-11.53,25.707-25.707\n\t\tV103.703c0-14.178-11.53-25.707-25.707-25.707h-62.327l-7.037-25.097c-0.649-2.918-3.278-5.032-6.26-5.032H114.179\n\t\tc-3.027,0-5.598,2.069-6.26,5.039l-7.429,25.09H38.561z M166.841,259.798c-44.981,0-81.576-36.588-81.576-81.563\n\t\tc0-44.981,36.594-81.569,81.576-81.569c44.969,0,81.557,36.594,81.557,81.569C248.397,223.204,211.809,259.798,166.841,259.798z\n\t\t M166.841,109.513c-37.893,0-68.722,30.823-68.722,68.716s30.83,68.709,68.722,68.709c37.886,0,68.703-30.823,68.703-68.709\n\t\tC235.543,140.336,204.72,109.513,166.841,109.513z M286.804,101.852c-6.555,0-11.858,5.315-11.858,11.858\n\t\tc0,6.549,5.302,11.857,11.858,11.857c6.549,0,11.851-5.309,11.851-11.857C298.649,107.167,293.346,101.852,286.804,101.852z\"\n      />\n    </svg>\n  );\n};\n\nexport default CameraIcon;\n","import uniqueId from 'lodash/uniqueId';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { Button } from '../Options';\nimport CameraIcon from './CameraIcon';\n\ninterface IProps {\n  className?: string;\n  onFileInputChange: (e: any) => void;\n  disabled?: boolean;\n}\n\nconst UploadButton = ({ className, onFileInputChange, disabled }: IProps) => {\n  const id = uniqueId('upload_');\n  return (\n    <div className={className}>\n      <Button type=\"button\" as=\"label\" for={id} style={{ margin: '0 5px' }} disabled={disabled}>\n        <CameraIcon />\n      </Button>\n      <input\n        type=\"file\"\n        name={id}\n        accept=\".png,.jpg,.jpeg,.bmp\"\n        id={id}\n        onChange={onFileInputChange}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nconst StyledUploadButton = styled(UploadButton)`\n  position: relative;\n  overflow: hidden;\n\n  input[type='file'] {\n    font-size: 100px;\n    position: absolute;\n    left: 0;\n    top: 0;\n    opacity: 0;\n    visibility: hidden;\n    cursor: pointer;\n  }\n`;\n\nexport default StyledUploadButton;\n","/** Detect Tag in a content editable */\nexport const whichTag = (tagName: string) => {\n  const sel = window.getSelection();\n  let containerNode: Node | null = null;\n  let tagFound = false;\n  tagName = tagName.toUpperCase();\n\n  if (sel.rangeCount > 0) {\n    containerNode = sel.getRangeAt(0).commonAncestorContainer;\n  }\n\n  while (containerNode) {\n    if (containerNode.nodeType === 1 && (containerNode as HTMLElement).tagName === tagName) {\n      tagFound = true;\n      containerNode = null;\n      break;\n    } else if ((containerNode as HTMLElement).contentEditable === 'true') {\n      tagFound = false;\n      break;\n    } else {\n      containerNode = containerNode.parentNode;\n    }\n  }\n\n  return tagFound;\n};\n","import { action, computed, decorate, observable } from 'mobx';\nimport { createRef, RefObject } from 'react';\n\nimport { BoldIcon, CodeIcon, ItalicIcon, QuoteIcon, UlIcon, UnderlineIcon } from '../components/Icons';\nimport { whichTag } from '../utils';\n\nexport interface IOption {\n  icon: any;\n  onClick: () => void;\n  title?: string;\n  active?: boolean;\n}\n\ninterface IFormattingState {\n  bold: boolean;\n  italic: boolean;\n  underline: boolean;\n  pre: boolean;\n  ul: boolean;\n  blockquote: boolean;\n}\n\nclass Formatting {\n  /** Ref to the contentEditable element */\n  public ref: RefObject<HTMLDivElement> = createRef<HTMLDivElement>();\n  /** State of the formatting things. i.e. bold: active/inactive etc. */\n  public formattingState: IFormattingState;\n  /** IE/Edge detection */\n  private isEdgeBrowser: boolean = (document as any).documentMode || /Edge/.test(navigator.userAgent);\n\n  constructor() {\n    this.formattingState = this.getFormattingState();\n  }\n\n  @action\n  private getFormattingState = (): IFormattingState => ({\n    blockquote: whichTag('blockquote'),\n    bold: document.queryCommandState('bold'),\n    italic: document.queryCommandState('italic'),\n    pre: whichTag('pre'),\n    ul: document.queryCommandState('insertUnorderedList'),\n    underline: document.queryCommandState('underline'),\n  });\n\n  @action\n  private focus = () => {\n    if (this.ref.current) {\n      this.ref.current.focus();\n    }\n  };\n\n  public updateFormattingState = () => (this.formattingState = this.getFormattingState());\n\n  @action\n  private formatText = (commandId: 'bold' | 'italic' | 'underline') => {\n    this.focus();\n\n    document.execCommand(commandId, false);\n    this.formattingState = this.getFormattingState();\n\n    this.focus();\n  };\n\n  // TODO: mb create a decorator\n  // TODO: improve logic\n  private formatBlock = (command: 'blockquote' | 'pre' | 'p'): void => {\n    this.focus();\n\n    // Firefox checking\n    if (whichTag('blockquote')) {\n      document.execCommand('outdent', false);\n      if (command === 'blockquote') {\n        return;\n      }\n    }\n\n    if (document.queryCommandState('insertUnorderedList')) {\n      document.execCommand('insertUnorderedList');\n    }\n\n    if (whichTag(command)) {\n      document.execCommand('formatBlock', false, 'p');\n    } else {\n      if (document.queryCommandValue('formatBlock') && document.queryCommandValue('formatBlock') !== 'Normal') {\n        // Edge returns 'Normal' for formatted blocks, so we need to check this too. Until they won't switch to chromium\n        document.execCommand('formatBlock', false, 'p');\n      }\n      document.execCommand('formatBlock', false, `<${command}>`);\n    }\n\n    this.removeAttributes();\n    this.updateFormattingState();\n    this.focus();\n  };\n\n  /**\n   * Clear HTML style attributes inside contentEditable\n   * @return {void}\n   */\n  private removeAttributes = (): void => {\n    if (this.ref.current) {\n      this.ref.current.querySelectorAll('*').forEach((item) => {\n        if (item instanceof HTMLElement) {\n          item.removeAttribute('style');\n        }\n      });\n    }\n  };\n\n  private insertList = (type: 'ol' | 'ul') => {\n    this.focus();\n\n    if (whichTag('blockquote')) {\n      document.execCommand('outdent', false);\n    }\n\n    if (whichTag('pre') || whichTag('blockquote')) {\n      this.formatBlock('p');\n    }\n\n    if (type === 'ol') {\n      document.execCommand('insertOrderedList');\n    } else {\n      document.execCommand('insertUnorderedList');\n    }\n\n    this.removeAttributes();\n    this.focus();\n  };\n\n  /**\n   * Available formatting options to render\n   * @return {IOption[]} Array of the options with all needed props to render using React\n   */\n  get options(): IOption[] {\n    const { italic, bold, underline, blockquote, pre, ul } = this.formattingState;\n\n    const options = [\n      { active: bold, icon: BoldIcon, title: 'Bold', onClick: () => this.formatText('bold') },\n      { active: italic, icon: ItalicIcon, onClick: () => this.formatText('italic'), title: 'Italic' },\n      { active: underline, icon: UnderlineIcon, onClick: () => this.formatText('underline'), title: 'Underline' },\n    ];\n\n    // Unfortunately we can't offer block formatting inside Edge, as it's working unstable\n    if (this.isEdgeBrowser) {\n      return options;\n    }\n\n    // For all other browsers we offer block formatting options\n    return [\n      ...options,\n      { active: blockquote, icon: QuoteIcon, onClick: () => this.formatBlock('blockquote'), title: 'Quotation' },\n      { icon: CodeIcon, title: 'Code', onClick: () => this.formatBlock('pre'), active: pre },\n      { icon: UlIcon, title: 'List', onClick: () => this.insertList('ul'), active: ul },\n    ];\n  }\n}\n\ndecorate(Formatting, {\n  formattingState: observable,\n  updateFormattingState: action,\n\n  options: computed,\n});\n\nexport default Formatting;\n","/**\n * SVG Icons file\n */\n\nexport const BoldIcon = `\n <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      version=\"1.1\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M13.5,15.5H10V12.5H13.5A1.5,1.5 0 0,1 15,14A1.5,1.5 0 0,1 13.5,15.5M10,6.5H13A1.5,1.5 0 0,1 14.5,8A1.5,1.5 0 0,1 13,9.5H10M15.6,10.79C16.57,10.11 17.25,9 17.25,8C17.25,5.74 15.5,4 13.25,4H7V18H14.04C16.14,18 17.75,16.3 17.75,14.21C17.75,12.69 16.89,11.39 15.6,10.79Z\" />\n    </svg>\n`;\n\nexport const CodeIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M14.6,16.6L19.2,12L14.6,7.4L16,6L22,12L16,18L14.6,16.6M9.4,16.6L4.8,12L9.4,7.4L8,6L2,12L8,18L9.4,16.6Z\" />\n  </svg>\n`;\n\nexport const ItalicIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M10,4V7H12.21L8.79,15H6V18H14V15H11.79L15.21,7H18V4H10Z\" />\n  </svg>\n`;\n\nexport const QuoteIcon = `\n<svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M14,17H17L19,13V7H13V13H16M6,17H9L11,13V7H5V13H8L6,17Z\" />\n  </svg>\n`;\n\nexport const UlIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M3,13H5V11H3V13M3,17H5V15H3V17M3,9H5V7H3V9M7,13H21V11H7V13M7,17H21V15H7V17M7,7V9H21V7H7Z\" />\n  </svg>\n`;\n\nexport const UnderlineIcon = `\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    version=\"1.1\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path d=\"M5,21H19V19H5V21M12,17A6,6 0 0,0 18,11V3H15.5V11A3.5,3.5 0 0,1 12,14.5A3.5,3.5 0 0,1 8.5,11V3H6V11A6,6 0 0,0 12,17Z\" />\n  </svg>\n`;\n\nexport const GIFIcon = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 439.875 439.875\">\n <path d=\"M76.5,191.25v57.375c0,21.037,17.212,38.25,38.25,38.25h57.375v-15.3V229.5v-19.125H114.75V229.5H153v38.25h-38.25 c-11.475,0-19.125-7.65-19.125-19.125V191.25c0-11.475,7.65-19.125,19.125-19.125h57.375V153H114.75 C93.712,153,76.5,170.212,76.5,191.25z\" />\n <polygon points=\"191.25,172.125 210.375,172.125 210.375,267.75 191.25,267.75 191.25,286.875 248.625,286.875 248.625,267.75 229.5,267.75 229.5,172.125 248.625,172.125 248.625,153 191.25,153\" />\n <path d=\"M382.5,95.625H57.375C24.862,95.625,0,120.487,0,153v133.875c0,32.513,24.862,57.375,57.375,57.375H382.5 c32.513,0,57.375-24.862,57.375-57.375V153C439.875,120.487,415.013,95.625,382.5,95.625z M420.75,286.875 c0,21.037-17.213,38.25-38.25,38.25H57.375c-21.038,0-38.25-17.213-38.25-38.25V153c0-21.038,17.212-38.25,38.25-38.25H382.5 c21.037,0,38.25,17.212,38.25,38.25V286.875z\" />\n <polygon points=\"267.75,286.875 286.875,286.875 286.875,229.5 344.25,229.5 344.25,210.375 286.875,210.375 286.875,172.125 363.375,172.125 363.375,153 267.75,153\" />\n</svg>\n`;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport styled from 'styled-components';\nimport EditorBox from './components/EditorBox';\nimport GIFDropdown from './components/GIFDropdown';\nimport ImagesPreview from './components/ImagesPreview';\nimport Options from './components/Options';\nimport UploadImageButton from './components/UploadImageButton';\n\nimport FormattingStore from './stores/Formatting';\n\n/** Values that Rich Editor returns for onChange event handler */\nexport interface IEditorChangeReturn {\n  /** Images urls list */\n  images: string[];\n  /** Computed HTML of the comment including added images html */\n  html: string;\n  /** Plain comment text */\n  text: string;\n}\n\ninterface IProps {\n  // === General Section ===\n  /** ID of the div */\n  id: string;\n  /** Editor HTML value */\n  value: string;\n  /**\n   * Same as placeholder for input\n   * @default ''\n   */\n  placeholder?: string;\n  /**\n   * Allow Editor to be changed or not\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * onChange handler - called once user type anything\n   * @default undefined\n   */\n  onChange?: ({ images, html, text }: IEditorChangeReturn) => void;\n  /** On Focus event handler */\n  onFocus?: () => void;\n  /** On Blur event handler */\n  onBlur?: () => void;\n  /** On Key down event handler */\n  onKeyDown?: (e: React.KeyboardEvent<HTMLDivElement>) => void;\n  /**\n   * Click handler\n   * @default undefined\n   */\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n\n  // === 🖼️ Images Section ===\n  /** Images URLs */\n  images: string[];\n  /**\n   * Disable images adding\n   * @default false\n   */\n  imagesDisabled?: boolean;\n  /** Callback to add image */\n  addImage: (url: string | File) => void;\n  /** Called once user is trying to remove an image */\n  removeImage: (url: string) => void;\n  /** Hide upload image icon */\n  hideUploadImage: boolean;\n  /**\n   * Number of rows inside textarea\n   * @default 2\n   */\n  rows?: number;\n  /**\n   * Show/Hide formatting box (add GIFs, bold, italic etc.)\n   * @default true\n   */\n  showFormattingRow?: boolean;\n}\n\nconst Wrapper = styled.div<{ focused: boolean }>`\n  border: 1px solid ${(props) => props.theme.input.border};\n  border-radius: 4px 4px 0 0;\n  border-bottom-style: dashed;\n  background-color: ${(props) => props.theme.input.background};\n  word-break: break-word;\n  ${(props) => props.focused && `border-color: ${props.theme.input.active.border};`};\n`;\n\ninterface IState {\n  /** Determines if editor is focused */\n  isFocused: boolean;\n}\n\n@observer\nclass Editor extends React.Component<IProps, IState> {\n  private formattingStore: FormattingStore = new FormattingStore();\n  public static defaultProps = {\n    disabled: false,\n    imagesDisabled: false,\n    placeholder: 'Write Comment',\n    rows: 2,\n    showFormattingRow: true,\n  };\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      isFocused: false,\n    };\n  }\n\n  /** Editor Click handler */\n  private onEditorClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    this.formattingStore.updateFormattingState();\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  /** Editor focus handler */\n  private onEditorFocus = (): void => {\n    this.setState({ isFocused: true });\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  /** Editor blur handler */\n  private onEditorBlur = () => {\n    this.setState({ isFocused: false });\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  private onEditorKeyDown = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    this.formattingStore.updateFormattingState();\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n  };\n\n  /** Editor change handler */\n  private onEditorChange = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (this.props.onChange) {\n      this.props.onChange({\n        html: e.currentTarget.innerHTML,\n        images: this.props.images,\n        text: e.currentTarget.innerText,\n      });\n    }\n  };\n\n  /** Handler for image upload button */\n  private onUploadChange = (e: any) => {\n    const files = Array.from(e.target.files);\n    if (files[0] instanceof File) {\n      this.props.addImage(files[0] as File);\n    }\n  };\n\n  public render() {\n    return (\n      <Wrapper focused={this.state.isFocused}>\n        <EditorBox\n          id={this.props.id}\n          onChange={this.onEditorChange}\n          onFocus={this.onEditorFocus}\n          onBlur={this.onEditorBlur}\n          onClick={this.onEditorClick}\n          onKeyDown={this.onEditorKeyDown}\n          disabled={this.props.disabled}\n          placeholder={this.props.placeholder}\n          ref={this.formattingStore.ref}\n          value={this.props.value}\n          rows={this.props.rows}\n        />\n\n        <ImagesPreview items={this.props.images} onRemove={this.props.removeImage} />\n\n        {this.props.showFormattingRow && (\n          <Options options={this.formattingStore.options}>\n            {!this.props.imagesDisabled && !this.props.hideUploadImage && (\n              <UploadImageButton onFileInputChange={this.onUploadChange} disabled={this.props.imagesDisabled} />\n            )}\n            <GIFDropdown onSelect={this.props.addImage} disabled={this.props.imagesDisabled} />\n          </Options>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default Editor;\n","import * as React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\n// keyframes returns a unique name based on a hash of the contents of the keyframes\nconst ballScale = keyframes`\n  0% {\n    transform: scale(0)\n  }\n  100% {\n    transform: scale(1);\n    opacity: 0.5\n  }\n`;\n\nconst toxicAnimation = keyframes`\n  0% {\n    border-radius: 50%;\n    transform: scale(0.3);\n  }\n  50% {\n    transform: scale(1.2) rotate(90deg);\n    border-radius: 0%;\n  }\n  100% {\n    transform: rotate(225deg);\n  }\n`;\n\nconst mediumAnimation = keyframes`\n  0% {\n    border-radius: 50%;\n    transform: scale(0.3);\n  }\n  50% {\n    transform: scale(1.2);\n    border-radius: 0%;\n  }\n`;\n\nconst lowAnimation = keyframes`\n  0% {\n    border-radius: 50%;\n    transform: scale(0.3);\n  }\n  50% {\n    transform: scale(1.2);\n    border-radius: 0%;\n  }\n`;\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nconst Progress = styled('div')<IProps>`\n  height: 15px;\n  width: 15px;\n  background-color: ${(props) => {\n    if (!props.loading) {\n      if (props.value >= 75) {\n        return '#b719fa';\n      } else if (props.value >= 50) {\n        return '#7a4ffe';\n      } else if (props.value >= 25) {\n        return '#5185fc';\n      }\n      return '#2db6f9';\n    }\n    return '#868e96';\n  }};\n  border-radius: ${(props) => (!props.loading && props.value >= 25 ? 0 : '100%')};\n  margin: 2px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 10px;\n  transform: ${(props) => {\n    if (!props.loading && props.value >= 75) {\n      return 'rotate(135deg)';\n    }\n    if (!props.loading && props.value >= 25) {\n      return 'rotate(90deg)';\n    }\n    return 'rotate(0)';\n  }};\n  animation: ${(props) => {\n    if (props.loading) {\n      return css`\n        ${ballScale} 1s 0s ease-in-out infinite;\n      `;\n    } else if (props.value >= 75) {\n      return css`\n        ${toxicAnimation} .5s ease-in;\n      `;\n    } else if (props.value >= 50) {\n      return css`\n        ${mediumAnimation} .5s ease-in;\n      `;\n    } else if (props.value >= 25) {\n      return css`\n        ${lowAnimation} .5s ease-in;\n      `;\n    } else {\n      return null;\n    }\n  }};\n`;\n\nconst Span = styled('span')`\n  vertical-align: middle;\n  display: inline;\n  animation: ${fadeIn} 0.25s ease-in;\n  font-size: 0.75rem;\n`;\n\ninterface IProps {\n  value: number;\n  loading: boolean;\n  toxicityText?: string;\n  visibilityLimit?: number;\n}\n\nconst ToxicityMeter: React.FunctionComponent<IProps> = ({\n  value,\n  loading,\n  visibilityLimit = 50,\n  toxicityText = '',\n  ...props\n}) => (\n  <div style={{ marginRight: '5px' }} {...props}>\n    <Progress loading={loading} value={value} />\n    {!loading && visibilityLimit < value && (\n      <Span>\n        {value}%<span> {toxicityText}</span>\n      </Span>\n    )}\n  </div>\n);\n\nexport default ToxicityMeter;\n","import { observer } from 'mobx-react';\nimport React from 'react';\n\nimport Tag from '@vuukle/tag';\nimport TextareaFooter from 'components/TextareaFooter';\nimport RichEditor, { IEditorChangeReturn } from 'modules/RichEditor';\nimport ToxicityMeter from './ToxicityMeter';\n\nimport translation from 'stores/translationStore';\n\n/** Component Props */\nimport EnglishEditBoxStore from 'modules/EditCommentBox/stores/EnglishEditBox';\nimport EnglishBoxStore from '../stores/EnglishBox';\ninterface IProps {\n  boxStore: EnglishBoxStore | EnglishEditBoxStore;\n  authorized: boolean;\n}\n\n@observer\nclass WriteCommentBox extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  /**\n   * Handler for RichEditor change\n   * @return {void}\n   */\n  public onEditorChange = ({ html }: IEditorChangeReturn): void => {\n    this.props.boxStore.value = html;\n  };\n\n  /** Add Image */\n  public addImage = (image: string | File) => {\n    if (image instanceof File) {\n      this.props.boxStore.images.uploadImage(image);\n    } else {\n      this.props.boxStore.images.add(image);\n    }\n  };\n\n  /** Returns main content of the form to render */\n  private renderContent(): React.ReactElement[] {\n    return [\n      <RichEditor\n        id={this.props.boxStore.id}\n        value={this.props.boxStore.value}\n        placeholder={translation.common.writeComment /* Write Comment */}\n        onFocus={this.props.boxStore.onFocus}\n        onBlur={this.props.boxStore.onBlur}\n        onChange={this.onEditorChange}\n        imagesDisabled={this.props.boxStore.images.inProgress || this.props.boxStore.images.uploadLimitExceeded}\n        hideUploadImage={!this.props.authorized}\n        addImage={this.addImage}\n        removeImage={this.props.boxStore.images.remove}\n        images={this.props.boxStore.images.items}\n        disabled={this.props.boxStore.inProgress}\n        rows={!this.props.boxStore.minimized ? 4 : 2}\n        showFormattingRow={!this.props.boxStore.minimized}\n        key={0}\n      />,\n      <TextareaFooter focused={this.props.boxStore.focused} key={1}>\n        <div>\n          {/* Show toxicity limit only if it's appropriate */}\n          {this.props.boxStore.toxicityModel.limit < 100 && (\n            <ToxicityMeter\n              value={this.props.boxStore.toxicityModel.value}\n              loading={this.props.boxStore.toxicityModel.loading}\n              toxicityText={translation.toxicity.long}\n              visibilityLimit={this.props.boxStore.toxicityModel.limit}\n            />\n          )}\n        </div>\n        <div>\n          {this.props.boxStore.allowedCharactersCount <= 200 && <Tag>{this.props.boxStore.allowedCharactersCount}</Tag>}\n        </div>\n      </TextareaFooter>,\n    ];\n  }\n\n  public render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\n\nexport default WriteCommentBox;\n","import * as React from 'react';\nimport Textarea from 'react-textarea-autosize';\nimport styled from 'styled-components';\n\ninterface IThemeProps {\n  theme: {\n    mutedColor: string;\n    input: {\n      background: string;\n      color: string;\n      border: string;\n      active: {\n        border: string;\n      };\n    };\n  };\n}\n\nconst StyledTextArea = styled(Textarea)<any & IThemeProps>`\n  display: block;\n  width: 100%;\n  resize: none;\n  padding: 15px 10px 10px;\n  border-radius: 3px 3px 0 0;\n  margin: 0;\n  border-image: initial;\n  background: ${(props) => props.theme.input.background};\n  color: ${(props) => props.theme.input.color};\n  border: 1px solid ${(props) => props.theme.input.border};\n  border-bottom: 1px dashed ${(props) => props.theme.input.border};\n  &::placeholder {\n    color: ${(props) => props.theme.mutedColor};\n  }\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.input.active.border};\n  }\n`;\n\nconst TextareaWrapper = (props: any) => <StyledTextArea name=\"comment\" {...props} />;\n\nexport default TextareaWrapper;\n","import { loadJS } from '@vuukle/utils';\nimport { action, computed, decorate, observable, when } from 'mobx';\nimport urlSearchParams from 'services/urlSearchParams';\n\nexport class Transliteration {\n  /** Transliteration enabled/disabled */\n  public enabled: boolean;\n  /** Language code to use transliteration for */\n  public languageCode: string;\n  /** Currently enabled language code. It can be 'en' or this.languageCode */\n  public currentLanguage: string;\n  /** Transliteration enabled by default yes/no. If no then english is default */\n  public enabledByDefault: boolean;\n  /** Instance of google transliteration plugin */\n  public transliterationControl: any;\n  /** Determines if transliteration plugin has been loaded */\n  public loaded: boolean = false;\n  /** List of available languages for transliteration */\n  public languages: { [key: string]: string } = {\n    am: 'Amharic',\n    ar: 'Arabic',\n    bn: 'Bengali',\n    el: 'Greek',\n    en: 'English',\n    fa: 'Persian',\n    gu: 'Gujarati',\n    hi: 'Hindi',\n    kn: 'Kannada',\n    ml: 'Malayalam',\n    mr: 'Marathi',\n    ne: 'Nepali',\n    or: 'Oriya',\n    pa: 'Punjabi',\n    ru: 'Russian',\n    sa: 'Sanskrit',\n    si: 'Sinhalese',\n    sr: 'Serbian',\n    ta: 'Tamil',\n    te: 'Telugu',\n    ti: 'Tigrinya',\n    ur: 'Urdu',\n    zn: 'Chinese',\n  };\n  /** Stores textarea elements where use can write comment. We can have several write comment boxes opened at the same time */\n  private readonly transliterationBoxes: Set<any>;\n\n  constructor() {\n    this.languageCode = urlSearchParams.get('lang') || 'en';\n    this.enabledByDefault = urlSearchParams.get('l_d') === 'true';\n    this.enabled = this.languageCode !== 'en';\n    this.currentLanguage = this.enabledByDefault ? this.languageCode : 'en';\n    this.transliterationBoxes = new Set();\n    this.loaded = false;\n\n    if (this.languageCode !== 'en') {\n      this.loadTransliteration();\n    }\n  }\n\n  /**\n   * Get currently enabled transliteration language code\n   * @return {string}\n   */\n  get language(): string {\n    return this.languages[this.currentLanguage] || this.currentLanguage;\n  }\n\n  /** Init or Remove initialization from textarea ID */\n  public toggleBox = (id: string): void => {\n    if (this.transliterationBoxes.has(id)) {\n      this.transliterationBoxes.delete(id);\n    } else {\n      this.transliterationBoxes.add(id);\n    }\n\n    when(\n      () => this.loaded,\n      () => {\n        this.transliterationControl.makeTransliteratable(Array.from(this.transliterationBoxes));\n        if (this.languageCode === 'en') {\n          this.transliterationControl.disableTransliteration();\n        } else {\n          this.transliterationControl.enableTransliteration();\n        }\n      }\n    );\n  };\n\n  public toggleLanguage = () => {\n    this.currentLanguage = this.currentLanguage === 'en' ? this.languageCode : 'en';\n\n    when(\n      () => this.loaded,\n      () => {\n        if (this.currentLanguage !== 'en') {\n          return this.transliterationControl.enableTransliteration();\n        }\n        return this.transliterationControl.disableTransliteration();\n      }\n    );\n  };\n\n  private loadTransliteration = () => {\n    loadJS('https://www.google.com/jsapi')\n      .then(() => {\n        loadJS('https://cdn.jsdelivr.net/gh/vuukle/transliterate@1.0/js/transliteration.I.js').then(() => {\n          // 📦 Load CSS for transliteration\n          const fileRef = document.createElement('link');\n          fileRef.setAttribute('rel', 'stylesheet');\n          fileRef.setAttribute('type', 'text/css');\n          fileRef.setAttribute('href', 'https://cdn.jsdelivr.net/gh/vuukle/transliterate@1.0/css/transliteration.css');\n          document.getElementsByTagName('head')[0].appendChild(fileRef);\n\n          // Create an instance on TransliterationControl with the required\n          // options.\n          this.transliterationControl = new (window as any).google.elements.transliteration.TransliterationControl({\n            destinationLanguage: [this.languageCode],\n            sourceLanguage: 'en',\n            transliterationEnabled: this.enabledByDefault,\n          });\n          this.loaded = true;\n        });\n      })\n      .catch((err) => {\n        if (process.env.NODE_ENV === 'development') {\n          // tslint:disable-next-line\n          console.log('Transliteration loading err:', err);\n        }\n      });\n  };\n}\n\ndecorate(Transliteration, {\n  currentLanguage: observable,\n  languageCode: observable,\n  loaded: observable,\n\n  language: computed,\n\n  toggleBox: action,\n  toggleLanguage: action,\n});\n\nexport default new Transliteration();\n","import { makeRequest } from '@vuukle/utils';\nimport { action, computed, decorate, observable } from 'mobx';\nimport { userStore } from 'modules/Auth/stores';\nimport { IAlert } from 'stores/models/Alert';\n\nenum Errors {\n  error_saving_image = 'error_saving_image',\n  limit_exceeded = 'limit_exceeded',\n  wrong_format = 'wrong_format',\n  unknown = 'unknown',\n}\n\n/** Possible image uploading errors */\nconst alerts: { [key: string]: IAlert } = {\n  [Errors.error_saving_image]: {\n    message: `Sorry, there was an error saving an image, please try try again`,\n    type: 'error',\n  },\n  [Errors.limit_exceeded]: {\n    message: `The file size is too big, please upload an image below 5MB`,\n    type: 'error',\n  },\n  [Errors.unknown]: { message: 'Error happened, please try again', type: 'error' },\n  [Errors.wrong_format]: {\n    message: 'We can only accept the following image formats: .png .jpg .jpeg .bmp',\n    type: 'error',\n  },\n};\n\n/**\n * Responsible for image adding on comment post\n */\nclass ImageUpload {\n  /** images urls */\n  public items: string[] = [];\n  /** uploads limit */\n  public limit: number;\n  /** Uploading is in progress */\n  public inProgress: boolean = false;\n  public setAlert: (alert: IAlert) => void;\n  private allowedFormats: string[] = ['png', 'jpg', 'jpeg', 'bmp'];\n  /** API method to upload images to the Vuukle Server */\n  private uploadAPI = (data: FormData) =>\n    makeRequest('POST', `${process.env.API_URL}/api/v1/Comments/uploadCommentImage`, data, undefined, userStore.token);\n\n  constructor(limit: number = 1, setAlert: (alert: IAlert) => void) {\n    this.limit = limit;\n    this.setAlert = setAlert;\n  }\n\n  /**\n   * Remove image by link\n   * @param {string} url - image url to delete\n   * @return {void}\n   */\n  public remove = (url: string): void => {\n    this.items = this.items.filter((imageUrl) => imageUrl !== url);\n  };\n\n  /**\n   * Add image to the list of uploads\n   * @param {string} url - image url to add\n   */\n  public add = (url: string): void => {\n    if (this.items.indexOf(url) !== -1) {\n      return;\n    }\n\n    this.items.push(url);\n  };\n\n  /**\n   * Detects if upload items limit is exceeded\n   * @return {boolean} true limit is exceeded and false it no\n   */\n  get uploadLimitExceeded(): boolean {\n    return this.items.length >= this.limit;\n  }\n\n  /**\n   * @public\n   * Upload Image using Vuukle API\n   * @param {File} imageFile image to upload\n   * @returns {Promise<void>}\n   */\n  public uploadImage = async (imageFile: File): Promise<void> => {\n    /** Validate file extension */\n    const fileExtension =\n      imageFile.name\n        .toLocaleLowerCase()\n        .split('.')\n        .pop() || '';\n\n    if (this.allowedFormats.indexOf(fileExtension) === -1) {\n      return this.setAlert(alerts[Errors.wrong_format]);\n    }\n\n    /** Check for file limit */\n    if (imageFile.size > 5e6) {\n      return this.setAlert(alerts[Errors.limit_exceeded]);\n    }\n\n    /** Send File to the server */\n    const data = new FormData();\n    data.append('file', imageFile);\n    this.inProgress = true;\n\n    try {\n      const uploadResponse = await this.uploadAPI(data);\n      if (uploadResponse.success && uploadResponse.data.imgLink) {\n        this.add(uploadResponse.data.imgLink);\n      } else {\n        throw new Error(uploadResponse.errors[0]);\n      }\n    } catch (err) {\n      this.setAlert(alerts[err.message || 'unknown'] || alerts[Errors.unknown]);\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /** Get HTML code for the uploaded images */\n  get html(): string {\n    return this.items.map((imageUrl: string) => `<p><img src=\"${imageUrl}\"></p>`).join('');\n  }\n}\n\ndecorate(ImageUpload, {\n  add: action,\n  inProgress: observable,\n  items: observable,\n  remove: action,\n  uploadLimitExceeded: computed,\n});\n\nexport default ImageUpload;\n","import { observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from '@vuukle/button';\nimport Tag from '@vuukle/tag';\nimport translation from 'stores/translationStore';\n\nimport TextareaFooter from 'components/TextareaFooter';\nimport Textarea from './Textarea';\n\n/** Props */\nimport ForeignEditStore from 'modules/EditCommentBox/stores/ForeignEditBox';\nimport ForeignStore from '../stores/ForeignBox';\nimport TransliterationStore, { Transliteration } from '../stores/models/Transliteration';\n\ninterface IProps {\n  foreignStore: ForeignStore | ForeignEditStore;\n}\n\n@observer\nclass ForeignBox extends React.Component<IProps, {}> {\n  public transliterationStore: Transliteration = TransliterationStore;\n\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  public componentDidMount(): void {\n    /** 🇮🇳 🇺🇦 🇵🇱 Enabled transliteration for current component textarea */\n    this.transliterationStore.toggleBox(this.props.foreignStore.id);\n\n    /** Set value of the comment box if needed */\n    const textarea = document.querySelector(`#${this.props.foreignStore.id}`);\n    if (textarea instanceof HTMLTextAreaElement) {\n      textarea.value = this.props.foreignStore.value;\n    }\n  }\n\n  public componentWillUnmount(): void {\n    /** 🔴 Remove textarea on component unmount */\n    this.transliterationStore.toggleBox(this.props.foreignStore.id);\n  }\n\n  /** Handles for textarea change */\n  private handleTextAreaChange = (e: React.FormEvent<HTMLTextAreaElement>): void => {\n    this.props.foreignStore.value = e.currentTarget.value;\n  };\n\n  private renderContent(): React.ReactElement[] {\n    return [\n      <Textarea\n        id={this.props.foreignStore.id}\n        disabled={this.props.foreignStore.inProgress}\n        rows={this.props.foreignStore.minimized ? 2 : 4}\n        minRows={this.props.foreignStore.minimized ? 2 : 4}\n        maxRows={10}\n        onFocus={this.props.foreignStore.onFocus}\n        onBlur={this.props.foreignStore.onBlur}\n        onChange={this.handleTextAreaChange}\n        placeholder={translation.common.writeComment /* Write Comment */}\n        required={true}\n        key={0}\n      />,\n      <TextareaFooter focused={false} key={1}>\n        <div>\n          <Button\n            onClick={this.transliterationStore.toggleLanguage}\n            style={{ padding: '0 6px', lineHeight: 1.2, marginRight: '5px', textTransform: 'capitalize' }}\n            type=\"subtle\"\n            sm={true}\n          >\n            {this.transliterationStore.language}\n          </Button>\n        </div>\n        <div>\n          {/* !shouldShowLimitTag && <TextFormattingTips /> */}\n          {this.props.foreignStore.allowedCharactersCount <= 200 && (\n            <Tag>{this.props.foreignStore.allowedCharactersCount}</Tag>\n          )}\n        </div>\n      </TextareaFooter>,\n    ];\n  }\n\n  public render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\n\nexport default ForeignBox;\n","import { getTextFromHTML } from '@vuukle/utils';\nimport min from 'lodash/min';\nimport uniqueId from 'lodash/uniqueId';\nimport { action, computed, observable, when } from 'mobx';\n\nimport urlSearchParams from 'services/urlSearchParams';\nimport Alert, { IAlert } from 'stores/models/Alert';\nimport translation from 'stores/translationStore';\nimport ImageUpload from './ImageUpload';\n\nexport enum CommentErrors {\n  // Front-end\n  blank_comment = 'blank_comment',\n  similar_comment = 'similar_comment',\n  long_comment = 'long_comment',\n  // Server\n  repeat_comment = 'repeat_comment',\n  spammer = 'spammer',\n  success = 'success',\n  moderation = 'moderation',\n  ip_blocked = 'ip_blocked',\n  email_blocked = 'email_blocked',\n}\n\nexport const alertMessages: { [key: string]: IAlert } = {\n  [CommentErrors.blank_comment]: { type: 'error', message: translation.common.blankComment },\n  [CommentErrors.similar_comment]: { type: 'error', message: translation.messages.almostSame },\n  [CommentErrors.long_comment]: { type: 'warning', message: `${translation.messages.charlimits}` },\n  // Server\n  [CommentErrors.repeat_comment]: { type: 'warning', message: translation.messages.alreadySubmitted },\n  [CommentErrors.spammer]: { type: 'warning', message: translation.messages.spammerComment },\n  [CommentErrors.success]: { type: 'success', message: translation.messages.commentAdded },\n  [CommentErrors.moderation]: { type: 'warning', message: translation.messages.moderationMessage },\n  [CommentErrors.ip_blocked]: { type: 'warning', message: translation.messages.blockedIp },\n  [CommentErrors.email_blocked]: { type: 'warning', message: translation.messages.blockedEmail },\n  unknown: { type: 'error', message: translation.messages.errorContactVuukle },\n};\n\nabstract class CommentBox {\n  /** Uniquer id for each created comment box (used as id of textarea) */\n  public readonly id: string = uniqueId('write-comment-');\n  /** Comment value from textarea or content editable */\n  @observable\n  protected _value: string = '';\n  /** Comment box is focused */\n  @observable\n  public focused: boolean = false;\n  /**\n   * By default textarea has minimized view to don't show all of the elements.\n   * But once user focuses on textarea at least once we expand it\n   */\n  @observable\n  public minimized: boolean = true;\n  /** Comment posting/editing progress */\n  @observable\n  public inProgress: boolean = false;\n  /** Alert to notify user about any errors or to show success posting message */\n  @observable\n  public alert: Alert = new Alert();\n  /** Uploaded Images URLs */\n  @observable\n  public images: ImageUpload = new ImageUpload(1, (alert) => (this.alert.value = alert));\n  // === 🔧 Configurable from outside of the widget\n  /** If true, then box is hidden by default and we show button that sets this value to true and shows comment box */\n  @observable\n  public hidden: boolean;\n  /** Chars limit to post comment. Publisher can customize it but anyway max limit is 3000 */\n  public static readonly lengthLimit: number =\n    min([parseInt(urlSearchParams.get('maxChars') || '3000', 10), 3000]) || 3000;\n\n  protected constructor() {\n    this.hidden = urlSearchParams.get('hideCommentBox') === 'true';\n    /** Expand textarea rows once user focused textarea box */\n    when(() => this.focused, () => (this.minimized = false));\n  }\n\n  public abstract set value(commentText: string);\n  public abstract get value(): string;\n\n  @computed\n  protected get text(): string {\n    return getTextFromHTML(this._value);\n  }\n\n  /**\n   * Creates HTML that is ready to be posted to server\n   */\n  @computed\n  protected get computedHTML(): string {\n    if (!this.value && !this.images.items.length) {\n      return '';\n    }\n\n    let commentHTML = this.value\n      .trim()\n      // Remove empty tags\n      .replace(/(?!<br>|<br\\/>|<br \\/>)(<[^\\/>][^>]*><\\/[^>]+>)/gim, '')\n      // Convert more than 3 new lines within <p>\n      .replace(/(<p>(<br>|<br\\/>|<br \\/>)<\\/p>){3,}/gim, '<br><br>')\n      // Convert more than 3 new lines into 2\n      .replace(/(<br>|<br\\/>|<br \\/>){3,}/gim, '<br><br>')\n      // Remove more than 3 spaces\n      .replace(/ {3,}/g, '   ')\n      .trim();\n\n    if (this.images.items.length > 0) {\n      this.images.items.forEach((imageUrl) => (commentHTML += ` <p><img src=\"${imageUrl}\"></p>`));\n    }\n\n    return commentHTML;\n  }\n\n  /** ➕/➖ Calculates how many characters user is allowed to type */\n  @computed\n  public get allowedCharactersCount(): number {\n    return CommentBox.lengthLimit - this.text.length;\n  }\n\n  /** Form focus handler */\n  @action\n  public onFocus = (): void => {\n    this.minimized = false;\n    this.focused = true;\n  };\n\n  /** Form blur handler */\n  @action\n  public onBlur = (): void => {\n    this.focused = false;\n  };\n\n  /**\n   * Determines if commenting is disabled\n   * @return {boolean}\n   */\n  public abstract get disabled(): boolean;\n\n  /**\n   * Form submit handler\n   * @return {void}\n   */\n  public abstract onSubmit(e: React.FormEvent<HTMLFormElement>): void;\n\n  /**\n   * Pre submit util function to verify if comment that is ready to be posted/edited is a valid comment\n   * @return {Promise} - error or resolves true on success\n   */\n  @action\n  protected preSubmit = (): Promise<CommentErrors | boolean> =>\n    new Promise<CommentErrors | boolean>((resolve, reject) => {\n      /** Check if comment text is empty (without tags) */\n      if (!this.text && !this.computedHTML.match(/<img [^>]*src=\"[^\"]*\"[^>]*>/gm)) {\n        this.alert.value = alertMessages[CommentErrors.blank_comment];\n        reject(CommentErrors.blank_comment);\n      } else if (this.text.length > CommentBox.lengthLimit) {\n        this.alert.value = {\n          ...alertMessages[CommentErrors.long_comment],\n          message: alertMessages[CommentErrors.long_comment].message + ` ${CommentBox.lengthLimit}`,\n        };\n        reject(CommentErrors.long_comment);\n      }\n      resolve(true);\n    });\n}\n\nexport default CommentBox;\n","import { action, computed, decorate, observable } from 'mobx';\n\nimport { perspectiveAPIs } from 'services/apis';\nimport searchParams from 'services/urlSearchParams';\n\nimport { makeDevLog } from '@vuukle/utils';\n\nexport class SpamValidation {\n  /**\n   * PerspectiveAPI Toxicity Model\n   * {@link https://github.com/conversationai/perspectiveapi/blob/master/api_reference.md}\n   * null - toxicity is in progress\n   * number - when we have toxicity number or error loading and we set 0\n   */\n  public value: number = 0;\n  /**\n   * Configured limit of the model. User cannot post comments if limit exceeded\n   */\n  public readonly limit: number = 90;\n  /**\n   * Unlike toxicity restrict, users can post spammy comments but before this action should be confirmed.\n   * Users are asked with alert if they are ready to post spam comment.\n   */\n  public confirmed: boolean = false;\n\n  constructor() {\n    // Get toxicity and spam limit. Not valid values convert to default value and 0 to 100\n    const limitFromUrl = parseInt(searchParams.get('spamLimit') || '90', 10) || 100;\n\n    this.limit = limitFromUrl >= 0 ? limitFromUrl : 90;\n  }\n\n  /** Determines if spam is enabled or not */\n  get enabled() {\n    return this.limit < 100 && this.limit > 0;\n  }\n\n  public getValue = async (commentText: string): Promise<number> => {\n    if (!this.enabled) {\n      this.value = 0;\n      return this.value;\n    }\n\n    this.confirmed = false; // if we are getting new value then confirmed should be reseted\n\n    try {\n      const response: any = await perspectiveAPIs.spamModel.send(commentText);\n      this.value = response.value;\n\n      return this.value;\n    } catch (err) {\n      makeDevLog(`PerspectiveAPIs.toxicModel error: ${err}`, 'error');\n      this.value = 0;\n\n      return this.value;\n    }\n  };\n}\n\ndecorate(SpamValidation, {\n  value: observable,\n\n  enabled: computed,\n  getValue: action,\n});\n\nexport default SpamValidation;\n","import { action, computed, decorate, observable } from 'mobx';\n\nimport { perspectiveAPIs } from 'services/apis';\nimport searchParams from 'services/urlSearchParams';\n\nimport { makeDevLog } from '@vuukle/utils';\n\nexport class ToxicityValidation {\n  /**\n   * PerspectiveAPI Toxicity Model\n   * {@link https://github.com/conversationai/perspectiveapi/blob/master/api_reference.md}\n   * null - toxicity is in progress\n   * number - when we have toxicity number or error loading and we set 0\n   */\n  public value: number = 0;\n  public loading: boolean = false;\n  private checkingTimout: any;\n  /**\n   * Configured limit of the model. User cannot post comments if limit exceeded\n   */\n  public readonly limit: number = 80;\n\n  constructor() {\n    // Get toxicity and spam limit. Not valid values convert to default value and 0 to 100\n    const limitFromUrl = parseInt(searchParams.get('toxicityLimit') || '80', 10) || 100;\n\n    this.limit = limitFromUrl >= 0 ? limitFromUrl : 80;\n  }\n\n  /** Determines if toxicity is enabled or not */\n  public get enabled(): boolean {\n    return this.limit > 0 && this.limit < 100;\n  }\n\n  // TODO: improve function\n  public getValue = async (commentText: string, timeout: number = 0): Promise<boolean | number> => {\n    this.loading = true;\n    return new Promise((resolve) => {\n      clearTimeout(this.checkingTimout);\n\n      if (!commentText) {\n        this.loading = false;\n        this.value = 0;\n        return resolve(this.value);\n      }\n\n      if (timeout <= 0) {\n        resolve(this.getToxicity(commentText));\n      } else {\n        this.checkingTimout = setTimeout(async () => resolve(this.getToxicity(commentText)), timeout);\n      }\n    });\n  };\n\n  // TODO: change naming of that chain\n  @action\n  private getToxicity = async (commentText: string): Promise<number> => {\n    this.loading = true;\n    try {\n      const response: any = await perspectiveAPIs.toxicModel.send(commentText);\n      this.value = response.value || 0;\n\n      return this.value;\n    } catch (err) {\n      makeDevLog(`PerspectiveAPIs.toxicModel error: ${err}`, 'error');\n      this.value = 0;\n\n      return this.value;\n    } finally {\n      this.loading = false;\n    }\n  };\n}\n\ndecorate(ToxicityValidation, {\n  loading: observable,\n  value: observable,\n\n  enabled: computed,\n  getValue: action,\n});\n\nexport default ToxicityValidation;\n","import CommentBox, { alertMessages, CommentErrors } from 'modules/WriteComment/stores/models/CommentBox';\nimport SpamValidationModel from 'modules/WriteComment/stores/models/SpamValidationModel';\nimport ToxicityValidationModel from 'modules/WriteComment/stores/models/ToxicityValidationModel';\nimport translation from 'stores/translationStore';\n\nimport { makeDevLog } from '@vuukle/utils';\nimport { commentsApis } from 'services/apis';\n\nclass EnglishEditBox extends CommentBox {\n  public toxicityModel: ToxicityValidationModel = new ToxicityValidationModel();\n  public spamModel: SpamValidationModel = new SpamValidationModel();\n\n  constructor(\n    private commentID: number,\n    initialText: string,\n    private successCallback: (comment: Comments.ServerComment) => void\n  ) {\n    super();\n    /** 🔧 Expand all textarea function on the start of usage */\n    this.minimized = false;\n    /**\n     * ⚠ Since server returns full HTML including images and widget uses it separately we need to parse that HTML.\n     * So we need to get and remove images from the server HTML response, add to this.images and set parsed HTML to this.commentHTML\n     */\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = initialText;\n    const imgTags = wrapper.querySelectorAll('img');\n    imgTags.forEach((img: HTMLImageElement) => {\n      this.images.add(img.getAttribute('src') as string);\n      if (wrapper.contains(img)) {\n        img.remove();\n      }\n    });\n    wrapper.querySelectorAll('p:empty').forEach((p) => p.remove());\n\n    this.value = wrapper.innerHTML;\n  }\n\n  /** Edit comment box cannot be disabled */\n  public get disabled() {\n    return false;\n  }\n\n  public set value(commentText: string) {\n    this._value = commentText;\n\n    // Remove alerts on comment change\n    if (commentText.length > 0) {\n      this.alert.value = null;\n    }\n    /** Reset spam model on every comment change */\n    this.spamModel.value = 0;\n    /** Calculate toxicity on comment change */\n    if (this.toxicityModel.enabled) {\n      this.toxicityModel.getValue(this.text, 1000);\n    }\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      makeDevLog(err, 'error');\n      this.inProgress = false;\n      return;\n    }\n\n    /** Check toxicity if needed */\n    if (this.toxicityModel.enabled) {\n      if (this.toxicityModel.loading) {\n        await this.toxicityModel.getValue(this.text);\n      }\n\n      if (this.toxicityModel.value > this.toxicityModel.limit) {\n        this.alert.value = {\n          message: translation.messages.toxicityLimit.replace('%d', this.toxicityModel.limit.toString()),\n          type: 'warning',\n        };\n        this.inProgress = false;\n        return;\n      }\n    }\n\n    /** Check spam if enabled */\n    if (this.spamModel.enabled) {\n      if (!this.spamModel.value) {\n        this.spamModel.value = await this.spamModel.getValue(this.text);\n      }\n\n      if (this.spamModel.value > this.spamModel.limit && !this.spamModel.confirmed) {\n        this.alert.value = { type: 'warning', message: translation.messages.spamComment };\n        this.inProgress = false;\n        this.spamModel.confirmed = true;\n        return;\n      }\n    }\n\n    /** Call API to edit comment */\n    try {\n      const response = await commentsApis.edit(this.commentID, this.computedHTML);\n      if (response.success) {\n        this.alert.value = alertMessages[CommentErrors.success];\n        this.successCallback(response.data);\n      }\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default EnglishEditBox;\n","import CommentBox, { alertMessages, CommentErrors } from 'modules/WriteComment/stores/models/CommentBox';\n\nimport { getTextFromHTML, makeDevLog } from '@vuukle/utils';\nimport { commentsApis } from 'services/apis';\n\nclass ForeignEditBox extends CommentBox {\n  constructor(\n    private commentID: number,\n    initialText: string,\n    private successCallback: (comment: Comments.ServerComment) => void\n  ) {\n    super();\n\n    /** 🔧 Expand all textarea function on the start of usage */\n    this.minimized = false;\n\n    /**\n     * ⚠ Since server returns full HTML including images and widget uses it separately we need to parse that HTML.\n     * For Foreign comment box we don't have functionality to post images or any modifications, so we just get text from the text box, but\n     * with saving new lines and tabs\n     */\n    const commentText = initialText.replace(/<br( ?\\/?)>/, '\\n');\n    this.value = getTextFromHTML(commentText);\n  }\n\n  /** Edit comment box cannot be disabled */\n  public get disabled() {\n    return false;\n  }\n\n  public set value(commentText: string) {\n    this._value = commentText;\n\n    // Remove alerts on comment change\n    if (commentText.length > 0) {\n      this.alert.value = null;\n    }\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      makeDevLog(err, 'error');\n      this.inProgress = false;\n      return;\n    }\n\n    /** Call API to edit comment */\n    try {\n      const response = await commentsApis.edit(this.commentID, this.computedHTML);\n      if (response.success) {\n        this.alert.value = alertMessages[CommentErrors.success];\n        this.successCallback(response.data);\n      }\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default ForeignEditBox;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport EditFormWrapper from './components/EditFormWrapper';\n\nimport EnglishBox from 'modules/WriteComment/components/EnglishBox';\nimport ForeignBox from 'modules/WriteComment/components/ForeignBox';\n\nimport EnglishBoxStore from './stores/EnglishEditBox';\nimport ForeignBoxStore from './stores/ForeignEditBox';\n\n/** Component Props */\nimport Comment from 'modules/CommentList/store/CommentItem';\ninterface IProps {\n  /** Used for self closing. For example when user wants to cancel editing */\n  onClose: () => void;\n  comment: Comment;\n}\n\n/** Injected MobX Stores Props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\nimport { WidgetStore } from 'stores/widgetStore';\ninterface IInjectedProps extends IProps {\n  userStore: UserStore;\n  authStore: AuthStore;\n  widgetStore: WidgetStore;\n}\n\n@inject('userStore', 'authStore', 'widgetStore')\n@observer\nclass EditCommentBox extends React.Component<IProps> {\n  public store: EnglishBoxStore | ForeignBoxStore;\n\n  constructor(props: IProps) {\n    super(props);\n\n    /** Create appropriate store based on language */\n    if (this.injected.widgetStore.language === 'en') {\n      this.store = new EnglishBoxStore(\n        props.comment.data.id,\n        props.comment.data.commentText,\n        props.comment.editComment\n      );\n    } else {\n      this.store = new ForeignBoxStore(\n        props.comment.data.id,\n        props.comment.data.commentText,\n        props.comment.editComment\n      );\n    }\n  }\n  /** get Injected stores */\n  get injected() {\n    return this.props as IInjectedProps;\n  }\n\n  /** 🎨 Returns editor component based on selected language */\n  private renderEditor(): React.ReactElement {\n    /** Decide which box we need to show based on publisher configuration */\n    if (this.store instanceof EnglishBoxStore) {\n      return <EnglishBox boxStore={this.store} authorized={this.injected.userStore.isAuthorized} />;\n    }\n\n    return <ForeignBox foreignStore={this.store} />;\n  }\n\n  public render() {\n    return (\n      <EditFormWrapper\n        comment={this.props.comment}\n        onSubmit={this.store.onSubmit}\n        alert={this.store.alert.value}\n        closeAlert={this.store.alert.close}\n        inProgress={this.store.inProgress}\n        closeEditor={this.props.onClose}\n        authenticatedWithPassword={\n          (this.injected.userStore.details && this.injected.userStore.details.isPasswordEntered) || false\n        }\n      >\n        {this.renderEditor()}\n      </EditFormWrapper>\n    );\n  }\n}\n\nexport default EditCommentBox;\n","import { makeDevLog } from '@vuukle/utils';\nimport { action, computed, observable } from 'mobx';\n\nimport CommentBox, { alertMessages, CommentErrors } from './models/CommentBox';\nimport SpamValidationStore from './models/SpamValidationModel';\nimport ToxicityValidationStore from './models/ToxicityValidationModel';\n\nimport commentsStore from 'modules/CommentList/store';\nimport { commentsApis } from 'services/apis';\nimport { logCommentToPublisher, logCommentToWordPress } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\nimport translation from 'stores/translationStore';\nimport widgetStore from 'stores/widgetStore';\n\nclass WriteBox extends CommentBox {\n  @observable\n  public toxicityModel: ToxicityValidationStore = new ToxicityValidationStore();\n  public spamModel: SpamValidationStore = new SpamValidationStore();\n\n  constructor(private parentID: number, private successCallback: (comment: Comments.ServerComment) => void) {\n    super();\n  }\n\n  /**\n   * Determines if commenting is disabled\n   * @return {boolean}\n   */\n  @computed\n  public get disabled(): boolean {\n    return urlSearchParams.get('d') === 'true' || widgetStore.commentingDisabled;\n  }\n\n  public set value(commentText: string) {\n    this._value = commentText;\n\n    // Remove alerts on comment change\n    if (commentText.length > 0) {\n      this.alert.value = null;\n    }\n    /** Reset spam model on every comment change */\n    this.spamModel.value = 0;\n    /** Calculate toxicity on comment change */\n    if (this.toxicityModel.enabled) {\n      this.toxicityModel.getValue(this.text, 1000);\n    }\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  @action\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      makeDevLog(err, 'error');\n      this.inProgress = false;\n      return;\n    }\n\n    /** Check toxicity if needed */\n    if (this.toxicityModel.enabled) {\n      if (this.toxicityModel.loading) {\n        await this.toxicityModel.getValue(this.text);\n      }\n\n      if (this.toxicityModel.value > this.toxicityModel.limit) {\n        this.alert.value = {\n          message: translation.messages.toxicityLimit.replace('%d', this.toxicityModel.limit.toString()),\n          type: 'warning',\n        };\n        this.inProgress = false;\n        return;\n      }\n    }\n\n    /** Check spam if enabled */\n    if (this.spamModel.enabled) {\n      if (!this.spamModel.value) {\n        this.spamModel.value = await this.spamModel.getValue(this.text);\n      }\n\n      if (this.spamModel.value > this.spamModel.limit && !this.spamModel.confirmed) {\n        this.alert.value = { type: 'warning', message: translation.messages.spamComment };\n        this.inProgress = false;\n        this.spamModel.confirmed = true;\n        return;\n      }\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    /** 🏁 And only now we are ready to send comment to the server */\n    try {\n      const response = await commentsApis.post(\n        this.computedHTML,\n        this.toxicityModel.value || 0,\n        this.spamModel.value || 0,\n        this.parentID,\n        0,\n        'en'\n      );\n\n      if (response.data && response.data.state === 0) {\n        this.successCallback(response.data);\n        this.alert.value = alertMessages[CommentErrors.success];\n        // Updated total comments count\n        commentsStore.totalComments++;\n        // Send Event to publisher\n        logCommentToPublisher(response.data);\n        // Send event to sync with WP if comment approved\n        if (commentsStore.syncWithWP) {\n          // Sync data with WordPress\n          logCommentToWordPress(response.data);\n        }\n      } else {\n        this.alert.value = alertMessages[CommentErrors.moderation];\n      }\n\n      this.value = ''; // Clear comment box\n      this.images.items = [];\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default WriteBox;\n","import commentsStore from 'modules/CommentList/store';\nimport widgetStore from 'stores/widgetStore';\nimport CommentBox, { alertMessages, CommentErrors } from './models/CommentBox';\nimport transliterationStore from './models/Transliteration';\n\nimport { commentsApis } from 'services/apis';\nimport { logCommentToPublisher, logCommentToWordPress } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\n\nclass ForeignBox extends CommentBox {\n  public toggleBox = transliterationStore.toggleBox;\n  public toggleLanguage = transliterationStore.toggleLanguage;\n\n  constructor(private parentID: number, private successCallback: (comment: Comments.ServerComment) => void) {\n    super();\n  }\n\n  /**\n   * Determines if commenting is disabled\n   * @return {boolean}\n   */\n  public get disabled(): boolean {\n    return urlSearchParams.get('d') === 'true' || widgetStore.commentingDisabled;\n  }\n\n  public set value(commentText: string) {\n    this.alert.value = null;\n    this._value = commentText;\n  }\n\n  public get value(): string {\n    return this._value;\n  }\n\n  get language() {\n    return transliterationStore.language;\n  }\n\n  /** Since we can't control textarea value with google transliteration library, we are forced to update value using HTML when it's needed */\n  private updateTextareaValue() {\n    const textarea = document.querySelector(`#${this.id}`);\n    if (textarea instanceof HTMLTextAreaElement) {\n      textarea.value = this.value;\n    }\n  }\n\n  public onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    if (e instanceof Event) {\n      e.preventDefault();\n    }\n\n    this.inProgress = true;\n    this.alert.value = null;\n\n    try {\n      await this.preSubmit();\n    } catch (err) {\n      console.warn('error', err); // tslint:disable-line\n      this.inProgress = false;\n      return;\n    }\n\n    /** 🏁 And only now we are ready to send comment to the server */\n    try {\n      const response = await commentsApis.post(\n        this.computedHTML,\n        0,\n        0,\n        this.parentID,\n        0,\n        (document as any).documentElement.lang || 'en'\n      );\n\n      if (response.data && response.data.state === 0) {\n        this.successCallback(response.data);\n        this.alert.value = alertMessages[CommentErrors.success];\n        // Updated total comments count\n        commentsStore.totalComments++;\n        // Send Event to publisher\n        logCommentToPublisher(response.data);\n        // Send event to sync with WP if comment approved\n        if (commentsStore.syncWithWP) {\n          // Sync data with WordPress\n          logCommentToWordPress(response.data);\n        }\n      } else {\n        this.alert.value = alertMessages[CommentErrors.moderation];\n      }\n\n      this.value = ''; // Clear comment box\n      this.images.items = [];\n      this.updateTextareaValue();\n    } catch (error) {\n      this.alert.value = alertMessages[error.message] || alertMessages.unknown;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n}\n\nexport default ForeignBox;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Avatar from '@vuukle/avatar';\nimport Dropdown from '@vuukle/dropdown';\nimport Icon from '@vuukle/icon';\nimport { Menu } from '@vuukle/menu';\nimport Tag from '@vuukle/tag';\nimport { slugify } from '@vuukle/utils';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  profile: User;\n  signOut?: () => void;\n  showComments: () => void;\n}\n\nconst StyledDropDown = styled(props => <Dropdown {...props} />)`\n  .v-menu {\n    ${props => (props.theme.isArabic ? 'right: 0; left: auto;' : 'left: 0; right: auto;')};\n  }\n`;\n\n/**\n * @name ProfileRow\n * This component used to show profile dropdown below write comment box.\n * @render React\n */\nconst ProfileRow: React.FunctionComponent<IProps> = ({ profile, showComments, signOut }) => (\n  <div style={{ marginBottom: '10px' }}>\n    <StyledDropDown\n      menu={\n        <Menu>\n          <Menu.Item href={`https://vuukle.com/user/by/${slugify(profile.name)}/${profile.id}`} target=\"_blank\">\n            {translation.profile.myProfile}\n          </Menu.Item>\n          <Menu.Item onClick={showComments}>{translation.profile.myComments}</Menu.Item>\n          {signOut && <Menu.Item onClick={signOut}>{translation.profile.signOut}</Menu.Item>}\n        </Menu>\n      }\n    >\n      <a href=\"#no\" style={{ outline: 'none', boxShadow: 'none' }}>\n        <Avatar name={profile.name} src={profile.avatar} hash={profile.id} /> <span>{profile.name}</span>\n        {profile.isModerator && (\n          <Tag type=\"warning\" style={{ margin: '0 3px' }}>\n            {translation.common.moderator}\n          </Tag>\n        )}\n        <Icon type=\"caret\" />\n      </a>\n    </StyledDropDown>\n  </div>\n);\n\nexport default ProfileRow;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport SocialButton from '@vuukle/social-button';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  /** Show/Hide Facebook auth */\n  facebook: boolean;\n  /** Show/Hide Google auth */\n  google: boolean;\n  /** Show/Hide Twitter auth */\n  twitter: boolean;\n  /** Show/Hide Twitter auth */\n  disqus: boolean;\n\n  onClick: (social: 'facebook' | 'google' | 'twitter' | 'disqus') => void;\n}\n\nconst SocialAuthWrapper = styled.div`\n  margin-right: 10px;\n  > button {\n    margin-left: 5px;\n  }\n`;\n\nconst SocialAuth: React.FunctionComponent<IProps> = ({ onClick, disqus, facebook, google, twitter }) => (\n  <SocialAuthWrapper>\n    {facebook && (\n      <SocialButton\n        onClick={() => onClick('facebook')}\n        type=\"facebook\"\n        size=\"35px\"\n        title={translation.login.facebook}\n      />\n    )}\n    {google && (\n      <SocialButton onClick={() => onClick('google')} type=\"google\" size=\"35px\" title={translation.login.google} />\n    )}\n    {twitter && (\n      <SocialButton onClick={() => onClick('twitter')} type=\"twitter\" size=\"35px\" title={translation.login.twitter} />\n    )}\n    {disqus && (\n      <SocialButton onClick={() => onClick('disqus')} type=\"disqus\" size=\"35px\" title={translation.login.disqus} />\n    )}\n  </SocialAuthWrapper>\n);\n\nexport default SocialAuth;\n","import * as React from 'react';\n\ninterface IProps {\n  id: string;\n}\n\nconst PrivacyCheckbox: React.FunctionComponent<IProps> = ({ id }) => (\n  <div style={{ textAlign: 'right' }}>\n    <label htmlFor={`terms-${id}`}>\n      <input type=\"checkbox\" id={`terms-${id}`} name=\"terms\" required={true} />\n      <span>\n        I agree with Vuukle's{' '}\n        <a href=\"https://docs.vuukle.com/privacy-and-policy/\" target=\"_blank\" rel=\"noopener nofollow\">\n          Privacy Policy\n        </a>\n      </span>\n    </label>\n  </div>\n);\n\nexport default PrivacyCheckbox;\n","/**\n * @file Component to use for authorization with Password.\n */\nimport uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport translation from 'stores/translationStore';\n\nimport EmailInput from './components/EmailInput';\nimport PasswordInput from './components/PasswordInput';\nimport PrivacyCheckbox from './components/PrivacyCheckbox';\nimport StyledForm from './components/StyledForm';\n\ninterface IProps {\n  toggleView: () => void;\n}\n\n/** MobX injected props */\nimport { AuthStore } from 'modules/Auth/stores';\ninterface IInjectedProps {\n  authStore: AuthStore;\n}\n\ninterface IState {\n  /** Email input value */\n  email: string;\n  /** Password input value */\n  password: string;\n}\n\n@inject('authStore')\n@observer\nclass PasswordAuth extends React.Component<IProps, IState> {\n  public readonly state: Readonly<IState> = {\n    email: '',\n    password: '',\n  };\n\n  private id: string = uniqueId('pwd');\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   * @return {Props & InjectedProps}\n   */\n  get injected(): IProps & IInjectedProps {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  /**\n   * @name onSubmit\n   * @protected\n   * @description form submit event.\n   * @param {React.FormEvent<HTMLFormElement>} e - form event\n   * @returns {void}\n   */\n  protected onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    this.injected.authStore.signIn(this.state.email, this.state.password).then(() => {\n      if (!this.injected.authStore.error) {\n        this.setState({ email: '', password: '' });\n      }\n    });\n  };\n\n  private handleInputChange = (e: React.FormEvent<HTMLInputElement>) =>\n    this.setState({ [e.currentTarget.name as 'email']: e.currentTarget.value }); // FIXME: fix typings\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit}>\n        <EmailInput id={this.id} value={this.state.email} onChange={this.handleInputChange} />\n        <PasswordInput id={this.id} value={this.state.password} minLength={0} onChange={this.handleInputChange} />\n        <PrivacyCheckbox id={this.id} />\n        {/* Errors Alert */}\n        {error && (\n          <Alert type=\"error\" onClose={closeAlert}>\n            {this.injected.authStore.error}\n          </Alert>\n        )}\n        {/* Submit Button */}\n        <div style={{ textAlign: 'right' }}>\n          <span style={{ margin: '0 5px' }}>\n            Don't have an account?{' '}\n            <a href=\"#no\" onClick={this.props.toggleView}>\n              {translation.common.signUp}\n            </a>\n          </span>\n          <Button loading={inProgress} htmlType=\"submit\">\n            {translation.common.signIn}\n          </Button>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default PasswordAuth;\n","import * as React from 'react';\n\nimport Input from '@vuukle/input';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  id: string;\n  value: string;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n}\n\nconst NameInput: React.FunctionComponent<IProps> = ({ id, value, onChange }) => {\n  const namePattern = '^[^~`!#$%@^&*+=[\\\\];,/{}|\\\\\\\\\":<>?]*$';\n  return (\n    <Input\n      type=\"text\"\n      value={value}\n      pattern={namePattern}\n      name=\"name\"\n      id={`name-${id}`}\n      minLength={3}\n      maxLength={40}\n      placeholder={translation.common.name}\n      dir=\"auto\"\n      title={translation.common.invalidName}\n      onChange={onChange}\n      required={true}\n    />\n  );\n};\n\nexport default NameInput;\n","/**\n * @file Component to use for users authorization without password\n */\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport { AuthStore } from 'modules/Auth/stores';\nimport translation from 'stores/translationStore';\n\nimport EmailInput from './components/EmailInput';\nimport NameInput from './components/NameInput';\nimport PrivacyCheckbox from './components/PrivacyCheckbox';\nimport StyledForm from './components/StyledForm';\n\ninterface IInjectedProps {\n  authStore: AuthStore;\n}\n\ninterface IState {\n  /** Name input value */\n  name: string;\n  /** Email input value */\n  email: string;\n}\n\n@inject('authStore')\n@observer\nclass PasswordLessAuth extends React.Component<{}, IState> {\n  public readonly state: Readonly<IState> = {\n    email: '',\n    name: '',\n  };\n  private id: string = uniqueId('pwdless');\n\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   */\n  get injected(): IInjectedProps {\n    return this.props as IInjectedProps;\n  }\n\n  /**\n   * @name onSubmit\n   * @protected\n   * @description form submit event.\n   * @param {React.FormEvent<HTMLFormElement>} e - Form event\n   * @returns {void}\n   */\n  protected onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n\n    await this.injected.authStore.signInWithoutPassword(this.state.name, this.state.email);\n    if (!this.injected.authStore.error) {\n      this.setState({ email: '', name: '' });\n    }\n  };\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit} action=\"#\">\n        <NameInput\n          id={this.id}\n          value={this.state.name}\n          onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ name: e.currentTarget.value })}\n        />\n        <EmailInput\n          id={this.id}\n          value={this.state.email}\n          onChange={(e: React.FormEvent<HTMLInputElement>) => this.setState({ email: e.currentTarget.value })}\n        />\n        <PrivacyCheckbox id={this.id} />\n        {/* Errors Alert */}\n        {error && (\n          <Alert type=\"error\" onClose={closeAlert}>\n            {this.injected.authStore.error}\n          </Alert>\n        )}\n        {/* Submit Button */}\n        <div style={{ textAlign: 'right' }}>\n          <Button loading={inProgress} htmlType=\"submit\">\n            {translation.common.signIn}\n          </Button>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default PasswordLessAuth;\n","import uniqueId from 'lodash/uniqueId';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\n\nimport { AuthStore } from 'modules/Auth/stores';\nimport translation from 'stores/translationStore';\n\nimport EmailInput from './components/EmailInput';\nimport NameInput from './components/NameInput';\nimport PasswordInput from './components/PasswordInput';\nimport PrivacyCheckbox from './components/PrivacyCheckbox';\nimport StyledForm from './components/StyledForm';\n\ninterface IProps {\n  toggleView: () => void;\n}\n\ninterface IInjectedProps {\n  authStore: AuthStore;\n}\n\ninterface IState {\n  /** Email input value */\n  name: string;\n  /** Email input value */\n  email: string;\n  /** Password input value */\n  password: string;\n}\n\n@inject('authStore')\n@observer\nclass SignUp extends React.Component<IProps, IState> {\n  public readonly state: Readonly<IState> = {\n    email: '',\n    name: '',\n    password: '',\n  };\n  private id: string = uniqueId('su');\n\n  /**\n   * @name injected\n   * @description returns injected props by MobX\n   */\n  get injected(): IInjectedProps {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  /**\n   * @name onSubmit\n   * @protected\n   * @description form submit event.\n   * @param {React.FormEvent<HTMLFormElement>} e - From event\n   * @returns {void}\n   */\n  protected onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    this.injected.authStore.signUp(this.state.name, this.state.email, this.state.password).then(() => {\n      if (!this.injected.authStore.error) {\n        this.setState({ email: '', password: '', name: '' });\n      }\n    });\n  };\n\n  private handleInputChange = (e: React.FormEvent<HTMLInputElement>) =>\n    this.setState({ [e.currentTarget.name as 'email']: e.currentTarget.value }); // FIXME: fix typings\n\n  public render() {\n    const {\n      authStore: { closeAlert, error, inProgress },\n    } = this.injected;\n\n    return (\n      <StyledForm onSubmit={this.onSubmit}>\n        <NameInput id={this.id} value={this.state.name} onChange={this.handleInputChange} />\n        <EmailInput id={this.id} value={this.state.email} onChange={this.handleInputChange} />\n        <PasswordInput id={this.id} value={this.state.password} onChange={this.handleInputChange} />\n        <PrivacyCheckbox id={this.id} />\n        {/* Errors Alert */}\n        {error && (\n          <Alert type=\"error\" onClose={closeAlert}>\n            {this.injected.authStore.error}\n          </Alert>\n        )}\n        {/* Submit Button */}\n        <div style={{ textAlign: 'right' }}>\n          <span style={{ margin: '0 5px' }}>\n            Already have an account?{' '}\n            <a href=\"#\" onClick={this.props.toggleView}>\n              {translation.common.signIn}\n            </a>\n          </span>\n          <Button loading={inProgress} htmlType=\"submit\">\n            {translation.common.signUp}\n          </Button>\n        </div>\n      </StyledForm>\n    );\n  }\n}\n\nexport default SignUp;\n","import React from 'react';\n\nimport Button from '@vuukle/button';\n\ninterface IProps {\n  onClick: () => void;\n}\n\nconst SSOButton: React.FunctionComponent<IProps> = ({ onClick }) => {\n  return (\n    <div style={{ textAlign: 'right' }}>\n      <Button htmlType=\"button\" onClick={onClick}>\n        Sign up to post\n      </Button>\n    </div>\n  );\n};\n\nexport default SSOButton;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport SocialAuth from './components/SocialAuth';\nimport PasswordAuth from './PasswordAuth';\nimport PasswordlessAuth from './PasswordlessAuth';\nimport SignUp from './SignUp';\nimport SSO from './SSO';\n\ninterface IProps {\n  className?: string;\n}\n\n/** MobX injected props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\ninterface IInjectedProps extends IProps {\n  authStore: AuthStore;\n  userStore: UserStore;\n}\n\ninterface IState {\n  /**\n   * Toggle item to know if needed to show sign up or sign in form,\n   * as for password auth we have 2 views: sign in and sign up\n   */\n  showSignUp: boolean;\n}\n\n@inject('authStore', 'userStore')\n@observer\nclass Auth extends React.Component<IProps, IState> {\n  public readonly state: Readonly<IState> = {\n    showSignUp: false,\n  };\n\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  /**\n   * @name injected\n   * @description just returns safety typed injected props\n   * @returns {IInjectedProps}\n   */\n  get injected(): IInjectedProps {\n    return this.props as IInjectedProps;\n  }\n\n  /**\n   * @name toggleView\n   * @protected\n   * @description Toggles view for password auth configuration. So user can sign in or sign up\n   * @returns {void}\n   */\n  public toggleView = (): void => this.setState({ showSignUp: !this.state.showSignUp });\n\n  /**\n   * @name renderVuukleAuth\n   * @description Renders auth or sign up form based on configuration.\n   * It can be password/non-password auth or sign up\n   * @return {React.ReactElement<any>} SignUp or PasswordAuth, or Passwordless auth based on configuration\n   */\n  protected renderVuukleAuth = (): React.ReactElement<any> => {\n    /** Render password less auth if auth with password is disabled */\n    if (!this.injected.authStore.withPassword) {\n      return <PasswordlessAuth />;\n    } else if (this.state.showSignUp) {\n      /** Render sign up in case if password auth is enabled and view is toggled */\n      return <SignUp toggleView={this.toggleView} />;\n    } else {\n      /** Render password auth in case if password auth is enabled */\n      return <PasswordAuth toggleView={this.toggleView} />;\n    }\n  };\n\n  public render() {\n    /** If user is authorized we don't need to show auth */\n    if (this.injected.userStore.isAuthorized) {\n      return null;\n    }\n\n    const { signInWithSocial, withVuukle, openSSO } = this.injected.authStore;\n\n    const withSocial =\n      this.injected.authStore.facebookEnabled ||\n      this.injected.authStore.googleEnabled ||\n      this.injected.authStore.twitterEnabled ||\n      this.injected.authStore.disqusEnabled;\n\n    return (\n      <section className={this.props.className}>\n        {/** Render social auth if configured */}\n        <div>\n          <SocialAuth\n            facebook={this.injected.authStore.facebookEnabled}\n            google={this.injected.authStore.googleEnabled}\n            twitter={this.injected.authStore.twitterEnabled}\n            disqus={this.injected.authStore.disqusEnabled}\n            onClick={signInWithSocial}\n          />\n        </div>\n        {/** Render Vuukle Auth if configured */}\n        <div>{withVuukle && this.renderVuukleAuth()}</div>\n        {/** Render SSO only button if everything else is disabled */}\n        {!withVuukle && !withSocial && <SSO onClick={openSSO} />}\n      </section>\n    );\n  }\n}\n\nconst AuthStyled = styled(Auth)`\n  margin-top: 10px;\n  display: flex;\n  justify-content: space-between;\n  > div {\n    &:first-child {\n      min-width: 170px;\n      max-width: 100%;\n      flex-grow: 1;\n    }\n    &:last-child {\n      flex-grow: 3;\n      width: 100%;\n      max-width: 65%;\n    }\n  }\n\n  @media (max-width: 470px) {\n    flex-direction: column;\n    > div:last-child {\n      margin-top: 10px;\n      max-width: 100%;\n    }\n  }\n`;\n\nexport default AuthStyled;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\n\nimport translation from 'stores/translationStore';\n\nimport ProfileRow from 'components/ProfileRow';\nimport Auth from 'modules/Auth';\nimport { openModalWidgetProfile } from 'services/communication';\n\nexport interface IProps {\n  /** Function which will be called on form submit */\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n  /** Comment box id */\n  id: string;\n  /** Form/Comment submit is in progress */\n  inProgress: boolean;\n  /** Alert object to show message */\n  alert: { type: 'success' | 'warning' | 'error'; message: string } | null;\n  /** Function to close alert. So we allow users to close alert earlier */\n  closeAlert: () => void;\n  /** If collapsed then only button 'Write Comment' shown first which expands box on click */\n  isCollapsed: boolean;\n  /** Expand function for isCollapsed: true */\n  expand: () => void;\n  /** if block is main or opened inside reply. Needed for some logic things. */\n  isReply?: boolean;\n  /** Commenting Disabled */\n  isDisabled: boolean;\n  /** Textarea was clicked (User wants to write comment) and we can show additional UI items */\n  isClicked: boolean;\n}\n\n/** Injected MobX Stores Props */\nimport { AuthStore, UserStore } from 'modules/Auth/stores';\ninterface IInjectedProps extends IProps {\n  userStore: UserStore;\n  authStore: AuthStore;\n}\n\n@inject('userStore', 'authStore')\n@observer\nclass FormWrapper extends React.Component<IProps, {}> {\n  /** Injected stores */\n  get injected() {\n    return this.props as IInjectedProps;\n  }\n\n  /**\n   * Sends message to the platform to show comments widget with needed params\n   * @return {void}\n   */\n  protected openProfileModal = (): void =>\n    openModalWidgetProfile({\n      avatar: (this.injected.userStore.details as User).avatar,\n      id: (this.injected.userStore.details as User).id,\n      name: (this.injected.userStore.details as User).name,\n      points: (this.injected.userStore.details as User).points,\n    });\n\n  public render() {\n    /** Commenting has been disabled by publisher */\n    if (this.props.isDisabled) {\n      return <Alert>{translation.messages.commentsClosed /* Comments are now closed. */}</Alert>;\n    }\n\n    /** Check if we need to collapse main comment box on widget load. */\n    if (this.props.isCollapsed && !this.props.isReply) {\n      return (\n        <Button onClick={this.props.expand} style={{ width: '100%' }}>\n          {translation.buttons.addComment /* Add Comment */}\n        </Button>\n      );\n    }\n\n    return (\n      <div>\n        <form onSubmit={this.props.handleSubmit}>\n          {this.injected.userStore.details && (\n            <ProfileRow\n              profile={this.injected.userStore.details}\n              showComments={this.openProfileModal}\n              signOut={this.injected.authStore.withSSO ? undefined : this.injected.authStore.signOut}\n            />\n          )}\n          {this.props.children}\n          <div style={{ marginTop: '10px' }}>\n            {this.props.alert && (\n              <Alert type={this.props.alert.type} onClose={this.props.closeAlert}>\n                {this.props.alert.message}\n              </Alert>\n            )}\n            {this.injected.userStore.isAuthorized && (\n              <div style={{ textAlign: 'right' }}>\n                <Button loading={this.props.inProgress} htmlType=\"submit\">\n                  {translation.buttons.post}\n                </Button>\n              </div>\n            )}\n          </div>\n        </form>\n        {this.props.isClicked && <Auth />}\n      </div>\n    );\n  }\n}\n\nexport default FormWrapper;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport CommentStoreModel from 'modules/CommentList/store/CommentItem';\n\nimport EnglishBox from './components/EnglishBox';\nimport ForeignBox from './components/ForeignBox';\n\nimport EnglishBoxStore from './stores/EnglishBox';\nimport ForeignBoxStore from './stores/ForeignBox';\n\nimport FormWrapper from './components/FormWrapper';\n\ninterface IProps {\n  /**\n   * Add comment callback.\n   * In general this prop is just a function which is used to add comment to the needed place in the store\n   */\n  addComment: (comment: Comments.ServerComment) => void;\n  /**\n   * It's id of the parent comment. Needed if we put reply box.\n   * Use 0 for comment action (comment that appears as main in feed) and real `parentId` for an reply action\n   */\n  parentId: number;\n  /**\n   * Comment edit mode\n   * @default false\n   */\n  editComment?: CommentStoreModel;\n}\n\n/** Injected Store Props */\nimport { UserStore } from 'modules/Auth/stores';\nimport { WidgetStore } from 'stores/widgetStore';\ninterface IInjectedProps extends IProps {\n  userStore: UserStore;\n  widgetStore: WidgetStore;\n}\n\n/**\n * @name HOCDecision\n * Decides which editor to show for user based on language publisher selected.\n * For english we show one editor and for non-english another with a transliteration plugin.\n * @render React\n * Main comment box:\n * @example <HOCDecision />\n * Reply box:\n * @example <HOCDecision addComment={(comment) => console.log('Comment has been added:', comment)} parentId={1} />}\n */\n@inject('widgetStore', 'userStore')\n@observer\nclass HOCDecision extends React.Component<IProps, {}> {\n  public store: EnglishBoxStore | ForeignBoxStore;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.store =\n      this.injected.widgetStore.language !== 'en'\n        ? new ForeignBoxStore(props.parentId, props.addComment)\n        : new EnglishBoxStore(props.parentId, props.addComment);\n  }\n\n  get injected() {\n    return this.props as IProps & IInjectedProps;\n  }\n\n  public renderCommentBox(): React.ReactElement | null {\n    /** Decide which box we need to show based on publisher configuration */\n    if (this.store instanceof ForeignBoxStore) {\n      return <ForeignBox foreignStore={this.store} />;\n    }\n\n    return <EnglishBox boxStore={this.store} authorized={this.injected.userStore.isAuthorized} />;\n  }\n\n  public render() {\n    return (\n      <FormWrapper\n        handleSubmit={this.store.onSubmit}\n        id={this.store.id}\n        inProgress={this.store.inProgress}\n        alert={this.store.alert.value}\n        closeAlert={this.store.alert.close}\n        expand={() => (this.store.hidden = false)}\n        isCollapsed={this.store.hidden}\n        isReply={this.props.parentId !== 0}\n        isDisabled={this.store.disabled}\n        isClicked={!this.store.minimized}\n      >\n        {this.renderCommentBox()}\n      </FormWrapper>\n    );\n  }\n}\n\nexport default HOCDecision;\n","import { observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport Alert from '@vuukle/alert';\nimport Button from '@vuukle/button';\nimport Comment from '@vuukle/comment';\nimport Tag from '@vuukle/tag';\nimport TruncateText from '@vuukle/truncate-text';\n\nimport CommentModel from 'modules/CommentList/store/CommentItem';\nimport EditCommentBox from 'modules/EditCommentBox';\nimport WriteComment from 'modules/WriteComment';\nimport translation from 'stores/translationStore';\n\nimport { IAlert } from 'stores/models/Alert';\n\ninterface ICommentProps {\n  comment: CommentModel;\n  isModerator: boolean;\n  /**\n   * Highlight comment with border\n   * @default false\n   */\n  highlighted?: boolean;\n\n  className?: string;\n}\n\nconst Wrapper = styled.div`\n  margin: 10px 0;\n  padding-bottom: 10px;\n  &:not(:last-child) {\n    border-bottom: 0.05rem solid ${(props) => (props.theme.isDark ? '#757575' : '#e7e9ed')};\n  }\n`;\n\nconst RepliesWrapper = styled('div')`\n  margin-left: 15px;\n  margin-top: 15px;\n  ${Wrapper} {\n    border-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\n\n@observer\nclass CommentItem extends React.Component<ICommentProps> {\n  public static defaultProps: Partial<ICommentProps> = {\n    highlighted: false,\n  };\n\n  /**\n   * @name getDropdownOptions\n   * @description creates array of comment actions for dropdown\n   */\n  protected getDropdownOptions = () => {\n    const options: Array<{ name: string; onClick: () => void }> = [\n      {\n        name: `${this.props.comment.collapsed ? translation.common.expand : translation.common.collapse}`,\n        onClick: this.props.comment.collapse,\n      },\n    ];\n\n    if (this.props.comment.isOwner) {\n      options.unshift({\n        name: 'Edit Comment',\n        onClick: () => (this.props.comment.editMode = true),\n      });\n    }\n    /** Detect if it's comment owner to show another comment actions */\n    if (this.props.comment.isOwner) {\n      options.unshift({\n        name: translation.profile.removeComment,\n        onClick: () => (window as any).open('https://vuukle.com/user/lock?to=comments', '_blank'),\n      });\n    } else {\n      options.unshift({ name: translation.common.report, onClick: this.props.comment.report });\n    }\n    /** Add one more option to moderate comment */\n    if (this.props.isModerator) {\n      options.unshift({ name: 'Reject Comment', onClick: this.props.comment.reject });\n    }\n    return options;\n  };\n\n  /**\n   * @name renderCommentHeader\n   * @description get content for comment header\n   */\n  protected renderCommentHeader = (): JSX.Element | null => {\n    const { authorType } = this.props.comment.data;\n    /**\n     * 1 - Admin\n     * 2 - Author\n     * 3 - Moderator\n     */\n    if (authorType === 1 || authorType === 2 || authorType === 3) {\n      return (\n        <Tag type=\"warning\" key=\"mod\" style={{ verticalAlign: 'top', margin: '0 5px' }}>\n          {translation.common.moderator}\n        </Tag>\n      );\n    }\n\n    return null;\n  };\n\n  /**\n   * Renders alert based on passed alert obj\n   * @param {IAlert} alert - alert obj with message and type\n   * @param {function} onClose - function to call once alert close button clicked\n   */\n  public renderAlert = (alert: IAlert, onClose: () => void) => (\n    <Alert type={alert.type} onClose={onClose}>\n      <div dangerouslySetInnerHTML={{ __html: alert.message }} />\n    </Alert>\n  );\n\n  public render() {\n    const { className, comment } = this.props;\n\n    return (\n      <Wrapper className={className}>\n        {/** Top Alert for errors/warning */}\n        {comment.topAlert.value && this.renderAlert(comment.topAlert.value, comment.topAlert.close)}\n\n        {comment.editMode && (\n          <EditCommentBox comment={this.props.comment} onClose={() => (this.props.comment.editMode = false)} />\n        )}\n\n        {!comment.editMode && !comment.hidden && (\n          <Comment\n            className=\"v-comment\"\n            name={comment.data.name}\n            hash={comment.data.userId}\n            onUserClick={comment.showCommenterProfile}\n            avatar={comment.data.pictureUrl}\n            comment={\n              <TruncateText seeMore={translation.common.readMore}>\n                <span dangerouslySetInnerHTML={{ __html: comment.getCommentTextForRender() }} />\n              </TruncateText>\n            }\n            points={\n              comment.data.userPoints\n                ? `${comment.data.userPoints} ${\n                    comment.data.userPoints === 1 ? translation.common.point : translation.common.points\n                  }`\n                : undefined\n            }\n            header={this.renderCommentHeader()}\n            likes={comment.data.likeCount}\n            dislikes={0}\n            date={comment.data.timeago}\n            minimize={comment.collapsed}\n            actions={[\n              <Comment.Action key=\"1\">\n                <Button type=\"subtle\" onClick={comment.toggleLike} active={comment.currentSessionLiked} sm={true}>\n                  👍 <strong>{comment.data.likeCount}</strong>\n                </Button>\n              </Comment.Action>,\n              <Comment.Share key=\"2\" onClick={comment.share}>\n                {translation.common.share}\n              </Comment.Share>,\n              <Comment.Action key=\"3\">\n                <a\n                  href=\"#no\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    comment.toggleReplyBox();\n                  }}\n                >\n                  {translation.common.reply /* Reply */}\n                </a>\n              </Comment.Action>,\n            ]}\n            options={this.getDropdownOptions()}\n            highlighted={this.props.highlighted}\n          />\n        )}\n\n        {/** Bottom Alert for errors/warning */}\n        {comment.bottomAlert.value && this.renderAlert(comment.bottomAlert.value, comment.bottomAlert.close)}\n\n        {/** Write comment box with sing in */}\n        {comment.showReplyBox && (\n          <div style={{ margin: '10px 0' }}>\n            <WriteComment\n              // TODO: mb rename this prop\n              addComment={(commentItem: Comments.ServerComment) => {\n                comment.addReply(commentItem); // Add reply to this comment\n                comment.toggleReplyBox(); // Hide reply on success\n              }}\n              parentId={comment.data.id}\n            />\n          </div>\n        )}\n        {/* Replies */}\n        {!comment.collapsed && comment.replies.length > 0 && (\n          <RepliesWrapper>\n            {comment.replies.map((reply: CommentModel) => (\n              <CommentItem isModerator={this.props.isModerator} comment={reply} key={comment.data.id} />\n            ))}\n          </RepliesWrapper>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default CommentItem;\n","import { inject, observer } from 'mobx-react';\nimport * as React from 'react';\n\nimport Button from '@vuukle/button';\nimport Loader from '@vuukle/loader';\n\nimport translation from 'stores/translationStore';\nimport CommentModel from './store/CommentItem';\n\nimport SortingRow from 'components/SortingRow';\nimport Comment from './components/CommentItem';\n\n/** MobX injected props */\nimport { UserStore } from 'modules/Auth/stores';\nimport { CommentsStore } from './store';\ninterface IInjectedProps {\n  commentsStore: CommentsStore;\n  userStore: UserStore;\n}\n\n@inject('commentsStore', 'userStore')\n@observer\nexport default class Comments extends React.Component {\n  get injected() {\n    return this.props as IInjectedProps;\n  }\n\n  public render() {\n    const { comments, loading, totalComments, moreAvailable, sorting, selectedComment } = this.injected.commentsStore;\n    const isModerator = (this.injected.userStore.details && this.injected.userStore.details.isModerator) || false;\n\n    if (loading && totalComments <= 0) {\n      return <Loader size=\"15px\" style={{ margin: '20px auto' }} />;\n    }\n\n    if (totalComments <= 0) {\n      return <p style={{ textAlign: 'center' }}>{translation.messages.noComments}</p>;\n    }\n\n    return (\n      <div>\n        <SortingRow active={sorting} onSelect={this.injected.commentsStore.changeSorting} />\n        <div style={{ margin: '15px 0' }}>\n          {selectedComment && <Comment comment={selectedComment} isModerator={isModerator} highlighted={true} />}\n          {loading && comments.length <= 0 && <Loader size=\"15px\" />}\n          {!loading && comments.length <= 0 && (\n            <p style={{ textAlign: 'center' }}>{translation.messages.noCommentsInSorting}</p>\n          )}\n          {comments.map((comment: CommentModel) => (\n            <Comment comment={comment} isModerator={isModerator} key={comment.data.id} />\n          ))}\n        </div>\n        {moreAvailable && (\n          <Button\n            onClick={this.injected.commentsStore.loadMoreComments}\n            loading={loading}\n            style={{ display: 'block', width: '100%' }}\n          >\n            {translation.buttons.loadMore /* Load More */}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport Button from '@vuukle/button';\nimport Card from '@vuukle/card';\nimport Tag from '@vuukle/tag';\nimport translation from 'stores/translationStore';\n\ninterface IProps {\n  articles: Articles.Article[];\n  /**\n   * Show or hide button to load more articles\n   * @default false\n   */\n  showMoreButton: boolean;\n  /**\n   * On click handler for more button click\n   */\n  onMoreButtonClick: () => void;\n  isVerticalCards?: boolean;\n  className?: string;\n}\n\nconst ArticlesWrapper: React.FunctionComponent<IProps> = ({\n  articles,\n  showMoreButton = false,\n  onMoreButtonClick,\n  isVerticalCards = false,\n  className = '',\n}) => {\n  return (\n    <div className={className}>\n      <div>\n        {articles.map((article) => (\n          <Card\n            key={article.articleId}\n            heading={article.excerpt || article.title}\n            img={article.articleAvatar}\n            link={article.uri}\n            linkRel=\"noopener nofollow\"\n            mode={isVerticalCards ? 'vertical' : 'horizontal'}\n          >\n            {article.commentCount > 0 && (\n              <Tag style={{ marginRight: '5px' }}>\n                {article.commentCount}{' '}\n                {article.commentCount > 1 ? translation.commentText.whenX : translation.commentText.when1}\n              </Tag>\n            )}\n          </Card>\n        ))}\n      </div>\n      {showMoreButton && <Button onClick={onMoreButtonClick}>{translation.buttons.showMoreArticles}</Button>}\n    </div>\n  );\n};\n\nconst StyledArticlesWrapper = styled(ArticlesWrapper)`\n  > div {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n  }\n\n  ${Button} {\n    display: block;\n    width: 100%;\n  }\n\n  ${Card} {\n    flex: 0 49%;\n    margin-bottom: 10px;\n  }\n\n  @media (max-width: 450px) {\n    ${Card} {\n      flex: 0 100%;\n    }\n  }\n`;\n\nexport default StyledArticlesWrapper;\n","import { observer } from 'mobx-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport translation from 'stores/translationStore';\nimport articlesStore, { ArticlesStore } from './store';\n\nimport ArticlesWrapper from './components/ArticlesWrapper';\n\ninterface IProps {\n  className?: string;\n}\n\n/** Component Wrapper Styles */\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  padding: 0 1px;\n  h4 {\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n`;\n\n@observer\nclass Articles extends React.Component<IProps> {\n  private articlesStore: ArticlesStore = articlesStore;\n\n  public render() {\n    if (this.articlesStore.disabled || this.articlesStore.articles.length <= 0) {\n      return null;\n    }\n\n    return (\n      <Wrapper className={this.props.className}>\n        <h4>{translation.recommendedStories /* 'Talk of the town' */}</h4>\n        <ArticlesWrapper\n          articles={this.articlesStore.articles}\n          isVerticalCards={this.articlesStore.isVerticalCards}\n          showMoreButton={this.articlesStore.moreArticlesAvailable}\n          onMoreButtonClick={this.articlesStore.showMoreArticles}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Articles;\n","import { Provider } from 'mobx-react';\nimport * as React from 'react';\n// APIs\nimport { commentsApis } from 'services/apis';\n\n// Store\nimport { authStore, userStore } from 'modules/Auth/stores';\nimport commentsStore, { SortingType } from 'modules/CommentList/store';\nimport articlesStore from 'modules/RecommendedArticles/store';\nimport widgetStore from 'stores/widgetStore';\n\n// Containers\nimport Footer from 'components/Footer';\nimport Header from 'containers/Header';\nimport CommentsList from 'modules/CommentList';\nimport Articles from 'modules/RecommendedArticles';\nimport WriteComment from 'modules/WriteComment';\n// Utils\nimport { syncInitialLoadPorthole } from 'services/communication';\n\nconst stores = {\n  authStore,\n  commentsStore,\n  userStore,\n  widgetStore,\n};\n\n/**  We need to start initial load request */\ncommentsApis.initialLoading().then((response: any) => {\n  // tslint:disable-next-line\n  /** Server didn't load article and didn't return error */\n  if (!response.success || !(response.data instanceof Object)) {\n    return;\n  }\n  /** Comments was loaded */\n  commentsStore.initialLoadSuccess(response.data.comments.items, response.data.article.commentCount);\n  commentsStore.sorting = SortingType[(response.data.sortedBy as string) || 'Latest'];\n  articlesStore.setArticlesFromServer(response.data.recommended || [], response.data.defaultTotCount);\n  widgetStore.recommendCount = response.data.recommendCount || 0;\n  widgetStore.commentingDisabled = response.data.article.disabled || false;\n  /** Share data with outer widgets */\n  syncInitialLoadPorthole(response);\n});\n\n/** Main APP wrapper */\nexport default class App extends React.Component {\n  public render() {\n    return (\n      <Provider {...stores}>\n        <div>\n          <Header />\n          <WriteComment addComment={commentsStore.addComment} parentId={0} />\n          <CommentsList />\n          <Articles />\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n","/**\n * index.ts\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\nimport './polyfills';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { initializeListener } from 'services/communication';\nimport widgetStore from 'stores/widgetStore';\nimport App from './containers/App';\n\nconst HTML_NODE = document.querySelector('html');\nconst BODY_NODE = document.querySelector('body');\nconst MOUNT_NODE = document.getElementById('app');\n\n/* ========================================================\n * 💅 Global Styles and Theming\n======================================================== */\nimport { generateGlobalStyles, generateTheme } from '@vuukle/widget-theme';\nimport { ThemeProvider } from 'styled-components';\nconst theme = generateTheme(widgetStore.theme, widgetStore.language === 'ar');\nconst GlobalStyles = generateGlobalStyles(theme);\n\n/* ========================================================\n * 🏞️ Render React App\n======================================================== */\nconst render = () =>\n  ReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <div>\n        <GlobalStyles />\n        <App />\n      </div>\n    </ThemeProvider>,\n    MOUNT_NODE\n  );\n\nrender();\n\n/* ========================================================\n* Detect APP language\n======================================================== */\nif (HTML_NODE !== null) {\n  if (widgetStore.language === 'ar') {\n    HTML_NODE.setAttribute('dir', 'rtl');\n  }\n  if (widgetStore.language !== 'en') {\n    HTML_NODE.setAttribute('lang', widgetStore.language);\n  }\n}\n\n/* ========================================================\n* Check for Opera Mini in Saving mode\n======================================================== */\nif (\n  navigator.userAgent.indexOf('Opera Mini') !== -1 ||\n  Object.prototype.toString.call((window as any).operamini) === '[object OperaMini]'\n) {\n  const element = document.createElement('div');\n  element.style.border = '1px solid #ffb995';\n  element.style.backgroundColor = '#fff8f4';\n  element.style.padding = '8px';\n  element.style.margin = '10px';\n  element.innerHTML = 'Please disable Opera Mini \"Saving mode\" to have a correct working page and comments widget.';\n  // Insert to body\n  if (BODY_NODE) {\n    BODY_NODE.insertBefore(element, BODY_NODE.firstChild); // insert message\n  }\n}\n\n/* ========================================================\n* 💬 Listen for messages from porthole\n* [replace to another file if we will add more handlers]\n======================================================== */\ninitializeListener();\n\n/* ========================================================\n* 🔁 HOT reload\n======================================================== */\nif ((module as any).hot && process.env.NODE_ENV === 'development' && MOUNT_NODE instanceof HTMLElement) {\n  // Hot reloadable React components and translation json files\n  // modules.hot.accept does not accept dynamic dependencies,\n  // have to be constants at compile-time\n  (module as any).hot.accept('./containers/App', () => {\n    ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n    render();\n  });\n}\n\n/* ========================================================\n Ohh!😱 And one more... we need to watch height of app since\n we will be rendered inside iframe\n======================================================== */\nlet oldHeight = MOUNT_NODE instanceof HTMLElement ? MOUNT_NODE.offsetHeight : 0;\n\nsetInterval(() => {\n  // We add 5 pixels to height because we can have for example in bottom CircleProgress and while it will\n  // be animated scrollbar will appear/disappear because animation is faster than this height processing\n  const newHeight: number = MOUNT_NODE instanceof HTMLElement ? MOUNT_NODE.offsetHeight + 5 : 0;\n\n  if (newHeight !== oldHeight) {\n    if (window.parent.postMessage) {\n      oldHeight = newHeight;\n\n      window.parent.postMessage(\n        JSON.stringify({\n          data: { height: newHeight },\n          sourceOrigin: (window as any).origin,\n          sourceWindowName: window.name,\n          type: 'resize',\n          widget: 'emotes',\n        }),\n        '*'\n      );\n    }\n  }\n  // tslint:disable-next-line\n}, 200);\n\n/* ========================================================\n* and one more... 😃 Log Vuukle Initialization\n======================================================== */\n// tslint:disable-next-line\nconsole.log(\n  `%c[VUUKLE] Comments widget initialized! Version: ${\n    process.env.VERSION\n  }. Need help? Reach us at support[at]vuukle[dot]com`,\n  'color:#039BE5;'\n);\n","/**\n * Serialize object\n * @param {object} obj - object which needs to be serialized\n * @returns {string} - Example: ross=123&name=ross\n */\nconst serialize = (obj: object): string => {\n  if (!(obj instanceof Object)) {\n    return '';\n  }\n  return Object.keys(obj)\n    .filter((key) => obj[key] !== undefined && obj[key] !== null)\n    .map((key) => key + '=' + obj[key])\n    .join('&');\n};\n\nexport class Request {\n  private xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  constructor(\n    public method: 'GET' | 'POST' | 'DELETE',\n    public url: string,\n    public requireAuth: boolean = false,\n    public contentType?: string,\n    public baseParams: object = {}\n  ) {}\n\n  /**\n   * Public send\n   * @param {object} params - additional params we want to add to response\n   * @return {Promise}\n   */\n  public send = (params: {}): Promise<object | Error> => {\n    return new Promise((resolve, reject) => {\n      const mergedParams = { ...this.baseParams, ...params };\n      const url = this.method === 'GET' ? `${this.url}?${serialize(mergedParams)}` : this.url;\n\n      this.xhr.open(this.method, url, true /* Async */);\n\n      if (this.contentType) {\n        this.xhr.setRequestHeader('Content-type', 'application/json');\n      }\n\n      this.xhr.onload = () => resolve(JSON.parse(this.xhr.response));\n\n      this.xhr.onerror = () => reject(new Error(this.xhr.statusText));\n      this.xhr.onabort = () => reject(new Error('cancelled'));\n\n      if (this.method === 'GET') {\n        this.xhr.send();\n      } else {\n        this.xhr.send(JSON.stringify(mergedParams));\n      }\n    });\n  };\n\n  /**\n   * Cancel pending request\n   * @return {void}\n   */\n  public cancel = (): void => this.xhr.abort();\n}\n\nexport default Request;\n","import { makeRequest } from '@vuukle/utils';\nimport { userStore } from 'modules/Auth/stores';\nimport commentsStore from 'modules/CommentList/store';\nimport articlesStore from 'modules/RecommendedArticles/store';\nimport widgetStore from 'stores/widgetStore';\nimport { hashCode } from 'utils';\nimport Request from 'utils/req';\nimport PerspectiveAPI from './PerspectiveAPI';\n\nexport const commentsApis = {\n  /**\n   * Use it for load more or when comments sorting changed\n   * @exports\n   *\n   * @param {string} sortBy - Order in which to load comments\n   * @param {number | undefined} start - from which comment to start loading\n   * Needed to get next page of comments. If falsy then 1st page will be loaded.\n   */\n  get: new Request('GET', `${process.env.API_URL}/api/v1/Comments/getCommentFeedBySort`, false, undefined, {\n    apiKey: widgetStore.apiKey,\n    articleId: widgetStore.article.id,\n    host: widgetStore.article.host,\n    pageSize: 5,\n    sortBy: 'get_latest',\n    start: 0,\n  }),\n  /** Use it to load one comment by ID\n   *\n   * @param commentId - ID of the comment to get details\n   * @return {Promise<any>}\n   */\n  getByID: (commentId: string): Promise<any> =>\n    makeRequest('GET', `${process.env.API_URL}/api/v1/Comments/loadFullComment`, {\n      commentId,\n    }),\n  /**\n   * Initial Load API request. To minimize requests count we will load most info in one request.\n   * This API loads recommendations, comments, recommend button clicks etc, so we get almost everything needed\n   * for initial rendering\n   */\n  initialLoading: () =>\n    makeRequest(\n      'GET',\n      `${process.env.API_URL}/api/v1/Comments/loadVuukle`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleId: widgetStore.article.id,\n        globalRecommendation: articlesStore.global,\n        host: widgetStore.article.host,\n        pageSize: commentsStore.toLoad,\n        start: 0,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token\n    ),\n  post: (\n    commentText: string,\n    toxicity: number,\n    spam: number,\n    parentId: number = 0,\n    parentTimestamp: number = 0,\n    lang: string = 'en'\n  ): Promise<any> =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Comments/post`,\n      {\n        comment: {\n          commentText,\n          parentId,\n          parentTimestamp,\n          spamValue: Math.round(spam),\n          toxicity: Math.round(toxicity),\n\n          apiKey: widgetStore.apiKey,\n          articleAvatar: widgetStore.article.img,\n          articleId: widgetStore.article.id,\n          host: widgetStore.article.host,\n          lang,\n          tag: widgetStore.article.tags,\n          title: widgetStore.article.title,\n          uri: widgetStore.article.url,\n        },\n        r: hashCode(commentText),\n        s: hashCode(commentText + widgetStore.apiKey),\n      },\n      undefined,\n      userStore.token\n    ).then(\n      (response): any => {\n        if (!response.success) {\n          throw new Error(Array.isArray(response.errors) ? response.errors[0] || 'unknown' : 'unknown');\n        }\n        return response;\n      }\n    ),\n\n  edit: (commentId: number, commentText: string): Promise<any> =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Comments/editComment`,\n      {\n        commentId,\n        commentText,\n\n        apiKey: widgetStore.apiKey,\n        host: widgetStore.article.host,\n        r: hashCode(commentText),\n        s: hashCode(commentText + widgetStore.apiKey),\n      },\n      undefined,\n      userStore.token\n    ).then(\n      (response): any => {\n        if (!response.success) {\n          throw new Error(Array.isArray(response.errors) ? response.errors[0] || 'unknown' : 'unknown');\n        }\n        return response;\n      }\n    ),\n\n  changeStatus: (id: number) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Comments/setCommentStatus`,\n      {\n        commentIDs: [id],\n        state: 1,\n      },\n      'application/json',\n      userStore.token\n    ),\n};\n\nexport const authAPIs = {\n  /** Get user details by token */\n  me: () => makeRequest('POST', `${process.env.API_URL}/api/v1/Auth/me`, {}, 'application/json', undefined, true),\n  /** Create new user */\n  register: (name: string, email: string, password: string, ageRange: number = 0) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Auth/signupUser`,\n      {\n        ageRange,\n        email,\n        name,\n        password,\n        pictureUrl: null,\n      },\n      'application/json',\n      undefined,\n      true\n    ),\n  /** Authenticate user using password */\n  withPassword: (email: string, password: string) =>\n    makeRequest('POST', `${process.env.API_URL}/api/v1/Auth`, { email, password }, 'application/json', undefined, true),\n  /** Kind of anonymous authentication */\n  withoutPassword: (name: string, email: string, avatar: string = '') =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/Auth/sso`,\n      { email, name, avatar },\n      'application/json',\n      undefined,\n      true\n    ),\n};\n\nexport const perspectiveAPIs = {\n  spamModel: new PerspectiveAPI('SPAM'),\n  toxicModel: new PerspectiveAPI('TOXICITY'),\n};\n\nexport const commentLikesAPIs = {\n  delete: (commentId: number) =>\n    makeRequest(\n      'DELETE',\n      `${process.env.API_URL}/api/v1/comment_likes`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        commentId,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n  post: (commentId: number) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/comment_likes`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        commentId,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n};\n\nexport const commentFlagAPIs = {\n  post: (commentId: number) =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/comment_flags/setCommentFlag`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleId: widgetStore.article.id,\n        commentId,\n        host: widgetStore.article.host,\n      },\n      'application/json',\n      userStore.token\n    ),\n};\n\n// TODO: we can optimize it but switching DELETE and POST only\nexport const recommendAPIs = {\n  delete: () =>\n    makeRequest(\n      'DELETE',\n      `${process.env.API_URL}/api/v1/recommend_ratings/ratings`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n  post: () =>\n    makeRequest(\n      'POST',\n      `${process.env.API_URL}/api/v1/recommend_ratings/ratings`,\n      {\n        apiKey: widgetStore.apiKey,\n        articleAvatar: widgetStore.article.img,\n        articleId: widgetStore.article.id,\n        host: widgetStore.article.host,\n        tag: widgetStore.article.tags,\n        title: widgetStore.article.title,\n        uri: widgetStore.article.url,\n      },\n      'application/json',\n      userStore.token,\n      true\n    ),\n};\n\nexport default {\n  commentsApis,\n};\n","/** Porthole Messaging */\ndeclare var Porthole: any;\nexport let windowProxy: any;\n\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production') {\n  windowProxy = new Porthole.WindowProxy(window.location.href);\n} else {\n  // For test environment\n  windowProxy = {\n    addEventListener: (data: any) => undefined,\n    post: (data: Object) => console.log(data), // tslint:disable-line\n  };\n}\n","/**\n * @file Initialize widget communication listener.\n * Many of the messages can change our state, so we import states here and change them as it's easier to setup just\n * one listener and control everything within it\n */\nimport { makeDevLog } from '@vuukle/utils';\nimport path from 'ramda/src/path';\nimport { windowProxy } from 'services/communication';\n\nimport { authStore, userStore } from 'modules/Auth/stores';\nimport CommentsStore from 'modules/CommentList/store';\nimport widgetStore from 'stores/widgetStore';\n\nexport function initializeListener() {\n  windowProxy.addEventListener((event: any) => {\n    if (!(event.data instanceof Object)) {\n      return; // Message is invalid\n    }\n\n    makeDevLog('log', 'comments porthole event received', event);\n\n    if (path(['data', 'authenticateUser'], event) instanceof Object) {\n      /** Authenticate user */\n      authenticateUser(event.data.authenticateUser);\n    } else if (path(['data', 'modalData', 'auth'], event)) {\n      /** Modal Authorization */\n      userStore.authorizeSilently();\n    } else if (path(['data', 'syncWidget', 'votes'], event)) {\n      /** Sync recommendations based on information from other widgets */\n      widgetStore.recommendCount = event.data.syncWidget.votes;\n      widgetStore.isRecommended = event.data.syncWidget.voted;\n    } else if (path(['data', 'loadComment'], event)) {\n      CommentsStore.getCommentDetailsByID(event.data.loadComment);\n    }\n  });\n}\n\n/** Authenticate user based on received message */\nfunction authenticateUser(authenticationObject: any) {\n  const { name, email, avatar, token, signOut } = authenticationObject;\n\n  // Sign out user if called with signOut key\n  if (signOut) {\n    return authStore.signOut();\n  }\n\n  if (\n    typeof name === 'string' &&\n    typeof email === 'string' &&\n    name.length > 2 &&\n    email.length > 3 &&\n    !userStore.isAuthorized\n  ) {\n    // Authenticate user with name and email\n    authStore.signInWithoutPassword(name, email, avatar);\n  } else if (typeof token === 'string') {\n    // Authenticate user with token\n    userStore.token = token;\n    userStore.authorizeWithToken();\n  }\n}\n","import { slugify } from '@vuukle/utils';\nimport { userStore } from 'modules/Auth/stores';\nimport widgetStore from 'stores/widgetStore';\nimport { windowProxy } from './windowProxy';\n\nif (process.env.NODE_ENV === 'development') {\n  (window as any).windowProxy = windowProxy;\n}\n\nexport const syncInitialLoadPorthole = (response: any): void => {\n  if (response instanceof Object) {\n    let shares;\n    try {\n      shares = JSON.parse(response.data.shares);\n    } catch (err) {\n      shares = {};\n    }\n\n    windowProxy.post({\n      articleData: {\n        commentCount: response.data.article.commentCount,\n        recommendations: response.data.recommendCount,\n        shares,\n      },\n    });\n  }\n};\n\n/**\n * Open modal app with render option 'login'\n * @param {Object} additionalParams - this param will be returned after modal app will be closed\n */\nexport const openModalWidgetAuth = (additionalParams: object = {}) =>\n  windowProxy.post({\n    modalData: {\n      hideModal: false,\n      type: 'login',\n      ...additionalParams,\n    },\n  });\n\n/**\n * Open modal app with render option 'profile' (show user activity on current site)\n * @param {Object} profile - it can be of two types user data from comments and from user profile\n */\nexport const openModalWidgetProfile = (profile: {\n  id: string;\n  points: number | string;\n  avatar: string | null;\n  name: string;\n}) =>\n  windowProxy.post({\n    modalData: {\n      hideModal: false,\n      profile,\n      type: 'profile',\n    },\n  });\n\n/**\n * Share message to open modal window with link text so user can copy it\n * @param {string} link - url that user should see to copy\n */\nexport const openLinkInModal = (link: string) =>\n  windowProxy.post({\n    modalData: {\n      hideModal: false,\n      link,\n      type: 'link',\n    },\n  });\n\n/**\n * Once comment added share some data with publisher\n * Message way: comments widget -> platform -> publisher\n * @param comment - comment object from response\n */\nexport function logCommentToPublisher(comment: { commentText: string; name: string }) {\n  windowProxy.post({\n    syncWidget: { commentAdded: true },\n    vuukle_event: {\n      comment: comment.commentText,\n      email: userStore.details && userStore.details.email,\n      eventType: 'comment',\n      name: comment.name,\n    },\n  });\n}\n\n/**\n * Once comment added log action to WordPress so it can create comment in a WP dashboard\n * Message way: comments -> platform -> wordPress\n * @param comment\n */\nexport function logCommentToWordPress(comment: {\n  id: number;\n  name: string;\n  userId: string;\n  commentText: string;\n  parentId: number;\n}) {\n  const dateAdded = new Date().toISOString();\n\n  windowProxy.post({\n    vuukle_event: {\n      comment_ID: comment.id,\n      comment_agent: '',\n      comment_approved: 1,\n      comment_author: comment.name,\n      comment_author_IP: '',\n      comment_author_url: `https://user.vuukle.com/by/${slugify(comment.name)}/${comment.userId}/`,\n      comment_content: comment.commentText,\n      comment_date: dateAdded,\n      comment_date_gmt: dateAdded,\n      comment_karma: '',\n      comment_parent: comment.parentId,\n      comment_post_ID: widgetStore.article.id,\n      comment_type: '',\n      email: userStore.details && userStore.details.email,\n      eventType: 'wpSync',\n      user_id: comment.userId,\n    },\n  });\n}\n\n/**\n * Send event action to platform.js(vuukle-initialization) so it will handle it and send event to server\n * @param  {string} action - action name\n * @return {void}\n */\nexport const reportEvent = (\n  action:\n    | 'share_facebook'\n    | 'share_twitter'\n    | 'share_pinterest'\n    | 'share_linkedin'\n    | 'login_facebook'\n    | 'login_google'\n    | 'login_twitter'\n    | 'login_disqus'\n    | 'view_page'\n    | 'view_comments'\n) => windowProxy.post({ reportEvent: { action, label: 'Comments' } });\n\n/**\n * Call SSO parent window method\n * @return {void}\n */\nexport const callSSOMethod = (): void => windowProxy.post({ callSSO: true });\n\n/** Sync recommendations votes with other widgets */\nexport const syncRecommendations = (voted: boolean, votes: number): void =>\n  windowProxy.post({ syncWidget: { voted, votes } });\n","export * from './windowProxy';\nexport * from './initListener';\nexport * from './sendEvents';\n","import { action, computed, decorate, observable, reaction, when } from 'mobx';\nimport pathOr from 'ramda/src/pathOr';\nimport { commentFlagAPIs, commentLikesAPIs, commentsApis } from 'services/apis';\n\nimport { authStore, userStore } from 'modules/Auth/stores';\nimport Alert from 'stores/models/Alert';\nimport translation from 'stores/translationStore';\nimport widgetStore from 'stores/widgetStore';\n\nimport { decodeString, kFormatter, makeSafeHTML, removeHTMLTags } from '@vuukle/utils';\nimport { callSSOMethod, openLinkInModal, openModalWidgetAuth, openModalWidgetProfile } from 'services/communication';\nimport { timeAgo } from 'utils';\n\nexport class Comment {\n  /** Is comment in progress */\n  public loading: boolean = false;\n  /** Comment alert to notify about actions progress  */\n  public bottomAlert = new Alert();\n  public topAlert = new Alert();\n  /** Replies feed */\n  public replies: Comment[] = [];\n  /** Comment Details */\n  public data: Comments.Comment;\n  /** Show reply textarea */\n  public showReplyBox: boolean = false;\n  /** Comment is minimized */\n  public collapsed: boolean = false;\n  /** Determines if user liked comment */\n  public currentSessionLiked: boolean = false;\n  /** Comment is hidden but alerts are visible */\n  public hidden: boolean = false;\n  /** Determines if comment is in edit mode. Users can edit their comments */\n  @observable\n  private _editMode: boolean = false;\n\n  constructor(comment: Comments.ServerComment, private selfRemove: (item: Comment) => void) {\n    this.data = {\n      authorType: comment.authorType,\n      commentText: comment.commentText,\n      createdTimestamp: comment.createdTimestamp,\n      id: comment.id,\n      likeCount: comment.likeCount,\n      name: decodeString(comment.name),\n      parentId: comment.parentId,\n      pictureUrl: comment.pictureUrl,\n      state: comment.state,\n      timeago: timeAgo(comment.createdTimestamp),\n      topComment: comment.topComment,\n      userId: comment.userId,\n      userPoints: kFormatter(comment.userPoints || 0),\n    };\n\n    try {\n      this.data.name = decodeURIComponent(this.data.name);\n    } catch (e) {} // tslint:disable-line\n\n    /** Exit from edit mode once user sign out */\n    reaction(\n      () => userStore.isAuthorized,\n      (authorized) => {\n        if (!authorized) {\n          this._editMode = false;\n        }\n      }\n    );\n  }\n\n  /**\n   * Determines if currently logged in user is owner of that comment\n   * @return {boolean} true if authenticated user is owner of the comments, otherwise false\n   */\n  get isOwner(): boolean {\n    return this.data.userId === (userStore.details && userStore.details.id);\n  }\n\n  /**\n   * Get edit mode state\n   * @return {boolean} true if toggled and false if not\n   */\n  public get editMode(): boolean {\n    return this._editMode;\n  }\n\n  /** Switch edit mode */\n  public set editMode(enable: boolean) {\n    /** If comment has replies show alert that edit mode is disabled */\n    if (this.replies.length > 0) {\n      this.topAlert.value = { type: 'warning', message: translation.messages.editingWithReplies, timeout: 3000 };\n      return;\n    }\n\n    this._editMode = enable;\n  }\n\n  @action\n  public toggleEditMode = () => {\n    this.editMode = !this.editMode;\n  };\n\n  /**\n   * Open Authentication for user based on configuration\n   * @return {void}\n   */\n  public openAuth = (): void => {\n    if (authStore.withSSO) {\n      return callSSOMethod();\n    }\n\n    // If not SSO then call modal auth\n    return openModalWidgetAuth();\n  };\n\n  /** format comment text for render inside rect */\n  public getCommentTextForRender = () => makeSafeHTML(this.data.commentText);\n  /** format comment text to get only text without any html tags etc. */\n  public getCommentTextOnly = () => removeHTMLTags(this.data.commentText);\n\n  /**\n   * @public\n   * @description like or dislike comment based on current state\n   * @return {void}\n   */\n  // TODO: create decorator for methods with required authorization\n  public toggleLike = (): void => {\n    /** This action requires authentication */\n    if (!userStore.isAuthorized) {\n      return this.openAuth();\n    }\n\n    if (this.data.userId === (userStore.details && userStore.details.id)) {\n      this.bottomAlert.value = { message: translation.messages.ownCommentVote, type: 'error', timeout: 3500 };\n    } else {\n      this.currentSessionLiked ? this.dislike() : this.like();\n    }\n  };\n\n  /**\n   * @public\n   * @description open modal to share comment\n   * @param {'google' | 'twitter' | 'linkedin' | 'facebook'} social - social network to share\n   * @return {void}\n   */\n  public share = (social: 'twitter' | 'linkedin' | 'facebook' | 'link'): void => {\n    const openWindow = (shareLink: string) =>\n      window.open(\n        shareLink,\n        'shareWindow',\n        'status = 1, height = 500, width = 420, resizable = 0, top=200, left=400, screenX=400, screenY=200'\n      );\n\n    const url = encodeURIComponent(widgetStore.article.url);\n    const title = encodeURIComponent(widgetStore.article.title);\n    const commentText = this.data.commentText.replace(/<(?:.|\\n)*?>/gm, '').substring(0, 75);\n\n    switch (social.toLocaleLowerCase()) {\n      case 'twitter':\n        openWindow(`https://twitter.com/share?url=${url}&text=${this.data.name} commented: '${commentText}...'`);\n        return;\n      case 'linkedin':\n        openWindow(`https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${title}&summary=&source=`);\n        return;\n      case 'link':\n        const urlInstance = new URL(widgetStore.article.url);\n        urlInstance.hash = `#commentID-${this.data.id}`;\n        openLinkInModal(urlInstance.href);\n        return;\n      default:\n        openWindow(`https://www.facebook.com/sharer/sharer.php?u=${url}`);\n        return;\n    }\n  };\n\n  /**\n   * @public\n   * @description Report comment\n   * @return {Promise}\n   */\n  public report = async (): Promise<any> => {\n    /** If user is not authenticated first ask to sign in */\n    if (!userStore.isAuthorized) {\n      return this.openAuth();\n    }\n\n    /** Ask to confirm action */\n    const flag = window.confirm(translation.messages.flagQuestion);\n    if (!flag) {\n      return;\n    }\n\n    try {\n      const reportResponse = await commentFlagAPIs.post(this.data.id);\n      if (reportResponse.success) {\n        this.topAlert.value = { message: translation.messages.flaggedMessage, type: 'success', timeout: 3500 };\n      } else if (reportResponse.result === 'Already flagged') {\n        this.topAlert.value = { message: translation.messages.alreadyReported, type: 'warning', timeout: 3500 };\n      }\n    } catch (err) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error('commentFlagAPIs.post error:', err); // tslint:disable-line\n      }\n    }\n  };\n\n  /**\n   * @public\n   * @description Reject comment - available only for moderators action.\n   * On success just remove self.\n   * @return {void}\n   */\n  public reject = async (): Promise<any> => {\n    // Check if user is logged in using password\n    if (!pathOr(false, ['details', 'isPasswordEntered'], userStore)) {\n      this.topAlert.value = {\n        message: `The following alert message is present when user is logged not by password:\n To perform this action authorization requires password.\n Please authenticate into your account using password on\n <a href=\"https://admin.vuukle.com\" target=\"_blank\">admin.vuukle.com</a> and reload this page.`,\n        type: 'warning',\n      };\n    } else {\n      // If user is authenticated with a password then try to reject the comment\n      try {\n        const statusChangeResponse = await commentsApis.changeStatus(this.data.id);\n        if (statusChangeResponse.success) {\n          this.topAlert.value = { message: '[Moderator] Comment has been rejected.', type: 'success', timeout: 2000 };\n          setTimeout(() => this.selfRemove(this), 2000);\n        }\n      } catch (err) {\n        this.topAlert.value = {\n          message: 'Comment has not been rejected. Please try again later or contact with support.',\n          timeout: 4000,\n          type: 'error',\n        };\n      }\n    }\n  };\n\n  /**\n   * On comment edit callback\n   * @param {object} comment - server comment\n   * @return void\n   */\n  public editComment = (comment: Comments.ServerComment): void => {\n    this.data.commentText = comment.commentText;\n\n    if (comment.state === 2) {\n      this.hidden = true;\n      this.topAlert.value = { type: 'warning', message: translation.messages.moderationMessage, timeout: 4000 };\n      // Once this alert closed remove comment itself from the feed since it's on moderation now\n      when(() => !this.topAlert.value, () => this.selfRemove(this));\n    }\n    this.editMode = false;\n  };\n\n  /**\n   * @public\n   * @param {Object} comment - Server response comment to add as reply\n   * @return {void}\n   */\n  public addReply = (comment: Comments.ServerComment): void => {\n    this.replies.unshift(new Comment(comment, this.remove));\n  };\n\n  /**\n   * @public\n   * @description show/hide textarea to reply\n   * @return {void}\n   */\n  public toggleReplyBox = (): void => {\n    this.showReplyBox = !this.showReplyBox;\n  };\n\n  /**\n   * @public\n   * @description Minimize comment UI\n   * @return {void}\n   */\n  public collapse = (): void => {\n    this.collapsed = !this.collapsed;\n  };\n\n  /**\n   * @public\n   * @description Send message to the platform to open commenter profile\n   * @return {void}\n   */\n  public showCommenterProfile = (): void =>\n    openModalWidgetProfile({\n      avatar: this.data.pictureUrl,\n      id: this.data.userId,\n      name: this.data.name,\n      points: this.data.userPoints,\n    });\n\n  /**\n   * @private\n   * @description Remove reply from this comment by instance\n   * @param {Comment} reply - reply instance to find and remove\n   * @return {void}\n   */\n  public remove = (reply: Comment): void => {\n    this.replies = this.replies.filter((replyItem) => replyItem !== reply);\n  };\n\n  /**\n   * @private\n   * @description like comment\n   * @return {Promise<boolean>>}\n   */\n  @action\n  private like = async (): Promise<boolean> => {\n    this.data.likeCount++;\n    this.currentSessionLiked = true;\n\n    try {\n      const likeResponse = await commentLikesAPIs.post(this.data.id);\n      if (likeResponse.success) {\n        return true;\n      }\n      throw new Error(likeResponse.errors[0]);\n    } catch (err) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error('commentLikesAPIs.post error', err); // tslint:disable-line\n      }\n      this.data.likeCount--;\n      this.bottomAlert.value = {\n        message:\n          err.message === 'cant_vote_for_own_comment'\n            ? translation.messages.ownCommentVote\n            : translation.messages.alreadyVoted,\n        type: 'error',\n      };\n      return false;\n    }\n  };\n\n  /**\n   * @private\n   * @description dislike comment\n   * @return {Promise<boolean>>}\n   */\n  @action\n  private dislike = async (): Promise<boolean> => {\n    this.data.likeCount--;\n    this.currentSessionLiked = false;\n\n    try {\n      await commentLikesAPIs.delete(this.data.id);\n      return true;\n    } catch (err) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error('commentLikesAPIs.delete error', err); // tslint:disable-line\n      }\n      return false;\n    }\n  };\n}\n\ndecorate(Comment, {\n  bottomAlert: observable,\n  collapsed: observable,\n  data: observable,\n  loading: observable,\n  replies: observable,\n  showReplyBox: observable,\n  topAlert: observable,\n\n  isOwner: computed,\n\n  addReply: action,\n  collapse: action,\n  editComment: action,\n  reject: action,\n  remove: action,\n  showCommenterProfile: action,\n  toggleReplyBox: action,\n});\n\nexport default Comment;\n","import { makeDevLog } from '@vuukle/utils';\nimport { action, decorate, observable } from 'mobx';\nimport { commentsApis } from 'services/apis';\nimport urlSearchParams from 'services/urlSearchParams';\nimport Comment from './CommentItem';\n\nexport type sortingType = 'Latest' | 'MostUpVotes' | 'ReverseChrono' | 'TopComment' | 'MostReplied';\n\nexport enum SortingType {\n  get_latest = 'get_latest',\n  get_most_up_votes = 'get_most_up_votes',\n  get_reverse_chrono = 'get_reverse_chrono',\n  get_top_comment = 'get_top_comment',\n  get_most_replied = 'get_most_replied',\n  Latest = 'get_latest',\n  MostUpVotes = 'get_most_up_votes',\n  ReverseChrono = 'get_reverse_chrono',\n  TopComment = 'get_top_comment',\n  MostReplied = 'get_most_replied',\n}\n\n/** MobX Comments Store */\nexport class CommentsStore {\n  /** Total Comments for article widget has been loaded */\n  public totalComments: number = 0;\n  /** Main comments array. Replies created inside each comment: Comment[] > Comment[] */\n  public comments: Comment[] = [];\n  public selectedComment: Comment | undefined;\n  /** Comments are in loading state */\n  public loading: boolean = true;\n  /** If more comments available. Used to know if it's needed to show 'Load More' button */\n  public moreAvailable: boolean = true;\n  /**\n   * ===========================================================================================\n   * Configurable from outside\n   * @description these params can be configured by article owner using query string inside url\n   * ===========================================================================================\n   */\n  /** Default sorting to load comments */\n  public sorting: SortingType = SortingType.Latest;\n  /** Comments adding are in sync with WordPress. Used to sync comments with WP dashboard */\n  public syncWithWP: boolean;\n  /** How many comments to load */\n  public toLoad: number;\n\n  constructor() {\n    /** Get configuration from query string */\n    this.syncWithWP = urlSearchParams.get('wpSync') === 'true';\n    this.toLoad = parseInt(urlSearchParams.get('commentsToLoad') || '5', 10);\n  }\n\n  /**\n   * @public\n   * @description Remove comment from this.comments\n   * @param {Comment} commentInstance - Comment class instance to remove from array\n   * @returns {void}\n   */\n  public removeComment = (commentInstance: Comment): void => {\n    this.comments = this.comments.filter((comment) => comment !== commentInstance);\n  };\n\n  /**\n   * @public\n   * @param  {string} ID - comment ID to get details for\n   * @return {Promise<void>}\n   */\n  public async getCommentDetailsByID(ID: string): Promise<void> {\n    if (!ID) {\n      return;\n    }\n    try {\n      const response = await commentsApis.getByID(ID);\n      if (response.success && response.data) {\n        this.selectedComment = CommentsStore.createCommentWithReplies(\n          response.data,\n          () => (this.selectedComment = undefined)\n        );\n      }\n    } catch (err) {\n      makeDevLog('error', 'getCommentDetailsByID err', err);\n    }\n  }\n\n  /**\n   * @name changeSorting\n   * @description On comments sorting change\n   * @public\n   * @param {'get_latest'|'get_top_comment'|'get_most_replied'|'get_most_up_votes'|'get_reverse_chrono'} sortBy -\n   * sorting order\n   * @returns {void}\n   */\n  public changeSorting = async (sortBy: SortingType): Promise<void> => {\n    // Remove selected comment as user not interested anymore\n    if (this.selectedComment instanceof Comment) {\n      this.selectedComment = undefined;\n    }\n    /** Don't do anything if sorting is same */\n    if (sortBy === this.sorting) {\n      return;\n    }\n    return this.loadComments(0, sortBy);\n  };\n\n  /**\n   * @name loadMoreComments\n   * @description Load more comments\n   * @public\n   */\n  public loadMoreComments = async (): Promise<void> => this.loadComments(this.comments.length);\n\n  /**\n   * @name addComment\n   * @description add comment to feed if sorting is latest and if user successfully posted comment\n   * @param {Object} comment - comment from server response to add\n   * @returns {void}\n   */\n  public addComment = (comment: Comments.ServerComment): void => {\n    // We just add main comment to feed in case it's latest sorting\n    if (this.sorting === SortingType.Latest) {\n      this.comments.unshift(new Comment(comment, this.removeComment));\n    }\n  };\n\n  /**\n   * @name initialLoadSuccess\n   * @description First of all we have initial load API request which returns many details.\n   * This method is called once we received response from this initial API call request.\n   * @param {<Object>[]} comments - server comments array with replies inside\n   * @param {number} totalComments - total comments under article from server response\n   * @returns {void}\n   */\n  // TODO: move this to part of `commentsApis.initialLoading().then` and probably make createCommentsWithRecursion static\n  public initialLoadSuccess = (comments: Comments.ServerComment[], totalComments: number): void => {\n    this.comments = CommentsStore.createCommentsWithRecursion(comments, this.removeComment);\n    this.moreAvailable = comments.length >= this.toLoad;\n    this.totalComments = totalComments;\n    this.loading = false;\n  };\n\n  /**\n   * @private\n   * @description Change comments sorting and get sorted comments from the server\n   * @param {number} start - from which comment to load\n   * @param {'get_latest'|'get_top_comment'|'get_most_replied'|'get_most_up_votes'|'get_reverse_chrono'} sortBy -\n   * sorting order\n   * @returns {void}\n   */\n  @action\n  private loadComments = async (start: number = 0, sortBy: SortingType = this.sorting): Promise<void> => {\n    commentsApis.get.cancel();\n    if (this.sorting !== sortBy) {\n      this.comments = [];\n      this.sorting = sortBy;\n      this.moreAvailable = false;\n    }\n\n    this.loading = true;\n\n    try {\n      const response: any = await commentsApis.get.send({ sortBy, start });\n\n      const { comments } = response.data;\n      this.comments.push(\n        ...CommentsStore.createCommentsWithRecursion(comments.items as Comments.ServerComment[], this.removeComment)\n      );\n      this.moreAvailable = comments.items.length >= 5;\n    } catch (error) {\n      if (process.env.NODE_ENV === 'development') {\n        // tslint:disable-next-line\n        console.warn('Comments API sorting error:', error.message);\n      }\n    } finally {\n      this.loading = false;\n    }\n  };\n\n  /**\n   * Utils to create comments items using recursion to process replies too\n   * @param {Array} comments - server comments array\n   * @param {function} removeFn - commend remove function\n   * @return {Object[]} created comments array\n   */\n  private static createCommentsWithRecursion(\n    comments: Comments.ServerComment[],\n    removeFn: (comment: Comment) => void\n  ): Comment[] {\n    if (!Array.isArray(comments) || comments.length <= 0) {\n      return [];\n    }\n\n    return comments.map((comment) => {\n      const CommentItem = new Comment(comment, removeFn);\n      CommentItem.replies.push(...CommentsStore.createCommentsWithRecursion(comment.replies, CommentItem.remove));\n      return CommentItem;\n    });\n  }\n\n  private static createCommentWithReplies(comment: Comments.ServerComment, removeFn: (comment: Comment) => void) {\n    const CommentItem = new Comment(comment, removeFn);\n    CommentItem.replies.push(...CommentsStore.createCommentsWithRecursion(comment.replies, CommentItem.remove));\n    return CommentItem;\n  }\n}\n\ndecorate(CommentsStore, {\n  comments: observable,\n  loading: observable,\n  moreAvailable: observable,\n  selectedComment: observable,\n  sorting: observable,\n  totalComments: observable,\n\n  changeSorting: action,\n  getCommentDetailsByID: action,\n  initialLoadSuccess: action,\n  loadMoreComments: action,\n  removeComment: action,\n});\n\nexport default new CommentsStore();\n","import { action, computed, decorate, observable } from 'mobx';\nimport path from 'ramda/src/path';\n\nimport { makeRequest } from '@vuukle/utils';\nimport { getToken, removeToken, removeUserApiKey, saveToken, setUserApiKey } from 'services/auth';\nimport translation from 'stores/translationStore';\nimport widgetStore from 'stores/widgetStore';\n\nexport class UserStore {\n  /** Determines if user details are loading */\n  public loading: boolean = false;\n  /** User details we receive from server */\n  public details: User | null = null;\n  /**\n   * User session token.\n   * We need to save token not only in the cookies but here too, because some browsers block\n   * 3rd party cookies (from iframe) and we can't be sure that created cookie will be available to use, but\n   * we can't provide session for user with duration for at lest before page reloading\n   * @default null\n   */\n  @observable\n  private _token: string | null = null;\n\n  constructor() {\n    /** Authenticate user automatically is token exists */\n    if (this.token) {\n      this.authorizeSilently();\n    }\n  }\n\n  /** Token getter */\n  public get token(): string | null {\n    const cookieToken = getToken();\n\n    if (typeof cookieToken === 'string') {\n      if (typeof this._token === 'string' && cookieToken !== this._token) {\n        this._token = cookieToken;\n      } else if (!this._token) {\n        this._token = cookieToken;\n      }\n    }\n\n    return this._token;\n  }\n\n  /** Token setter */\n  public set token(token: string | null) {\n    if (!token) {\n      removeToken();\n      this._token = null;\n    } else {\n      saveToken(token);\n      this._token = token;\n    }\n  }\n\n  /**\n   * @description Determines if user is authorized\n   * @return {boolean}\n   */\n  get isAuthorized(): boolean {\n    return !!(this.details && this.details.id && this.details.email);\n  }\n\n  /**\n   * @public\n   * @description Get user details by token\n   * @return {Promise<void>>}\n   */\n  public authorizeWithToken = async (): Promise<boolean> => {\n    this.loading = true;\n\n    try {\n      const authResponse = await makeRequest(\n        'POST',\n        `${process.env.API_URL}/api/v1/Auth/me`,\n        {},\n        'application/json',\n        this.token\n      );\n      if (\n        authResponse.success &&\n        typeof path(['data', 'email'], authResponse) === 'string' &&\n        typeof path(['data', 'name'], authResponse) === 'string'\n      ) {\n        this.details = {\n          avatar: authResponse.data.pictureUrl || null,\n          email: authResponse.data.email,\n          id: authResponse.data.userId,\n          isModerator: authResponse.data.siteList.includes(widgetStore.article.host),\n          isPasswordEntered: authResponse.data.isPasswordEntered,\n          name: authResponse.data.name,\n          points: authResponse.data.points,\n        };\n        setUserApiKey(authResponse.data.userId); // save user API key in cookies for analytics usage\n        return true;\n      }\n\n      throw new Error(`[api/v1/Auth/me]. Response: ${JSON.stringify(authResponse)}. Token: ${this.token}`);\n    } catch (err) {\n      this.forgetUser();\n      throw new Error(translation.messages.invalidLogin);\n    } finally {\n      this.loading = false;\n    }\n  };\n\n  /**\n   * @public\n   * @description clear user session\n   * @return {void}\n   */\n  public forgetUser = (): void => {\n    removeUserApiKey();\n    this.token = null;\n    this.details = null;\n  };\n\n  /**\n   * @public\n   * @name authorizeSilently\n   * @description Silent authorization method to do in background if token exists in cookies.\n   * For example when we detected use token on page load\n   * @return {void}\n   */\n  public authorizeSilently = async (): Promise<boolean> => {\n    try {\n      if (!this.token) {\n        throw new Error('no_token');\n      }\n      await this.authorizeWithToken();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n}\n\ndecorate(UserStore, {\n  authorizeSilently: action,\n  authorizeWithToken: action,\n  details: observable,\n  forgetUser: action,\n  isAuthorized: computed,\n  loading: observable,\n});\n\nexport default new UserStore();\n","import { getTextFromHTML, truncateString } from '@vuukle/utils';\nimport translation from 'stores/translationStore';\n\n/**\n * Generate hash code from string.\n * Used to generate hash to send comment and prevent many comments sending from some program etc.\n * so hash will be different for every sendComment API request\n * https://gitlab.com/vuukle/widget-comments/issues/65\n * @returns {number}\n */\nexport function hashCode(str: string): number {\n  let hash = 0;\n  for (let i = 0; i < str.length; i += 1) {\n    hash = ~~((hash << 5) - hash + str.charCodeAt(i)); // tslint:disable-line\n  }\n  return hash;\n}\n\nfunction timeAgoBuilder() {\n  const monthsOptions = { month: 'short', day: 'numeric' };\n  const roundTime = (val: number): string => String(Math.abs(Math.round(val)));\n\n  return (date: number): string => {\n    const time = new Date(date * 1000);\n\n    const now = new Date();\n    const seconds = ((now.getTime() - time.getTime()) * 0.001) >> 0; // tslint:disable-line\n    const minutes = seconds / 60;\n    const hours = minutes / 60;\n    const days = hours / 24;\n\n    return (\n      (seconds < 60 && translation.timeAgo.seconds) ||\n      (minutes < 60 && translation.timeAgo.minutes.replace('%d', roundTime(minutes))) ||\n      (hours < 24 && translation.timeAgo.hours.replace('%d', roundTime(hours))) ||\n      (days < 28 && translation.timeAgo.days.replace('%d', roundTime(days))) ||\n      (days < 365 && time.toLocaleDateString(translation.timeAgo.locale, monthsOptions)) ||\n      `${roundTime(days / 365)}y`\n    );\n  };\n}\n\nexport const timeAgo = timeAgoBuilder();\n\n/**\n * @name createTitleExcerpt\n * @param {string} title to truncate\n * @param {number} maxLength - max string length\n * @return {string} excerpt\n */\nexport const createTitleExcerpt = (title: string, maxLength: number) =>\n  truncateString(getTextFromHTML(title), maxLength);\n","/**\n * @file Store to manage recommended articles section\n */\nimport { action, computed, decorate, observable } from 'mobx';\nimport urlSearchParams from 'services/urlSearchParams';\nimport { createTitleExcerpt } from 'utils';\n\n/**\n * Recommended Articles Store\n * Used to store articles related config and articles items itself\n */\nexport class ArticlesStore {\n  /**\n   * Recommended articles are disabled (not needed to render).\n   * @default false\n   */\n  public disabled: boolean = false;\n  /**\n   * Global Articles Recommendations.\n   * This configuration item determines if publisher wants to load recommendations from all domains available by api key\n   * @default false\n   */\n  public global: boolean = false;\n  /**\n   * Publisher can configure custom articles link structure (protocol,additional paths etc.)\n   * For example it can be: 'http://[url]', 'https://www.[url]' etc.\n   * And we just replace '[url]' with actual article url we receive from the server\n   * @default 'http://[url]' @see ArticlesStore.constructor\n   */\n  public link: string = 'http://[url]';\n  /**\n   * Publisher can enable vertical cards styles\n   * @default false We show horizontal styled cards by default\n   */\n  public isVerticalCards: boolean = false;\n  /** 🔧State */\n  @observable private items: Articles.Article[] = [];\n  // If we have more than 6 articles we should set this to false,\n  // so expand button will be shown and will toggle this to true. This is needed only once.\n  @observable private articlesToShow: number = 6;\n\n  constructor() {\n    this.disabled = urlSearchParams.get('hideArticles') === 'true';\n    /** If articles disabled we don't need to do anything */\n    if (this.disabled) {\n      return;\n    }\n\n    this.global = urlSearchParams.get('gr') === 'true';\n    this.isVerticalCards = urlSearchParams.get('totWideImg') === 'true';\n    this.link = urlSearchParams.get('link') || 'http://[url]';\n  }\n\n  /**\n   * Get articles list.\n   * @return {Array<Object>} First 6 articles or full list based on this.articlesExpanded\n   */\n  get articles(): Articles.Article[] {\n    return this.items.slice(0, this.articlesToShow);\n  }\n\n  /**\n   * Set article items.\n   * @param {Array<Object>} articles list we received from the server response from loadVuukle\n   * @return {void}\n   */\n  set articles(articles: Articles.Article[]) {\n    if (this.disabled) {\n      return;\n    }\n    this.items = articles;\n  }\n\n  @computed\n  get moreArticlesAvailable() {\n    return this.items.length > this.articlesToShow;\n  }\n\n  /** Show more articles */\n  public showMoreArticles = () => {\n    return (this.articlesToShow = this.items.length);\n  };\n\n  /**\n   * Parse and set articles received from the server\n   * @param {Array<object>} articles - articles received from server\n   * @return {void}\n   */\n  public setArticlesFromServer = (articles: Articles.ServerArticle[], articlesToShowBeforeExpand: number): void => {\n    // ⬇ We don't need to do anything if articles disabled\n    if (this.disabled) {\n      return;\n    }\n\n    this.articlesToShow = articlesToShowBeforeExpand;\n\n    this.articles = articles.map(\n      (article): Articles.Article => {\n        return {\n          articleAvatar: article.articleAvatar,\n          articleId: article.articleId,\n          commentCount: article.commentCount,\n          excerpt: createTitleExcerpt(article.title, 120),\n          host: article.host,\n          title: article.title,\n          uri: `${process.env.API_URL}/stats/External?source=talk_of_town&url=${this.link.replace(\n            '[url]',\n            article.uri\n          )}`,\n        };\n      }\n    );\n  };\n}\n\ndecorate(ArticlesStore, {\n  setArticlesFromServer: action,\n  showMoreArticles: action,\n});\n\nexport default new ArticlesStore();\n","import * as Cookies from 'js-cookie';\n\nexport const getOptions = () => (process.env.NODE_ENV === 'production' ? { domain: '.vuukle.com' } : {});\n\n/** Get user token */\nexport const getToken = () => Cookies.get(process.env.SESSION_COOKIE_NAME || 'token');\n/** Set user token */\nexport const saveToken = (token: string) =>\n  Cookies.set(process.env.SESSION_COOKIE_NAME || 'token', token, { ...getOptions(), expires: 365 });\n/** Remove user token */\nexport const removeToken = () => Cookies.remove(process.env.SESSION_COOKIE_NAME || 'token', getOptions());\n/** Save user API key for analytics usage (platform) */\nexport const setUserApiKey = (apiKey: string) => Cookies.set('uid', apiKey, { ...getOptions(), expires: 365 });\n/** Remove user API key on sign out so analytics won't use old session */\nexport const removeUserApiKey = () => Cookies.remove('uid', getOptions());\n\nexport default {\n  getToken,\n  removeToken,\n  removeUserApiKey,\n  saveToken,\n  setUserApiKey,\n};\n","/* eslint max-len:0 */\n// Helpers\nimport mergeDeepRight from 'ramda/src/mergeDeepRight';\nimport urlSearchParams from 'services/urlSearchParams';\n// tslint:disable max-line-length object-literal-sort-keys\nconst initialCustomText = {\n  common: {\n    name: 'Name',\n    email: 'Email',\n    password: 'Password',\n    ageRange: 'Select your age range',\n    writeComment: 'Write a comment',\n    blankName: 'Name cannot be blank',\n    blankEmail: 'Email cannot be blank',\n    blankPassword: 'Password cannot be blank',\n    blankComment: 'Comment cannot be blank',\n    invalidEmail: 'Invalid email, please try again.',\n    invalidName: 'The name should not contain numbers, URL, special characters or offensive words',\n    reply: 'Reply', // used for action in comment/reply 'Reply [1]'\n    replies: 'Replies',\n    report: 'Report Comment',\n    or: 'or', // used in sign in [SOCIAL] or [NAME, EMAIL]\n    to: 'to', // not needed // used in reply item - [reply icon] to Ross\n    recommend: 'Recommend', // used for recommend item in header of widget\n    recommended: 'Recommended', // used for recommend item in header of widget - when user recommended article\n    readMore: 'Read more', // comment / reply text truncate to show more\n    showLess: 'show less', // comment / reply text truncate to show less\n    points: 'points',\n    point: 'point', // added\n    // badges\n    moderator: 'Mod',\n    // Buttons\n    signIn: 'Sign in',\n    signUp: 'Sign up',\n    signInWith: 'Sign in with:',\n    signInWithVuukle: 'or sign in using Vuukle:',\n    signUpWithVuukle: 'or sign up with Vuukle:',\n    share: 'Share',\n    collapse: 'Collapse',\n    expand: 'Expand',\n    cancel: 'Cancel',\n  },\n  profile: {\n    myProfile: 'My Profile',\n    myComments: 'My Comments',\n    signOut: 'Sign out',\n    removeComment: 'Remove comment',\n  },\n  toxicity: {\n    long: 'probability perceived as \"toxic\"', // toxicity message for big screens: [percentage] + [long] -> 90% likely to be perceived as \"toxic\"\n    messageTooLong: 'Characters limit exceeded. Please try to make your comment shorter or remove some symbols.', // this might be displayed if user added long text with not common symbols which might be calculated as few symbols in length\n  },\n  messages: {\n    charlimits: 'The moderator has set a character limit up to',\n    alreadyReported: 'You have already reported this comment to the moderator.',\n    commentsClosed: 'Comments are now closed.',\n    alreadySubmitted: 'Your comment has been already submitted for this article.',\n    almostSame: 'Your previous comment was almost the same. Please write something different.', // Previous comment and new one are not passing difference of 25%\n    flaggedMessage: 'Thanks, the moderator will be notified',\n    errorSubmitting: 'There was an error while saving your comment, please refresh the page and try again',\n    invalidLogin: 'Invalid login, please login again',\n    spammerComment: 'Your comment is under moderation',\n    moderationMessage:\n      'Your comment is under moderation and will be approved by the site moderator. Thank you for your patience.',\n    spamComment:\n      'Seems like you are posting a spam comment. If you still want to send it just click on \"POST\" button again.',\n    errorContactVuukle: 'Error! Please try again, if the issue persists, let our team know on support@vuukle.com',\n    // ADDED\n    ownCommentVote: 'You cannot vote your own comment', // When user want to vote on his/her own comment\n    alreadyVoted: 'You have already voted. You can click again to remove your vote.',\n    commentAdded: 'Comment is successfully posted', // Comment has been added successfuly\n    noComments: 'Be the first to comment', // Used to show 'Be the first to comment' instead comments if there is no comments\n    noCommentsInSorting: 'No comments here', // Used in sorting category ( not latest ) to tell user that there is no comments\n    flagQuestion: 'Do you want to report this comment?', // Used in confirm window after click on flag icon\n    toxicityLimit: 'You cannot post comments with toxic probability of more than %d', // %d - is number position. i.e. if limit is 70% message will be: You cannot post comments with toxicity value more than 70%\n    emailExists: 'This email is already in use',\n    signInQuestion: 'Already have an account?',\n    signUpQuestion: `Don't have an account?`,\n    missingPassword: 'Do not have a password?',\n    passwordReset: 'Click here to reset password',\n    incorrectDetails: 'Incorrect email or password.',\n    blockedIp: 'Please contact site owner as they have banned your ip.',\n    blockedEmail: 'Please contact site owner as they have banned your email.',\n    editingWithReplies: 'You cannot edit comments with replies.',\n    protectedAction: 'This action requires password authentication.',\n  },\n  timeAgo: {\n    seconds: 'now',\n    minutes: '%dm',\n    hours: '%dh',\n    days: '%dd',\n    months: '%dmo',\n    years: '%dY',\n    locale: 'en-US',\n  },\n  shareIcons: {\n    facebook: 'Share using Facebook',\n    linkedin: 'Share using Linkedin',\n    twitter: 'Share using Twitter',\n  },\n  login: {\n    facebook: 'Login using Facebook',\n    google: 'Login using Google',\n    twitter: 'Login using Twitter',\n    disqus: 'Login using Disqus',\n  },\n  commentText: {\n    when1: 'Comment',\n    whenX: 'Comments',\n  },\n  sorting: {\n    editorsPick: `Editor's Pick`,\n    latest: 'Latest',\n    more: 'More', // dropdown for filters: mostReplied, mostDisliked, oldest\n    mostLiked: 'Best',\n    mostReplied: 'Most Replied',\n    oldest: 'Oldest',\n    sortBy: 'Sort by:',\n  },\n  buttons: {\n    addComment: 'Add Comment',\n    like: 'Like',\n    liked: 'Liked',\n    loadMore: 'Load more comments',\n    post: 'Post',\n    showMoreArticles: 'Show more articles',\n  },\n  footer: {\n    addVuukle: 'Add Vuukle',\n    privacy: 'Privacy',\n  },\n  recommendedStories: 'Talk of the town',\n};\n\nlet translation = initialCustomText;\n(() => {\n  const customTextFromUrl = urlSearchParams.get('customText');\n  if (!customTextFromUrl) {\n    return;\n  }\n  try {\n    translation = mergeDeepRight(initialCustomText, JSON.parse(customTextFromUrl));\n  } catch (err) {\n    console.warn('localization_text param is not correct JSON string'); // tslint:disable-line\n  }\n})();\n\nexport default translation;\n","import { action, computed, decorate, observable } from 'mobx';\n\nexport interface IAlert {\n  type: 'error' | 'warning' | 'success';\n  message: string;\n  timeout?: number;\n}\n\n/** This class is responsible for showing/hiding/removing alerts for other components */\nclass Alert {\n  @observable\n  private alertValue: IAlert | null = null;\n  private alertTimeout: any; // Timeout saved in this variable for further canceling\n\n  @computed\n  get value(): IAlert | null {\n    return this.alertValue;\n  }\n\n  set value(alertObj: IAlert | null) {\n    clearTimeout(this.alertTimeout);\n    this.alertValue = alertObj;\n    if (alertObj) {\n      this.alertTimeout = setTimeout(() => (this.alertValue = null), alertObj.timeout || 7000);\n    }\n  }\n\n  /** Just a simple helper to easily pass close function as a callback */\n  public close = () => (this.value = null);\n}\n\ndecorate(Alert, {\n  close: action,\n});\n\nexport default Alert;\n","import { isOffensive, isValidEmail, isValidName } from '@vuukle/utils';\nimport { action, computed, decorate, observable } from 'mobx';\nimport { authAPIs } from 'services/apis';\nimport { callSSOMethod, reportEvent } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\nimport translation from 'stores/translationStore';\nimport userStore from './userStore';\n\nexport class AuthStore {\n  /** Determines if API is in progress and we are waiting for data */\n  public inProgress: boolean = false;\n  /** Error happened */\n  public error: string | null = null;\n  /** Configurable values */\n  public readonly facebookEnabled: boolean = urlSearchParams.get('fAuth') !== 'false'; // show social auth\n  public readonly googleEnabled: boolean = urlSearchParams.get('gAuth') !== 'false';\n  public readonly twitterEnabled: boolean = urlSearchParams.get('tAuth') !== 'false';\n  public readonly disqusEnabled: boolean = urlSearchParams.get('dAuth') !== 'false';\n  public readonly withVuukle: boolean = urlSearchParams.get('vuukleAuth') !== 'false'; // show Vuukle auth\n  public readonly withPassword: boolean = urlSearchParams.get('passwordAuth') === 'true'; // Password Auth + Available form to sign up\n  /** Publisher SSO(auth method) is enabled only if everything is turned off */\n  public get withSSO() {\n    return (\n      !this.facebookEnabled && !this.googleEnabled && !this.twitterEnabled && !this.disqusEnabled && !this.withVuukle\n    );\n  }\n\n  constructor() {\n    /** Handler for publishers using widget inside webView to authorize users */\n    (window as any).signInUser = (name: any, email: any, avatar: any = '') => {\n      if (\n        typeof name === 'string' &&\n        typeof email === 'string' &&\n        name.length > 2 &&\n        email.length > 3 &&\n        !userStore.isAuthorized\n      ) {\n        this.signInWithoutPassword(name, email, avatar);\n      }\n    };\n  }\n\n  /**\n   * @name signOut\n   * @description remove user session and token\n   * @see {@link userStore#forgetUser}\n   * @return {void}\n   */\n  public signOut = userStore.forgetUser;\n\n  /** Detect if cookies allowed */\n  get isCookiesAllowed() {\n    document.cookie = 'vuukle_cookie_test=true';\n    const cookiesAllowed = document.cookie.indexOf('vuukle_cookie_test') !== -1;\n    document.cookie = 'vuukle_cookie_test=true; expires=Thu, 01-Jan-1970 00:00:01 GMT';\n    return cookiesAllowed;\n  }\n\n  /**\n   * @public\n   * @name signIn\n   * @description Login user using API\n   * @param {string} email\n   * @param {string} password\n   * @return {Promise<boolean>} - true or false based if process is successful or not\n   */\n  public signIn = async (email: string, password: string): Promise<boolean> => {\n    this.inProgress = true;\n    this.error = null;\n    try {\n      /** Check CORS limits */\n      if (!this.isCookiesAllowed) {\n        await this.openCORSModal();\n      }\n\n      const response = await authAPIs.withPassword(email, password);\n      if (!response.isPasswordEntered || Array.isArray(response.errors)) {\n        throw new Error(translation.messages.incorrectDetails);\n      }\n\n      userStore.token = response.token;\n      await userStore.authorizeWithToken();\n      return true;\n    } catch (error) {\n      this.error = error.message;\n      return false;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /**\n   * @public\n   * @name signInWithoutPassword\n   * @description User login method without password\n   * @param {string} name\n   * @param {string} email\n   * @param {string} avatar\n   * @return {Promise<boolean>} - `true` is everything is successful and `false` if something failed\n   */\n  public signInWithoutPassword = async (name: string, email: string, avatar: string = ''): Promise<boolean> => {\n    this.inProgress = true;\n    this.error = null;\n\n    name = name.trim();\n    email = email.trim();\n\n    try {\n      /** Check CORS limits */\n      if (!this.isCookiesAllowed) {\n        await this.openCORSModal();\n      }\n\n      await this.validateFields(name, email);\n      const response = await authAPIs.withoutPassword(name, email, avatar);\n\n      userStore.token = response.data.authTicket.token;\n      await userStore.authorizeWithToken();\n      return true;\n    } catch (error) {\n      this.error = error.message;\n      return false;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /**\n   * @public\n   * @name signUp\n   * @description Sign up user by validating and sending data to server\n   * @param {string} name\n   * @param {string} email\n   * @param {string} password\n   */\n  public signUp = async (name: string, email: string, password: string): Promise<boolean> => {\n    this.inProgress = true;\n    this.error = null;\n\n    name = name.trim();\n    email = email.trim();\n\n    try {\n      /** Check CORS limits */\n      if (!this.isCookiesAllowed) {\n        await this.openCORSModal();\n      }\n\n      await this.validateFields(name, email);\n      const response = await authAPIs.register(name, email, password);\n      if (response.success) {\n        userStore.token = response.data.authTicket.token;\n        return userStore.authorizeWithToken();\n      } else {\n        throw new Error(response.errors[0] || 'Please try again later');\n      }\n    } catch (error) {\n      this.error = error.message;\n      return false;\n    } finally {\n      this.inProgress = false;\n    }\n  };\n\n  /**\n   * @private\n   * @name openCORSModal\n   * @description This is method is used to try to bypass cors limit in some browsers\n   * for example our iframe can't use cookies while our site wasn't visited, we open modal to force user\n   * to visit site and then we can work with cookies\n   */\n  private openCORSModal = async () => {\n    const authModal = window.open(\n      `${window.location.origin}${process.env.AUTH_CONFIRMATION_HTML}`,\n      'authVerificationModal',\n      'location=0,status=0,width=800,height=400'\n    );\n\n    return new Promise((resolve, reject) => {\n      const oauthInterval = window.setInterval(() => {\n        if (authModal && authModal.closed) {\n          window.clearInterval(oauthInterval);\n          resolve();\n        }\n      }, 1000);\n    });\n  };\n\n  /**\n   * @public\n   * @description Open modal window to authorize user\n   * @param {'facebook' | 'google' | 'twitter'} network - social network to log in with\n   * @return {void}\n   */\n  public signInWithSocial = (network: 'facebook' | 'google' | 'twitter' | 'disqus'): void => {\n    reportEvent(`login_${network}` as 'login_facebook' | 'login_google' | 'login_twitter' | 'login_disqus');\n\n    const options = {\n      callback: () => userStore.authorizeWithToken(),\n      path: '',\n    };\n\n    switch (network) {\n      case 'google':\n        options.path = process.env.GOOGLE_LOGIN_LINK || '';\n        break;\n      case 'twitter':\n        options.path = process.env.TWITTER_LOGIN_LINK || '';\n        break;\n      case 'disqus':\n        options.path = process.env.DISQUS_LOGIN_LINK || '';\n        break;\n      default:\n        options.path = process.env.FACEBOOK_LOGIN_LINK || '';\n        break;\n    }\n\n    const oauthWindow = window.open(options.path, 'socialAuth', 'location=0,status=0,width=800,height=400');\n    const oauthInterval = window.setInterval(() => {\n      if (oauthWindow && oauthWindow.closed) {\n        window.clearInterval(oauthInterval);\n        options.callback();\n      }\n      // tslint:disable-next-line\n    }, 1000);\n  };\n\n  /**\n   * @name callSSO\n   * @description sending message to platform.js with command to open SSO method\n   * @return {void}\n   */\n  public openSSO = (): void => callSSOMethod();\n\n  /**\n   * @name closeAlert\n   * @description Remove alert\n   * @return {void}\n   */\n  public closeAlert = (): void => {\n    this.error = null;\n  };\n\n  /**\n   * @private\n   * @name validateFields\n   * @description validate fields before calling APIs which might create new user\n   * @param {string} name\n   * @param {string} email\n   */\n  private validateFields = (name: string, email: string) =>\n    new Promise((resolve, reject) => {\n      if (!isValidName(name) || isOffensive(name)) {\n        reject(new Error(translation.common.invalidName));\n      }\n      if (!isValidEmail(email)) {\n        reject(new Error(translation.common.invalidEmail));\n      }\n      resolve();\n    });\n}\n\ndecorate(AuthStore, {\n  error: observable,\n  inProgress: observable,\n  withSSO: computed,\n\n  closeAlert: action,\n  signIn: action,\n  signInWithoutPassword: action,\n  signOut: action,\n  signUp: action,\n});\n\nexport default new AuthStore();\n","import * as Cookies from 'js-cookie';\nimport { action, decorate, observable } from 'mobx';\nimport { recommendAPIs } from 'services/apis';\nimport { syncRecommendations } from 'services/communication';\nimport urlSearchParams from 'services/urlSearchParams';\n\nexport class WidgetStore {\n  /** Article recommendation */\n  public recommendCount: number = 0;\n  public recommendInProgress: boolean = false;\n  public isRecommended: boolean = false;\n  /** Comments widget language */\n  public language: string;\n  /** Publisher API key */\n  public apiKey: string;\n  public commentingDisabled: boolean = false;\n  /** Article Details */\n  public article: {\n    refHost: string;\n    /** Article host */\n    host: string;\n    /** Article ID */\n    id: string;\n    /** Article title/heading */\n    title: string;\n    /** Article URL */\n    url: string;\n    /** Article image */\n    img: string;\n    /** Article tags */\n    tags: string;\n    /** Article author */\n    author: string;\n  };\n  public theme: {\n    /** Determines if widget is loaded on dark theme */\n    darkMode: boolean;\n    /** Primary widget color */\n    color: string | null;\n    /** Custom font-family */\n    font: string | null;\n  };\n\n  /** Config we will use for transliteration */\n  // transliterationConfig: Transliteration = TransliterationStore;\n  constructor() {\n    this.language = urlSearchParams.get('lang') || 'en';\n    this.apiKey = urlSearchParams.get('apiKey') || '';\n\n    this.article = {\n      author: urlSearchParams.get('author') || '',\n      host: urlSearchParams.get('host') || '',\n      id: urlSearchParams.get('articleId') || '',\n      img: urlSearchParams.get('img') || '',\n      refHost: urlSearchParams.get('refHost') || '',\n      tags: urlSearchParams.get('tags') || '',\n      title: urlSearchParams.get('title') || '',\n      url: urlSearchParams.get('url') || '',\n    };\n\n    this.theme = {\n      color: urlSearchParams.get('color'),\n      darkMode: urlSearchParams.get('darkMode') === 'true',\n      font: urlSearchParams.get('font'),\n    };\n\n    if (process.env.NODE_ENV === 'development') {\n      // this.apiKey = '7c2920a3-81a0-4758-8000-d2cc1b892ceb';\n      // this.apiKey = 'de9d8063-9a97-4608-b612-9353a2b07c7b';\n      // this.apiKey = '8f291d07-5577-46be-ae2e-b4782cc3a034'; // nbc-2\n      // this.article = {\n      //   // host: 'testertest.test.com',\n      //   host: 'cranky-lumiere-e81cb7.netlify.com',\n      //   id: '6698817',\n      //   title: 'test title 610%!@#$%^&*()_+',\n      //   // url: 'https://testertest.test.com',\n      //   url: 'https://cranky-lumiere-e81cb7.netlify.com/',\n      //   img: 'https://via.placeholder.com/400x400',\n      //   tags: '',\n      //   author: 'Author',\n      // };\n      // this.article = {\n      //   host: 'nbc-2.com',\n      //   id: '39104899',\n      //   author: '',\n      //   img: '',\n      //   tags: 'News - AP-National',\n      //   title: 'Trump Jr. mocks sexual assault claim against Kavanaugh',\n      //   url: 'http://www.nbc-2.com/story/39104899/trump-jr-mocks-sexual-assault-claim-against-kavanaugh',\n      // };\n    }\n\n    /** Check in cookies if user recommended this article */\n    this.isRecommended = !!Cookies.get(`${this.article.host}&${this.article.id}_recommend`);\n  }\n\n  public recommend = async (): Promise<boolean | void> => {\n    this.recommendInProgress = true;\n\n    try {\n      const alreadyVoted = this.isRecommended;\n      /** Toggle recommendation */\n      this.isRecommended = !this.isRecommended;\n      /** If user already voted than decrease count of recommendations, remove cookie and send request */\n      if (alreadyVoted) {\n        if (this.recommendCount > 0) {\n          this.recommendCount--;\n        }\n        Cookies.remove(`${this.article.host}&${this.article.id}_recommend`);\n        /** Toggle recommend button in other widgets after we updated values */\n        syncRecommendations(this.isRecommended, this.recommendCount);\n\n        await recommendAPIs.delete();\n      } else {\n        /** Else increase counter, create cookie and send request */\n        this.recommendCount++;\n        Cookies.set(`${this.article.host}&${this.article.id}_recommend`, 'true', { expires: 30 });\n        /** Toggle recommend button in other widgets after we updated values */\n        syncRecommendations(this.isRecommended, this.recommendCount);\n\n        await recommendAPIs.post();\n      }\n    } catch (error) {\n      return false;\n    } finally {\n      this.recommendInProgress = false;\n    }\n  };\n}\n\ndecorate(WidgetStore, {\n  commentingDisabled: observable,\n  isRecommended: observable,\n  recommendCount: observable,\n  recommendInProgress: observable,\n\n  recommend: action,\n});\n\nexport default new WidgetStore();\n","class PerspectiveAPI {\n  // Flow Types\n  private readonly model: 'TOXICITY' | 'SPAM';\n  private xhr: XMLHttpRequest = new XMLHttpRequest();\n\n  /**\n   * Create PerspectiveAPI item with model\n   * @param  {'TOXICITY' | 'SPAM'} model - PerspectiveAPI model to get scores.\n   * See: https://github.com/conversationai/perspectiveapi/blob/master/api_reference.md\n   */\n  constructor(model: 'TOXICITY' | 'SPAM' = 'TOXICITY') {\n    this.model = model;\n  }\n\n  /**\n   * Send model based request to Perspective to get scores and little format response\n   * @param  {string} comment - Comment text to analyze\n   * @return {Promise}       - returns Promise with formatted response or error text\n   */\n  public send = (comment: string): Promise<object | string> => {\n    this.cancel(); // Cancel pending request and start new one\n\n    const req = this.xhr;\n    const reqParams = {\n      comment: { text: comment },\n      languages: ['en'],\n      requestedAttributes: { [this.model]: {} },\n    };\n\n    return new Promise((resolve, reject) => {\n      if (!comment) {\n        reject('empty comment');\n      }\n\n      req.open(\n        'POST',\n        `https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze?key=${process.env.PERSEPECTIVE_API_KEY}`,\n        true /* async: */\n      );\n      req.setRequestHeader('Content-type', 'application/json');\n\n      req.onload = () => {\n        try {\n          const response = JSON.parse(req.response);\n          if (response.error) {\n            reject(response.error.message);\n          }\n          resolve({ value: Math.round(response.attributeScores[this.model].summaryScore.value * 100) });\n        } catch (err) {\n          reject(err);\n        }\n      };\n      req.onerror = () => reject(req.statusText);\n      req.onabort = () => reject('request cancelled'); // resolve promise on cancel method 👎\n\n      req.send(JSON.stringify(reqParams));\n    });\n  };\n\n  /**\n   * Cancel pending request - we use this because we have realtime 'TOXICITY'\n   * model checking and to don't store previous requests\n   * just cancel it and start new\n   * @return {void}\n   */\n  public cancel = (): void => this.xhr.abort();\n}\n\nexport default PerspectiveAPI;\n","export interface IGIFItem {\n  type: string;\n  id: string;\n  slug: string;\n  url: string;\n  title: string;\n  images: {\n    fixed_height_still: { url: string; width: number; height: number };\n    preview: { url: string; width: number; height: number };\n    fixed_width_small: { url: string; width: number; height: number };\n    fixed_width_still: { url: string; width: number; height: number };\n    original: { url: string; width: number; height: number };\n    fixed_height_small: { url: string; width: number; height: number };\n    downsized_medium: { url: string; width: number; height: number };\n    // Check response if needed to add more\n  };\n}\n\nexport interface IGiphyResponse {\n  data: IGIFItem[];\n  pagination: {\n    total_count: number;\n    count: number;\n    offset: number;\n  };\n  meta: {\n    status: number;\n    msg: string;\n    response_id: string;\n  };\n}\n\n/**\n * Get Trending GIFs\n * @return {Promise<any>}\n */\nexport const getTrendingGIFs = (): Promise<IGiphyResponse> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open('GET', `https://api.giphy.com/v1/gifs/trending?limit=10&rating=g&api_key=${process.env.GIPHY_TOKEN}`);\n    req.send();\n    req.onload = () => {\n      if (req.status >= 200 && req.status < 300) {\n        resolve(JSON.parse(req.response));\n      } else {\n        reject(new Error(req.statusText));\n      }\n    };\n    req.onerror = () => reject(new Error(req.statusText));\n    req.onabort = () => reject(new Error('cancelled'));\n  });\n\n/**\n * Get trending GIFs\n * @param {string} searchQuery\n * @return {Promise<any>}\n */\nexport const getSearchGIFs = (searchQuery: string): Promise<IGiphyResponse> =>\n  new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open(\n      'GET',\n      `https://api.giphy.com/v1/gifs/search?limit=10&rating=g&q=${searchQuery}&api_key=${process.env.GIPHY_TOKEN}`\n    );\n    req.send();\n    req.onload = () => {\n      if (req.status >= 200 && req.status < 300) {\n        resolve(JSON.parse(req.response));\n      } else {\n        reject(new Error(req.statusText));\n      }\n    };\n    req.onerror = () => reject(new Error(req.statusText));\n    req.onabort = () => reject(new Error('cancelled'));\n  });\n","/**\n * @file urlSearchParams.ts\n * @description this is helper service to import URLSearchParams instead of creating it in every place\n * we need it\n */\nconst urlSearchParams: URLSearchParams = new URLSearchParams(window.location.search);\nexport default urlSearchParams;\n"],"sourceRoot":""}